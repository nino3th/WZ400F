<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.Common</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.Restricted.EvalReleaseLicense">
            <exclude/>
            <lastupdated>2/11/2003 2:44:54 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.LicenseBase">
            <exclude/>
            <lastupdated>2/11/2003 2:45:36 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.#ctor(System.String,System.String)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:50 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.LoadRunTimeLicense">
            <exclude/>
            <lastupdated>2/11/2003 2:45:52 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.IsValidLicenseFile">
            <exclude/>
            <lastupdated>2/11/2003 2:45:52 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.IsValidLicenseFile(System.Boolean)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:52 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.GetUnencryptedLicenseContents">
            <exclude/>
            <lastupdated>2/11/2003 2:45:52 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.DesignTimeCheck">
            <exclude/>
            <lastupdated>2/11/2003 2:45:44 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.RunTimeCheck(System.ComponentModel.LicenseContext,System.Type,System.Object)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:55 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.Dispose">
            <exclude/>
            <lastupdated>2/11/2003 2:45:46 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.CheckForCorrectFileLicense(NationalInstruments.Internal.FileLicense)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:38 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.ComponentRunTimeCheck(System.Type,System.Object,System.String)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:41 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.ShowUnLicensedBehavior(System.Type,System.Object)">
            <exclude/>
            <lastupdated>2/11/2003 2:46:01 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.IsCallingAssembly(System.Type,System.Type,System.Type)">
            <exclude/>
            <lastupdated>2/11/2003 2:46:01 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.IsCallingAssemblyUsingTypeCompare(System.Type,System.Type,System.Type)">
            <exclude/>
            <lastupdated>2/11/2003 2:46:01 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.IsCallingAssemblyUsingAssemblyCompare(System.Type,System.Type,System.Type)">
            <exclude/>
            <lastupdated>2/11/2003 2:46:01 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.RemoveVersion(System.String)">
            <exclude/>
            <lastupdated>3/24/2004 12:56:28 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseBase.GetLicenseFromHashTable(System.Type,System.Collections.Hashtable)">
            <exclude/>
            <lastupdated>3/24/2004 12:56:28 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.LicenseKey">
            <exclude/>
            <lastupdated>2/11/2003 2:45:46 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.MajorMinorAssemblyVersion">
            <exclude/>
            <lastupdated>3/24/2004 12:56:28 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.FileName">
            <exclude/>
            <lastupdated>3/24/2004 12:56:28 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.FileExists">
            <exclude/>
            <lastupdated>4/11/2005 10:53:33 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.DecryptedFileLicenseString">
            <exclude/>
            <lastupdated>3/24/2004 12:56:28 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseBase.LicenseType">
            <exclude/>
            <lastupdated>5/10/2004 1:28:10 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.EvalReleaseLicense.#ctor(System.String[],System.String[],System.String,System.String)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:03 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.EvalReleaseLicense.CheckForCorrectFileLicense(NationalInstruments.Internal.FileLicense)">
            <exclude/>
            <lastupdated>2/11/2003 2:44:58 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.EvalReleaseLicense.ComponentRunTimeCheck(System.Type,System.Object,System.String)">
            <exclude/>
            <lastupdated>2/11/2003 2:45:00 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.EvalReleaseLicense.ShowEvalBehavior(System.Type,System.Object,System.String)">
            <exclude/>
            <lastupdated>2/20/2003 2:40:56 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.EvalReleaseLicense.LicenseType">
            <exclude/>
            <lastupdated>2/20/2003 2:40:51 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IAnalogWaveformCollectionService`1">
            <exclude/>
            <lastupdated>11/20/2007 11:26:00 AM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformCollectionService`1.LoadData(`0[],System.Int32,System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>11/20/2007 11:26:00 AM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformCollectionService`1.LoadData(`0[],System.Int32,System.Int32,System.Int32[],System.Int32[])">
            <exclude/>
            <lastupdated>11/20/2007 11:26:00 AM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformCollectionService`1.GetData">
            <exclude/>
            <lastupdated>11/20/2007 11:26:00 AM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IAnalogWaveformService2`1">
            <exclude/>
            <lastupdated>10/25/2007 04:35:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService2`1.LoadData(`0[])">
            <exclude/>
            <lastupdated>10/25/2007 04:35:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService2`1.LoadData(`0[],System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>10/25/2007 04:35:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService2`1.RequestBuffer(System.Int32)">
            <exclude/>
            <lastupdated>10/25/2007 04:35:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService2`1.GetBuffer">
            <exclude/>
            <lastupdated>10/25/2007 04:35:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.IAnalogWaveformService2`1.Capacity">
            <exclude/>
            <lastupdated>12/10/2007 05:21:00 PM</lastupdated>
            <updatedby>Hexar Anderson</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalStateUtility">
            <summary>
            Provides helper methods related to digital states.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<see cref="T:NationalInstruments.DigitalStateUtility"/> provides methods related to digital states. For example, you can use
            <see cref="M:NationalInstruments.DigitalStateUtility.ToChar(NationalInstruments.DigitalState)"/> to obtain the character representation of a 
            <see cref="T:NationalInstruments.DigitalState"/>, or you can use <see cref="M:NationalInstruments.DigitalStateUtility.Test(NationalInstruments.DigitalState,NationalInstruments.DigitalState)"/> to test digital states.
            </remarks>
            <lastupdated>9/6/2005 2:20:36 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalStateUtility.Test(NationalInstruments.DigitalState,NationalInstruments.DigitalState)">
            <summary>
            Tests two digital states and returns whether the test failed.
            </summary>
            <param name="state1">
            The first <see cref="T:NationalInstruments.DigitalState"/> tested.
            </param>
            <param name="state2">
            The second <see cref="T:NationalInstruments.DigitalState"/> tested.
            </param>
            <returns>
            	<see langword="true"/> if the test failed.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<para>
            		<paramref name="digitalState1"/> is an invalid <see cref="T:NationalInstruments.DigitalState"/> value.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="digitalState2"/> is an invalid <see cref="T:NationalInstruments.DigitalState"/> value.
            </para>
            </exception>
            <remarks>
            The following table compares <paramref name="digitalState1"/> and <paramref name="digitalState2"/>.
            <para>
            		<image src="truthtable.gif"/>
            	</para>
            	<para>The following table lists the digital states and the corresponding characters.</para>
            	<list type="table">
            		<listheader>
            			<term>Digital State</term>
            			<description>Character</description>
            		</listheader>
            		<item>
            			<term>
            ForceDown
            </term>
            			<description>
            0
            </description>
            		</item>
            		<item>
            			<term>
            ForceUp
            </term>
            			<description>
            1
            </description>
            		</item>
            		<item>
            			<term>
            CompareLow
            </term>
            			<description>
            L
            </description>
            		</item>
            		<item>
            			<term>
            CompareHigh
            </term>
            			<description>
            H
            </description>
            		</item>
            		<item>
            			<term>
            ForceOff
            </term>
            			<description>
            Z
            </description>
            		</item>
            		<item>
            			<term>
            CompareUnknown
            </term>
            			<description>
            X
            </description>
            		</item>
            		<item>
            			<term>
            CompareOff
            </term>
            			<description>
            T
            </description>
            		</item>
            		<item>
            			<term>
            CompareValid
            </term>
            			<description>
            V
            </description>
            		</item>
            	</list>
            </remarks>
            <lastupdated>9/19/2005 6:27:13 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalStateUtility.ToChar(NationalInstruments.DigitalState)">
            <summary>
            Returns a character representing the <see cref="T:NationalInstruments.DigitalState"/>.
            </summary>
            <param name="state">
            The <see cref="T:NationalInstruments.DigitalState"/> value.
            </param>
            <returns>
            A <see cref="T:System.Char"/> representing the <see cref="T:NationalInstruments.DigitalState"/>.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="state"/> is an invalid <see cref="T:NationalInstruments.DigitalState"/> value.
            </exception>
            <remarks>
            The following table lists the digital states and the corresponding characters.
            <list type="table">
            		<listheader>
            			<term>Digital State</term>
            			<description>Character</description>
            		</listheader>
            		<item>
            			<term>
            ForceDown
            </term>
            			<description>
            0
            </description>
            		</item>
            		<item>
            			<term>
            ForceUp
            </term>
            			<description>
            1
            </description>
            		</item>
            		<item>
            			<term>
            CompareLow
            </term>
            			<description>
            L
            </description>
            		</item>
            		<item>
            			<term>
            CompareHigh
            </term>
            			<description>
            H
            </description>
            		</item>
            		<item>
            			<term>
            ForceOff
            </term>
            			<description>
            Z
            </description>
            		</item>
            		<item>
            			<term>
            CompareUnknown
            </term>
            			<description>
            X
            </description>
            		</item>
            		<item>
            			<term>
            CompareOff
            </term>
            			<description>
            T
            </description>
            		</item>
            		<item>
            			<term>
            CompareValid
            </term>
            			<description>
            V
            </description>
            		</item>
            	</list>
            </remarks>
            <lastupdated>9/19/2005 1:10:59 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexWaveformSampleCollection`1">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> objects.
            </summary>
            <typeparam name="TData">
            The type of the sample collection.
            </typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>11/21/2007 9:41:50 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.#ctor(NationalInstruments.ComplexWaveform{`0})">
            <exclude/>
            <lastupdated>25/10/2007 8:22:24 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.CopyTo(NationalInstruments.ComplexWaveformSample{`0}[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>11/21/2007 9:42:25 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>11/20/2007 5:27:46 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:12:28 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.IndexOf(NationalInstruments.ComplexWaveformSample{`0})">
            <summary>
            Searches for the <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> and returns the zero-based index of the first
            occurrence.
            </summary>
            <param name="sample">
            The <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> to locate.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="sample"/>.
            </returns>
            <lastupdated>11/21/2007 9:42:48 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSampleCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>11/21/2007 9:42:38 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSampleCollection`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> at the specified index. 
            </summary>
            <param name="sampleIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>
            The <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is greater than or equal to count.
            </para>
            </exception>
            <lastupdated>11/21/2007 9:42:15 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSampleCollection`1.Count">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.ComplexWaveformSampleCollection`1"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.ComplexWaveformSampleCollection`1"/>.
            </value>
            <lastupdated>11/21/2007 9:42:00 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSampleCollection`1.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>1/26/2009 12:09:57 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSampleCollection`1.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>1/26/2009 12:09:47 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveformSample`1">
            <summary>
            Represents a sample of an analog waveform.
            </summary>
            <typeparam name="TData">
            The type of the sample.
            </typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            An <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> represents a sample of an analog waveform. Use
            the <see cref="P:NationalInstruments.AnalogWaveformSample`1.Value"/> property to obtain the value contained
            in the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/>.
            Use the <see cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/> property to determine if the sample has a time stamp.
            If <see cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/> is <see langword="true"/>, 
            <see cref="P:NationalInstruments.AnalogWaveformSample`1.TimeStamp"/> returns the time stamp of the sample. 
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>6/28/2006 10:39:27 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSample`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:55:55 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample`1.Owner">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveform`1"/> that the sample came from.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.AnalogWaveform`1"/> of the
            <see cref="T:NationalInstruments.AnalogWaveformSample`1"/>.
            </value>
            <lastupdated>3/1/2006 5:54:51 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample`1.Value">
            <summary>
            Gets or sets the value of the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/>.
            </summary>
            <value>
            The value of the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/>. The default value is 0.
            </value>
            <lastupdated>3/1/2006 5:55:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp">
            <summary>
            Gets a value indicating if the analog sample has a time stamp.
            </summary>
            <value>
            	<see langword="true"/> if the analog sample has a <see cref="P:NationalInstruments.AnalogWaveformSample`1.TimeStamp"/>.
            </value>
            <lastupdated>3/1/2006 5:54:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample`1.TimeStamp">
            <summary>
            Gets the time at which the data was sampled.
            </summary>
            <value>
            The <see cref="T:System.DateTime"/> representing the time at which the data was sampled.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/>
            <lastupdated>6/20/2006 8:22:38 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample`1.PrecisionTimeStamp">
            <summary>
            Gets the time at which the data was sampled.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the time at which the data was sampled.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <remarks>
            Use <see cref="P:NationalInstruments.AnalogWaveformSample`1.PrecisionTimeStamp"/> instead of
            <see cref="P:NationalInstruments.AnalogWaveformSample`1.TimeStamp"/> to obtain 
            a time stamp with higher precision than <see cref="T:System.DateTime"/>.
            If the timing information in the <see cref="T:NationalInstruments.AnalogWaveform`1"/> 
            containing the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> was set using
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>, then this property
            will return a time stamp with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>, 
            the time stamp returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="P:NationalInstruments.AnalogWaveformSample`1.HasTimeStamp"/>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="T:NationalInstruments.PrecisionDateTime"/>
            <lastupdated>10/12/2006 1:00:27 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveformSampleCollection`1">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> objects.
            </summary>
            <typeparam name="TData">
            The type of the sample collection.
            </typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>6/28/2006 10:42:50 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection`1.CopyTo(NationalInstruments.AnalogWaveformSample{`0}[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>3/1/2006 5:58:22 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:59:00 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>3/1/2006 5:58:35 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection`1.IndexOf(NationalInstruments.AnalogWaveformSample{`0})">
            <summary>
            Searches for the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> and returns the zero-based index of the first
            occurrence.
            </summary>
            <param name="sample">
            The <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> to locate.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="sample"/>.
            </returns>
            <lastupdated>3/1/2006 5:58:53 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>3/1/2006 5:58:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> at the specified index. 
            </summary>
            <param name="sampleIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>
            The <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is greater than or equal to count.
            </para>
            </exception>
            <lastupdated>3/1/2006 5:57:41 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection`1.Count">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.AnalogWaveformSampleCollection`1"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.AnalogWaveformSampleCollection`1"/>.
            </value>
            <lastupdated>3/1/2006 5:57:26 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection`1.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>3/1/2006 5:57:32 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection`1.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>3/1/2006 5:57:29 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveform">
            <summary>
            Provides a data type that encapsulates analog data and timing information.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<filter name="VS2005|VS2008"><para>
            This class is obsolete.  Use <see cref="T:NationalInstruments.AnalogWaveform`1"/> for increased performance.
            </para></filter>
            	<para>
            		<see cref="T:NationalInstruments.AnalogWaveform"/> encapsulates a group of sampled analog values and timing information.  
            Each sample represents an analog value. Use <see cref="P:NationalInstruments.AnalogWaveform.Samples"/> to access the samples 
            in an analog waveform. Use <see cref="M:NationalInstruments.AnalogWaveform.GetRawData"/> to get the raw analog data and
            <see cref="M:NationalInstruments.AnalogWaveform.GetScaledData"/> to get the scaled analog data. 
            <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/> determines the scaling of the scaled data.</para>
            	<para>
            		<see cref="P:NationalInstruments.AnalogWaveform.Timing"/> specifies the timing information of the 
            <see cref="T:NationalInstruments.AnalogWaveform"/>. When you create an analog waveform using the constructor 
            or a factory method, such as <see cref="M:NationalInstruments.AnalogWaveform.FromArray1D(System.Array)"/>, 
            <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </para>
            	<para>
            Use <see cref="M:NationalInstruments.AnalogWaveform.FromArray1D(System.Array)"/> and <see cref="M:NationalInstruments.AnalogWaveform.FromArray2D(System.Array)"/>
            to construct an <see cref="T:NationalInstruments.AnalogWaveform"/> from primitive data types.  The data types supported by 
            <see cref="T:NationalInstruments.AnalogWaveform"/> are:
            <list type="bullet">
            			<item>
            				<description>
            					<see cref="T:System.Byte"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.SByte"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Decimal"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Single"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Double"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Int16"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.UInt16"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Int32"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.UInt32"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.Int64"/>
            				</description>
            			</item>
            			<item>
            				<description>
            					<see cref="T:System.UInt64"/>
            				</description>
            			</item>
            		</list>
            	</para>
            </remarks>
            <example>
            The following example demonstrates a method that displays all the analog values in an <see cref="T:NationalInstruments.AnalogWaveform"/>.
            Each line displays a new analog value.
            <code lang="VB.NET">
            Private Sub DisplayWaveform(ByVal waveform As AnalogWaveform)
                For Each sample As AnalogWaveformSample In waveform.Samples
                    Debug.WriteLine(String.Format("{0}", sample.Value))
                Next
            End Sub
            </code>
            </example>
            <example>
            	<code lang="C#">
            private void DisplayWaveform(AnalogWaveform waveform)
            {
                foreach(AnalogWaveformSample sample in waveform.Samples)
                {
                    Debug.WriteLine(String.Format("{0}", sample.Value));
                }
            }
            </code>
            </example>
            <seealso keyword="DataConverter" keywordType="mstudio">Converting Data Types Using Measurement Studio DataConverter</seealso>
            <lastupdated>9/16/2008 4:44:36 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.AnalogWaveform"/> with the specified sample type and count.
            </summary>
            <param name="sampleType">
            The <see cref="T:System.Type"/> of samples in the <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <param name="sampleCount">
            The number of samples in the <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <exception cref="T:System.ArgumentException">
            The <see cref="T:System.Type"/> specified by <paramref name="sampleType"/> is not supported by <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sampleType"/> is null.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 4:29:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:43 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.AnalogWaveform.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.AnalogWaveform"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>3/1/2006 4:57:29 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:01:40 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:03:09 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.CopySamples(NationalInstruments.AnalogWaveform,NationalInstruments.AnalogWaveform,System.Int32)">
            <summary>
            Copies the data of a source analog waveform to a destination analog waveform.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>3/1/2006 4:58:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.CopySamples(NationalInstruments.AnalogWaveform,System.Int32,NationalInstruments.AnalogWaveform,System.Int32,System.Int32)">
            <summary>
            Copies the data of a source analog waveform to a destination analog waveform with the specified indexes.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <param name="sourceSampleIndex">
            The source sample index.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </param>
            <param name="destinationSampleIndex">
            The destination sample index.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sourceSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>3/1/2006 4:59:58 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.FromArray1D(System.Array)">
            <summary>
            Creates an analog waveform from a one-dimensional array of values.
            </summary>
            <param name="array">
            The one-dimensional array of values.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform"/> containing the values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="array"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            The rank of <paramref name="array"/> is not one.
            </para>
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 5:00:16 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.FromArray2D(System.Array)">
            <summary>
            Creates an array of analog waveforms from a two-dimensional array of values.
            </summary>
            <param name="array">
            The two-dimensional array of values.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform"/> array containing the values.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="array"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            The rank of <paramref name="array"/> is not two.
            </para>
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 5:00:56 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetRawData">
            <summary>
            Returns the raw analog waveform data.
            </summary>
            <returns>
            The raw analog waveform data.
            </returns>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <lastupdated>3/1/2006 5:01:06 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetRawData(System.Int32,System.Int32)">
            <summary>
            Returns the raw analog waveform data using the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The raw analog waveform data.
            </returns>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample count.
            </exception>
            <lastupdated>3/16/2006 11:17:06 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetRawData(System.Int32,System.Int32,System.Array,System.Int32)">
            <summary>
            Copies the raw analog waveform data into an array using the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the raw data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the raw data into.
            </param>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>3/16/2006 11:21:00 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetScaledData">
            <summary>
            Returns the scaled analog waveform data.
            </summary>
            <returns>
            The scaled analog waveform data.
            </returns>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform.  Use <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            to set the scale mode of the data.
            </remarks>
            <seealso cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            <lastupdated>3/1/2006 5:01:30 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetScaledData(System.Int32,System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The scaled analog waveform data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample count.
            </exception>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform.  Use <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            to set the scale mode of the data.
            </remarks>
            <seealso cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            <lastupdated>3/16/2006 11:18:09 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetScaledData(System.Int32,System.Int32,System.Double[],System.Int32)">
            <summary>
            Copies the scaled analog waveform data into an array using the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform.  Use <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            to set the scale mode of the data.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <seealso cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/>
            <lastupdated>3/16/2006 11:22:20 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform.Timing"/>.
            </summary>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <lastupdated>3/1/2006 5:01:55 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> using the specified 
            sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <lastupdated>3/16/2006 11:23:33 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.GetTimeStamps(System.Int32,System.Int32,System.DateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> using the specified 
            sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>3/16/2006 11:24:27 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:45 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.Samples">
            <summary>
            Gets the samples of the analog waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.AnalogWaveformSampleCollection"/> containing the 
            <see cref="T:NationalInstruments.AnalogWaveformSample"/> objects.
            </value>
            <lastupdated>3/1/2006 4:53:57 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.DataType">
            <summary>
            Gets the data type of the samples contained in the analog waveform.
            </summary>
            <value>
            A <see cref="T:System.Type"/> that represents the data type of the samples in the <see cref="T:NationalInstruments.AnalogWaveform"/>.
            </value>
            <lastupdated>3/1/2006 4:53:46 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.UnitDescription">
            <summary>
            Gets or sets the unit of measurement, such as volts, of the analog waveform.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the unit of measurement of the <see cref="T:NationalInstruments.AnalogWaveform"/>. The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform.UnitDescription"/> reads and writes to
            <see cref="P:NationalInstruments.AnalogWaveform.ExtendedProperties"/> using the reserved key <format type="monospace">NI_UnitDescription</format>.
            </remarks>
            <lastupdated>3/16/2006 11:48:01 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.Timing">
            <summary>
            Gets or sets the timing information of the analog waveform.
            </summary>
            <value>
            The timing information of the analog waveform. The default value is <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>
            and the number of time stamps in <see cref="P:NationalInstruments.AnalogWaveform.Timing"/> is not equal to
            <see cref="P:NationalInstruments.AnalogWaveformSampleCollection.Count"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform.Timing"/> includes information that 
            encapsulates waveform timing.  
            </remarks>
            <lastupdated>3/16/2006 1:45:24 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.ScaleMode">
            <summary>
            Gets or sets the scale mode of the analog waveform.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.WaveformScaleMode"/> of the analog waveform. The default value is <see cref="P:NationalInstruments.WaveformScaleMode.None"/>.
            </value>
            <remarks>
            The <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/> represents the scale used to convert the raw data of the analog waveform 
            to scaled data.  <see cref="M:NationalInstruments.AnalogWaveform.GetScaledData"/> uses the
            <see cref="P:NationalInstruments.AnalogWaveform.ScaleMode"/> to determine how to scale the data of the analog waveform.
            </remarks>
            <lastupdated>3/1/2006 4:55:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.ExtendedProperties">
            <summary>
            Gets the extended properties for the analog waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/> that contains the extended
            properties of the analog waveform.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform.ExtendedProperties"/> stores key value pair information
            specific to the analog waveform. For example, drivers, such as the NI-DAQmx driver, populate <see cref="P:NationalInstruments.AnalogWaveform.ExtendedProperties"/> 
            with information specific to the data acquisition type. For more information, refer to your specific driver documentation.
            </remarks>
            <lastupdated>3/1/2006 4:53:51 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform.ChannelName">
            <summary>
            Gets or sets the name of the device channel from which the analog waveform was acquired.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the name of the device channel from which the 
            <see cref="T:NationalInstruments.AnalogWaveform"/> was acquired. The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform.ChannelName"/> reads and writes to
            <see cref="P:NationalInstruments.AnalogWaveform.ExtendedProperties"/> using the reserved key <format type="monospace">NI_ChannelName</format>.
            </remarks>
            <lastupdated>3/16/2006 1:35:55 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IAnalogWaveformService">
            <exclude/>
            <lastupdated>11/21/2005 11:11:17 AM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService.LoadData(System.Array,System.Type)">
            <exclude/>
            <lastupdated>11/21/2005 11:11:28 AM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService.LoadData(System.Array,System.Type,System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>11/28/2005 4:32:46 PM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.DigitalWaveformChangedEventHandler">
            <exclude/>
            <lastupdated>4/11/2005 11:22:22 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.PrecisionWaveformTiming">
            <summary>
            Provides a class that encapsulates waveform timing information with a higher
            precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<para>
            		<see cref="T:NationalInstruments.PrecisionWaveformTiming"/> provides a higher precision
            than <see cref="T:NationalInstruments.WaveformTiming"/> by using 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> for the time stamps and
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> for the time offset and interval.
            </para>
            	<para>
            		<see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> 
            indicates whether the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> has
            a <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>. 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/> is the time offset from the
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> to the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>. 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/>
            indicates whether the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> has a 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/> and whether
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> or
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            </para>
            	<para>
            Create a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> class by calling one of the following factory methods:
            <see cref="M:NationalInstruments.PrecisionWaveformTiming.CreateWithNoInterval(NationalInstruments.PrecisionDateTime)"/>,
            <see cref="M:NationalInstruments.PrecisionWaveformTiming.CreateWithRegularInterval(NationalInstruments.PrecisionTimeSpan)"/>, or
            <see cref="M:NationalInstruments.PrecisionWaveformTiming.CreateWithIrregularInterval(NationalInstruments.PrecisionDateTime[])"/>. 
            Use <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/> to specify no timing information. 
            </para>
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionDateTime"/>
            <seealso cref="T:NationalInstruments.PrecisionTimeSpan"/>
            <lastupdated>10/4/2006 9:07:47 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:31 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithNoInterval(NationalInstruments.PrecisionDateTime)">
            <summary>
            Creates a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> without an interval 
            with the specified time stamp.
            </summary>
            <param name="timeStamp">
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the start of an acquisition.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance with no interval.
            </returns>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition.  When using
            this method to create a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/> is set to zero,
            indicating that there is no time difference between the start of the acquisition and the
            time of the first sample.
            </remarks>
            <lastupdated>3/6/2007 5:09:33 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithNoInterval(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Creates a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> without an interval 
            and with the specified time offset.
            </summary>
            <param name="timeOffset">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance with no interval.
            </returns>
            <remarks>
            If you use this method to create a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            object, the value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> is not set,
            and <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> returns false.
            </remarks>
            <lastupdated>3/6/2007 5:10:04 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithNoInterval(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Creates a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> without an interval 
            with the specified time stamp and time offset.
            </summary>
            <param name="timeStamp">
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the start of an acquisition.
            </param>
            <param name="timeOffset">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance with no interval.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is greater than 
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is less than 
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>.
            </para>
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition and the
            <paramref name="timeOffset"/> represents the time difference between the start of
            the acquisition and the first sample.  If you use this method to create a 
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> is set to 
            <paramref name="timeStamp"/> and the value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>
            is set to <paramref name="timeOffset"/>.  The value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>
            is equal to the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>.
            </remarks>
            <lastupdated>3/6/2007 5:09:45 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithRegularInterval(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> 
            with the specified sample interval.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> between samples.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <lastupdated>10/4/2006 9:13:57 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithRegularInterval(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> 
            with the specified sample interval and time offset.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> between samples.
            </param>
            <param name="timeOffset">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> representing the time between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <remarks>
            If you use this method to create a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            object, the value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> is not set,
            and <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> returns false.
            </remarks>
            <lastupdated>3/6/2007 5:13:01 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithRegularInterval(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionDateTime)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> 
            with the specified sample interval and time stamp.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> between samples.
            </param>
            <param name="timeStamp">
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the start of an acquisition.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition.  When using
            this method to create a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/> is set to zero,
            indicating that there is no time difference between the start of the acquisition and the
            time of the first sample.
            </remarks>
            <lastupdated>3/6/2007 5:10:37 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithRegularInterval(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> 
            with the specified sample interval, time stamp, and time offset.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> between samples.
            </param>
            <param name="timeStamp">
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the start of an acquisition.
            </param>
            <param name="timeOffset">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleInterval"/> is negative.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is greater than 
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is less than 
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>.
            </para>
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition and the
            <paramref name="timeOffset"/> represents the time difference between the start of
            the acquisition and the first sample.  If you use this method to create a 
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> is set to 
            <paramref name="timeStamp"/> and the value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>
            is set to <paramref name="timeOffset"/>.  The value of <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>
            is equal to the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>.
            </remarks>
            <lastupdated>3/6/2007 5:11:10 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.CreateWithIrregularInterval(NationalInstruments.PrecisionDateTime[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> with an irregular interval.
            </summary>
            <param name="timeStamps">
            An array of <see cref="T:NationalInstruments.PrecisionDateTime"/> time stamp values
            that represents the irregular interval. The array needs to contain a time stamp for each point in the waveform that specifies the time that the point was acquired.
            </param>
            <returns>
            An irregular interval <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="timeStamps"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="timeStamps"/> are not in ascending order.
            </exception>
            <lastupdated>3/6/2007 5:09:18 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionWaveformTiming.Empty">
            <summary>
            Represents a <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> that has no 
            time stamp, time offset, or sample interval.
            </summary>
            <lastupdated>10/4/2006 9:07:59 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.GetTimeStamps(System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="count"/> is greater than the number of irregular time stamps.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="count"/> is less than zero.
            </exception>
            <lastupdated>10/4/2006 9:21:53 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.GetTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the number of irregular time stamps.
            </para>
            </exception>
            <lastupdated>10/4/2006 9:22:29 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.GetTimeStamps(System.Int32,System.Int32,NationalInstruments.PrecisionDateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the number of irregular time stamps.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>10/4/2006 9:23:10 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.FromWaveformTiming(NationalInstruments.WaveformTiming)">
            <summary>
            Converts a <see cref="T:NationalInstruments.WaveformTiming"/> object to a
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>.
            </summary>
            <param name="timing">
            The <see cref="T:NationalInstruments.WaveformTiming"/> object that initialized the
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>.
            </param>
            <returns>
            A new <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> object that represents
            the same waveform timing information as <paramref name="timing"/>.
            </returns>
            <lastupdated>10/4/2006 9:21:29 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.ToWaveformTiming">
            <summary>
            Converts the current <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> to a
            <see cref="T:NationalInstruments.WaveformTiming"/> object.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.WaveformTiming"/> object which represents the
            same timing information as the current
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> instance.
            </returns>
            <remarks>
            	<para>
            Since the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> class has a higher
            precision than <see cref="T:NationalInstruments.WaveformTiming"/>, some precision may be lost
            when performing this conversion.
            </para>
            </remarks>
            <lastupdated>10/4/2006 9:23:31 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.Equals(System.Object)">
            <summary>
            Returns a value that indicates if this object is equal to the specified object.
            </summary>
            <param name="obj">
            An object to compare with this object.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> that represents the same value as this object.
            </returns>
            <lastupdated>2/13/2008 4:18:02 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionWaveformTiming.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> objects might have the same hash 
            code even though they represent different values.
            </remarks>
            <lastupdated>2/13/2008 4:18:11 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp">
            <summary>
            Gets a value indicating whether the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> has a time stamp.
            </summary>
            <value>
            	<see langword="true"/> if the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> 
            has a <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>.
            </value>
            <lastupdated>10/4/2006 9:08:12 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp">
            <summary>
            Gets the time stamp of the waveform.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that specifies an occurrence in the system that is related to the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>. 
            </value>
            <remarks>The 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>  plus the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/> is equal to the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>. For example, if you configure an acquisition 
            with an NI-SCOPE device to use a reference trigger, the device sets the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>  to the time at which the trigger 
            occurs, the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  to the time of the first 
            sample, and the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>  to the difference between 
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  and 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, 
            it sets the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/>
            <lastupdated>3/6/2007 5:27:32 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.StartTime">
            <summary>
            Gets the time that the first sample in the waveform was acquired.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> value representing the time of the first waveform sample. 
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <remarks>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/> is equal to 
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>. 
            For example, if you configure an acquisition with an NI-SCOPE device to use a reference trigger, the device sets the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> to the time at which the trigger occurs, the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  to the time of the first 
            sample, and the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>  to the difference between the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  and <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, it sets the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <seealso cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>
            <seealso cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>
            <lastupdated>3/6/2007 5:07:55 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset">
            <summary>
            Gets the difference between the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/> and the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> of the waveform.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents the time between the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/> and <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>.</value>
            <remarks>The 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  is equal to the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>  plus the 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>. 
            For example, if you configure an acquisition with an NI-SCOPE device to use a reference trigger, the device sets the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>  to the time at which the trigger occurs, the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  to the time of the first sample, and the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeOffset"/>  to the difference between the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>  and <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, it sets the <see cref="P:NationalInstruments.PrecisionWaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.PrecisionWaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <lastupdated>3/6/2007 5:08:14 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode">
            <summary>
            Gets the sample interval mode that determines how the waveform is sampled.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.WaveformSampleIntervalMode"/> that determines how the waveform is sampled.
            </value>
            <remarks>
            A <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> of 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>
            indicates the <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> does not have a valid
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/>. A value of
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> indicates the 
            <see cref="T:NationalInstruments.PrecisionWaveformTiming"/> has
            a <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/> that is constant.
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/>  returns the sample interval value if
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/>  is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>.
            <see cref="M:NationalInstruments.DigitalWaveform.GetTimeStamps"/> generates time stamps if 
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> or 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            An <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>
            value indicates the <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval"/> is not constant.
            </remarks>
            <lastupdated>10/4/2006 9:10:32 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionWaveformTiming.SampleInterval">
            <summary>
            Gets the time interval between samples.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value specifying the time interval between samples.
            </value>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is not 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>.
            </exception>
            <lastupdated>10/4/2006 9:08:35 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ExtendedPropertyDictionary">
            <summary>
            Represents a dictionary of extended properties.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/15/2005 5:31:19 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/>.
            </summary>
            <lastupdated>9/16/2005 10:34:05 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/> with the specified info and 
            context.
            </summary>
            <param name="info">
            The data needed to serialize or deserialize an object.
            </param>
            <param name="context">
            The source and destination of a given serialized stream.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2005 10:34:47 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the
            <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/>.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> object.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2005 10:35:47 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:24 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.Clear">
            <summary>
            Removes all elements from the extended properties.
            </summary>
            <lastupdated>9/16/2005 10:32:32 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that iterates through the extended properties.
            </summary>
            <returns>
            an <see cref="T:System.Collections.IDictionaryEnumerator"/> for the extended properties.
            </returns>
            <lastupdated>9/16/2005 10:34:33 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.Add(System.String,System.Object)">
            <summary>
            Adds an element with the specified key and value to the extended properties.
            </summary>
            <param name="key">
            The <see cref="T:System.String"/> key of the element to add.
            </param>
            <param name="value">
            The value of the element to add. The value can be <see langword="null"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same <paramref name="key"/> already exists in the extended properties.
            </exception>
            <lastupdated>9/16/2005 10:32:16 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:18 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.Contains(System.String)">
            <summary>
            Determines whether the extended properties contains the specific key.
            </summary>
            <param name="key">
            The <see cref="T:System.String"/> key to locate in the extended properties.
            </param>
            <returns>
            	<see langword="true"/> if the extended properties contains an element with the specified <paramref name="key"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2005 10:33:13 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#Contains(System.Object)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:19 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the extended properties.
            </summary>
            <param name="key">
            The <see cref="T:System.String"/> key of the element to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2005 10:35:56 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#Remove(System.Object)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:22 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.Clone">
            <summary>
            Creates a shallow copy of the extended properties.
            </summary>
            <returns>
            A shallow copy of the extended properties.
            </returns>
            <lastupdated>9/16/2005 10:32:35 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:20:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <exclude/>
            <lastupdated>1/23/2009 4:20:23 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.Count">
            <summary>
            Gets the number of key-and-value pairs contained in the extended properties.
            </summary>
            <value>
            The number of key-and-value pairs contained in the extended properties.
            </value>
            <lastupdated>9/16/2005 10:29:14 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key. 
            </summary>
            <param name="key">
            The <see cref="T:System.String"/> key value.
            </param>
            <value>
            The <see cref="T:System.Object"/> value associated with <paramref name="key"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2005 10:31:49 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#Item(System.Object)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:16 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys of the extended properties.
            </summary>
            <value>
            An <see cref="T:System.Collections.ICollection"/> containing the keys of the extended properties.
            </value>
            <lastupdated>9/16/2005 10:29:20 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values of the extended properties.
            </summary>
            <value>
            An <see cref="T:System.Collections.ICollection"/> containing the values of the extended properties.
            </value>
            <lastupdated>9/15/2005 5:43:22 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>1/23/2009 4:20:14 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>1/23/2009 4:20:15 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#IsFixedSize">
            <exclude/>
            <lastupdated>1/23/2009 4:20:15 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ExtendedPropertyDictionary.System#Collections#IDictionary#IsReadOnly">
            <exclude/>
            <lastupdated>1/23/2009 4:20:16 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComponentBase">
            <summary>
            Provides a base implementation of the <see cref="T:System.ComponentModel.IComponent"/> interface for
            Measurement Studio components.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	The <see cref="T:NationalInstruments.ComponentBase"/> class is the base class for all Measurement Studio
            components that marshal by reference.  This class extends the
            <see cref="T:System.ComponentModel.Component"/> class to add functionality such as providing a
            way to customize how calls to event handlers are marshaled and to track the disposed state of the
            component.
            </remarks>
            <seealso cref="T:System.ComponentModel.Component"/>
            <seealso cref="T:System.ComponentModel.IComponent"/>
            <seealso cref="T:NationalInstruments.ISynchronizeCallbacks"/>
            <lastupdated>3/5/2003 1:00:26 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ISupportSynchronizationContext">
            <summary>
            Specifies that an object can use <see cref="T:System.Threading.SynchronizationContext"/> to
            customize how events and callback delegates are invoked.
            </summary>
            <remarks>
            	<para>
            Objects that implement <see cref="T:NationalInstruments.ISupportSynchronizationContext"/>
            use <see cref="P:NationalInstruments.ISupportSynchronizationContext.SynchronizeCallbacks"/>
            to determine how events and callback delegates are invoked.  If
            <see cref="P:NationalInstruments.ISupportSynchronizationContext.SynchronizeCallbacks"/> is
            <see langword="false"/>, events and callbacks are directly invoked.  If
            <see cref="P:NationalInstruments.ISupportSynchronizationContext.SynchronizeCallbacks"/> is
            <see langword="true"/>, events and callbacks are invoked through the 
            <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> or
            <see cref="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> methods.  For
            example, if an object that implements <see cref="T:NationalInstruments.ISupportSynchronizationContext"/>
            raises events in a separate thread and you want to handle the events in your user interface thread,
            you set <see cref="P:NationalInstruments.ISupportSynchronizationContext.SynchronizeCallbacks"/>
            to <see langword="true"/> and begin the operation in the user interface thread.
            </para>
            	<note type="note">
            For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>. 
            </note>
            </remarks>
            <lastupdated>3/16/2006 4:25:59 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ISupportSynchronizationContext.SynchronizeCallbacks">
            <summary>
            Specifies how events and callback delegates are invoked.
            </summary>
            <value>
            	<see langword="true"/> if events and callbacks are invoked through the 
            <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> or
            <see cref="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> methods; otherwise, events
            and callbacks are invoked directly.
            </value>
            <remarks>
            In some cases, callbacks and event handlers are executed in a different thread than the rest of the program. 
            Therefore, you must take special care when accessing objects that have thread affinity, such as UI controls, 
            from these callbacks and event handlers. For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>. 
            </remarks>
            <lastupdated>3/20/2006 5:32:33 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ISynchronizeCallbacks">
            <summary>
            Specifies that an object can use an <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> implementation
            to customize how events and callback delegates are invoked.
            </summary>
            <remarks>
            	<para>
            Objects that implement <see cref="T:NationalInstruments.ISynchronizeCallbacks"/> use the value of the
            <see cref="P:NationalInstruments.ISynchronizeCallbacks.SynchronizingObject"/> property to determine how events
            and callback delegates are invoked.  If the value of the
            <see cref="P:NationalInstruments.ISynchronizeCallbacks.SynchronizingObject"/> property is <see langword="null"/>,
            events and callbacks are directly invoked.  If the value of the
            <see cref="P:NationalInstruments.ISynchronizeCallbacks.SynchronizingObject"/> property is not <see langword="null"/>,
            events and callbacks are invoked through the <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])"/> method
            of the specified <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> implementation.  For example, if an
            object that implements <see cref="T:NationalInstruments.ISynchronizeCallbacks"/> raises events in a separate
            thread and you want to handle the events in your user interface thread, you set the
            <see cref="P:NationalInstruments.ISynchronizeCallbacks.SynchronizingObject"/> property to an instance of a
            Windows Forms form.
            </para>
            	<note type="note">
            		<see cref="T:NationalInstruments.ISynchronizeCallbacks"/> has been superseded by
            ISupportSynchronizationContext in .NET Framework 2.0. For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>. 
            </note>
            </remarks>
            <lastupdated>3/16/2006 4:23:50 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ISynchronizeCallbacks.SynchronizingObject">
            <summary>
            Gets or sets the object that marshals event-handler and callback calls.
            </summary>
            <value>
            The <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> that represents the object that marshals
            event-handler and callback calls.  The default value is <see langword="null"/>.
            </value>
            <remarks>
            When the value of this property is <see langword="null"/>, event-handler and callback calls are
            raised in the default manner. As a result, calls might occur in a thread other than the main
            thread.  Avoid this behavior by setting this property to an object that implements the
            <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> interface, such as a Windows Forms form.
            <note type="note">
            For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>. 
            </note>
            </remarks>
            <lastupdated>3/16/2006 4:28:53 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ComponentBase"/> class.
            </summary>
            <lastupdated>2/21/2003 9:57:14 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.OnSynchronizingObjectChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NationalInstruments.ComponentBase.SynchronizingObjectChanged"/> event.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
            <lastupdated>9/6/2005 12:25:10 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:12:37 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.GetService(System.Type)">
            <summary>
            Returns an object that represents a service provided by the component or by its container.
            </summary>
            <param name="service">
            A service provided by the component.
            </param>
            <returns>
            An <see cref="T:System.Object"/> that represents a service provided by the component.  This value is
            <see langword="null"/> if the component does not provide the specified service.
            </returns>
            <lastupdated>3/28/2003 2:42:57 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the <see cref="T:NationalInstruments.ComponentBase"/>.
            </summary>
            <param name="disposing">
            If <see langword="true"/>, this method releases managed and unmanaged resources. If
            <see langword="false"/>, this method releases
            only unmanaged resources.
            </param>
            <remarks>
            	<para>
            The public <see cref="M:System.IDisposable.Dispose"/> method and the finalizer call this method.
            The public <see cref="M:System.IDisposable.Dispose"/> invokes the protected Dispose(Boolean) method
            with <paramref name="disposing"/> set to <see langword="true"/>. The finalizer invokes the protected
            Dispose(Boolean) method with <paramref name="disposing"/> set to <see langword="false"/>.
            </para>
            	<para>
            When you set the <paramref name="disposing"/> parameter to <see langword="true"/>, this method releases
            all resources held by managed objects that this <see cref="T:NationalInstruments.ComponentBase"/> references. This method invokes the <see cref="M:System.IDisposable.Dispose"/> method of each referenced
            object.
            </para>
            </remarks>
            <lastupdated>2/21/2003 9:57:20 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseExceptionIfDisposed">
            <summary>
            This member is obsolete. Use the <see cref="M:NationalInstruments.ComponentBase.ThrowExceptionIfDisposed"/> 
            method to achieve the same functionality.
            </summary>
            <lastupdated>9/6/2005 12:25:18 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.ThrowExceptionIfDisposed">
            <summary>
            Throws an <see cref="T:System.ObjectDisposedException"/> if the component has been disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            The component has been disposed.
            </exception>
            <lastupdated>9/6/2005 12:25:25 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.AddEventHandler(System.Object,System.Delegate)">
            <summary>
            Adds an event handler for the specified event key.
            </summary>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/>
            event handler list.
            </param>
            <param name="handler">
            The delegate to the method that handles the event.
            </param>
            <remarks>
            To add event handlers, use <see cref="M:NationalInstruments.ComponentBase.AddEventHandler(System.Object,System.Delegate)"/> 
            instead of the <see cref="P:System.ComponentModel.Component.Events"/> property.
            In .NET Framework 2.0, <see cref="M:NationalInstruments.ComponentBase.AddEventHandler(System.Object,System.Delegate)"/> 
            associates a SynchronizationContext with the event handler and 
            uses the SynchronizationContext to invoke the event handler
            if SynchronizeCallbacks is <see langword="true"/>.
            <note type="note">
            For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>. 
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <lastupdated>3/16/2006 4:31:43 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RemoveEventHandler(System.Object,System.Delegate)">
            <summary>
            Removes an event handler for the specified event key.
            </summary>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/>
            event handler list.
            </param>
            <param name="handler">
            The delegate to the method that handles the event.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <lastupdated>3/2/2006 2:14:26 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseEvent(System.Object,System.EventArgs)">
            <summary>
            Raises the event specified by an event key with the specified event arguments.
            </summary>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/> event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <lastupdated>3/2/2006 1:42:39 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseEventDirect(System.Object,System.EventArgs)">
            <summary>
            Raises the event specified by an event key with the specified event arguments without
            cross-thread synchronization.
            </summary>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/> event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <lastupdated>3/2/2006 1:43:00 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseEventAsync(System.Object,System.EventArgs)">
            <summary>
            Asynchronously raises the event specified by an event key with the specified event arguments.
            </summary>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/>
            event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <lastupdated>3/2/2006 1:42:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseGenericEventDirect``1(System.Object,``0)">
            <summary>
            Raises the event specified by an event key with the specified event arguments without
            cross-thread synchronization.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="eventKey">
            The key of the event in the event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <lastupdated>6/2/2006 11:25:58 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseGenericEvent``1(System.Object,``0)">
            <summary>
            Raises the event specified by an event key with the specified event arguments.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/>
            event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <remarks>
            Use <see cref="M:NationalInstruments.ComponentBase.RaiseGenericEvent``1(System.Object,``0)"/>
            to raise events whose types are 
            <see cref="T:System.EventHandler`1"/>.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:24:11 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseGenericEvent``1(System.ComponentModel.AsyncOperation,NationalInstruments.EventSynchronizationCallback{``0},``0)">
            <summary>
            Raises the event through a synchronization context with the specified event arguments.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="operation">
            An <see cref="T:System.ComponentModel.AsyncOperation"/> that provides the
            <see cref="T:System.Threading.SynchronizationContext"/> that is used to invoke
            the event.
            </param>
            <param name="callback">
            A delegate to the method that raises the event.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <lastupdated>6/2/2006 11:23:15 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseGenericEventAsync``1(System.Object,``0)">
            <summary>
            Asynchronously raises the event specified by an event key with the specified event arguments.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="eventKey">
            The key of the event in the <see cref="P:System.ComponentModel.Component.Events"/>
            event handler list.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <remarks>
            Use <see cref="M:NationalInstruments.ComponentBase.RaiseGenericEvent``1(System.Object,``0)"/>
            to raise events whose types are
            <see cref="T:System.EventHandler`1"/>.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:25:14 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComponentBase.RaiseGenericEventAsync``1(System.ComponentModel.AsyncOperation,NationalInstruments.EventSynchronizationCallback{``0},``0)">
            <summary>
            Asynchronously raises the event through a synchronization context with the specified event
            arguments.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="operation">
            An <see cref="T:System.ComponentModel.AsyncOperation"/> that provides the
            <see cref="T:System.Threading.SynchronizationContext"/> that is used to invoke
            the event.
            </param>
            <param name="callback">
            A delegate to the method that raises the event.
            </param>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <lastupdated>6/2/2006 11:24:58 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComponentBase.IsDisposed">
            <summary>
            Gets a value indicating if the component has been disposed.
            </summary>
            <value>
            	<see langword="true"/> if the component has been disposed.
            </value>
            <lastupdated>7/26/2004 9:37:16 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComponentBase.SynchronizeCallbacks">
            <summary>
            Gets or sets how events and callback delegates are invoked.
            </summary>
            <value>
            	<see langword="true"/> if events and callbacks are invoked through the 
            <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> or
            <see cref="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> methods; otherwise, events
            and callbacks are invoked directly.  The default value is <see langword="true"/>.
            </value>
            <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
            <remarks>
            In some cases, callbacks and event handlers are executed in a different thread than the rest of the program. 
            Therefore, you must take special care when accessing objects that have thread affinity, such as UI controls, 
            from these callbacks and event handlers. For more information, refer to 
            <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>.
            </remarks>
            <lastupdated>3/20/2006 5:32:20 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComponentBase.SynchronizingObject">
            <summary>
            Gets or sets the object that marshals event-handler and callback calls.
            </summary>
            <value>
            The <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> that represents the object that marshals
            event-handler and callback calls.  The default value is <see langword="null"/>.
            </value>
            <remarks>
            	<para>
            When the value of this property is <see langword="null"/>, event-handler and callback calls are
            raised in the default manner. As a result, calls might occur in a thread other than the main
            thread.  Avoid this behavior by setting this property to an object that implements the
            <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> interface, such as a Windows Forms form.
            </para>
            	<note type="note">
            		<see cref="P:NationalInstruments.ComponentBase.SynchronizingObject"/> has been superseded by
            SynchronizeCallbacks in .NET Framework 2.0. For more information, refer to <see keyword="EventsCallbacksThreadSafety" keywordType="mstudio">Events, Callbacks, and Thread Safety in Measurement Studio .NET Class Libraries</see>.
            </note>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <lastupdated>3/16/2006 4:51:49 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComponentBase.Tag">
            <summary>
            Gets or sets the object that contains data about the component.
            </summary>
            <value>
            An <see cref="T:System.Object"/> that contains data about the <see cref="T:NationalInstruments.ComponentBase"/>.
            The default value is <see langword="null"/>.
            </value>
            <remarks>
            You can assign any type derived from <see cref="T:System.Object"/> to this property.
            If <see cref="P:NationalInstruments.ComponentBase.Tag"/> is set through the Windows Forms
            Designer, you can assign only text.
            <para>
            A common use for <see cref="P:NationalInstruments.ComponentBase.Tag"/> is to store information
            that is closely associated with the <see cref="T:NationalInstruments.ComponentBase"/>. For
            example, you can use <see cref="P:NationalInstruments.ComponentBase.Tag"/> to store the name
            of the <see cref="T:NationalInstruments.ComponentBase"/> so that the information can be accessed
            quickly.
            </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
            <lastupdated>3/28/2003 2:42:38 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="E:NationalInstruments.ComponentBase.SynchronizingObjectChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.ComponentBase.SynchronizingObject"/> has changed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            An event handler is added after the object has been disposed.
            </exception>
            <lastupdated>9/6/2005 12:25:32 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveformSample">
            <summary>
            Represents a sample of an analog waveform.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<filter name="VS2005|VS2008"><para>
            This class is obsolete.  Use <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> for increased performance.
            </para></filter>
            	<para>
            An <see cref="T:NationalInstruments.AnalogWaveformSample"/> represents a sample of an analog waveform. Use the 
            <see cref="P:NationalInstruments.AnalogWaveformSample.Value"/> property to obtain the value contained
            in the <see cref="T:NationalInstruments.AnalogWaveformSample"/>.
            Use the <see cref="P:NationalInstruments.AnalogWaveformSample.HasTimeStamp"/> property to determine if the sample has a time stamp.
            If <see cref="P:NationalInstruments.AnalogWaveformSample.HasTimeStamp"/> is <see langword="true"/>, 
            <see cref="P:NationalInstruments.AnalogWaveformSample.TimeStamp"/> returns the time stamp of the sample. 
            </para>
            </remarks>
            <lastupdated>9/16/2008 4:49:40 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSample.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:53:25 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample.Owner">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveform"/> that the sample came from.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.AnalogWaveform"/> of the <see cref="T:NationalInstruments.AnalogWaveformSample"/>.
            </value>
            <lastupdated>3/1/2006 5:52:23 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample.Value">
            <summary>
            Gets and sets the value of the analog sample.
            </summary>
            <value>
            The value of the <see cref="T:NationalInstruments.AnalogWaveformSample"/>. The default value is 0.
            </value>
            <lastupdated>3/1/2006 5:53:00 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample.HasTimeStamp">
            <summary>
            Gets a value indicating if the analog sample has a time stamp.
            </summary>
            <value>
            	<see langword="true"/> if the analog sample has a <see cref="P:NationalInstruments.AnalogWaveformSample.TimeStamp"/>.
            </value>
            <lastupdated>3/1/2006 5:52:14 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSample.TimeStamp">
            <summary>
            Gets the time at which the data was sampled.
            </summary>
            <value>
            The <see cref="T:System.DateTime"/> representing the time at which the data was sampled.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.AnalogWaveformSample.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.AnalogWaveformSample.HasTimeStamp"/>
            <lastupdated>6/22/2006 12:47:03 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.EventSynchronizationCallback`1">
            <summary>
            Represents a method that is called to raise an event.
            </summary>
            <typeparam name="TEventArgs">
            An <see cref="T:System.EventArgs"/>-derived type that specifies the type of the arguments
            of the event.
            </typeparam>
            <param name="e">
            The event arguments to use to raise the event.
            </param>
            <remarks>
            Use <see cref="T:NationalInstruments.EventSynchronizationCallback`1"/>
            with
            <see cref="M:NationalInstruments.ComponentBase.RaiseGenericEvent``1(System.Object,``0)"/>
            and
            <see cref="M:NationalInstruments.ComponentBase.RaiseGenericEventAsync``1(System.Object,``0)"/>
            to marshal a call to a method that raises an event through a specified
            synchronization context.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:33:57 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformSample">
            <summary>
            Represents a sample of a digital waveform.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            A <see cref="T:NationalInstruments.DigitalWaveformSample"/> represents a sample of a digital waveform. A
            <see cref="T:NationalInstruments.DigitalWaveformSample"/> is a sample taken of many digital signals. Use
            <see cref="P:NationalInstruments.DigitalWaveformSample.States"/> to iterate over
            the digital states of the signals contained in the <see cref="T:NationalInstruments.DigitalWaveformSample"/>.
            Use <see cref="M:NationalInstruments.DigitalWaveformSample.TryConvert(System.Int64@)"/> to convert the sample into packed form.
            Use <see cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/> to determine if the sample has a time stamp.
            If <see cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/> is <see langword="true"/>, <see cref="P:NationalInstruments.DigitalWaveformSample.TimeStamp"/>
            returns the time stamp of the sample. 
            </remarks>
            <lastupdated>6/19/2006 5:12:58 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSample.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified
            <see cref="T:NationalInstruments.DigitalWaveformSample"/>.
            </summary>
            <param name="obj">
            The <see cref="T:NationalInstruments.DigitalWaveformSample"/> to compare with this
            instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a <see cref="T:NationalInstruments.DigitalWaveformSample"/> that is equal 
            to this instance.
            </returns>
            <lastupdated>9/15/2005 5:52:16 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSample.Equals(NationalInstruments.DigitalWaveformSample)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified
            <see cref="T:NationalInstruments.DigitalWaveformSample"/>.
            </summary>
            <param name="sample">
            The <see cref="T:NationalInstruments.DigitalWaveformSample"/> to compare with this
            instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="sample"/> is a <see cref="T:NationalInstruments.DigitalWaveformSample"/> that is equal 
            to this instance.
            </returns>
            <lastupdated>9/15/2005 5:51:58 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSample.GetHashCode">
            <summary>
            Returns a hash code for the object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.DigitalWaveformSample"/> objects might have the same hash code even though they 
            represent different values.
            </remarks>
            <seealso cref="M:System.Object.GetHashCode"/>
            <lastupdated>9/15/2005 4:57:22 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSample.TryConvert(System.Int64@)">
            <summary>
            Converts the <see cref="T:NationalInstruments.DigitalWaveformSample"/> to a 64-bit bus value.
            </summary>
            <param name="busValue">
            Upon return, contains the bus value of the <see cref="T:NationalInstruments.DigitalWaveformSample"/>. 
            </param>
            <returns>
            	<see langword="true"/> if the bus value can convert to a 64-bit bus value. 
            </returns>
            <remarks>
            	<para>
            		<see cref="M:NationalInstruments.DigitalWaveformSample.TryConvert(System.Int64@)"/> converts a <see cref="T:NationalInstruments.DigitalWaveformSample"/>
            into a <paramref name="busValue"/> if all the states in the sample are either <see cref="F:NationalInstruments.DigitalState.ForceUp"/>,
            <see cref="F:NationalInstruments.DigitalState.ForceDown"/>, <see cref="F:NationalInstruments.DigitalState.CompareHigh"/>, or
            <see cref="F:NationalInstruments.DigitalState.CompareLow"/> and if the number of <see cref="P:NationalInstruments.DigitalWaveformSample.States"/> in <see cref="P:NationalInstruments.DigitalWaveformSampleCollection.Count"/> is
            less than or equal to 64.</para>
            </remarks>
            <lastupdated>9/19/2005 2:06:52 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSample.Owner">
            <summary>
            Gets the <see cref="T:NationalInstruments.DigitalWaveform"/> that the sample came from.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.DigitalWaveform"/> of the <see cref="T:NationalInstruments.DigitalWaveformSample"/>.
            </value>
            <lastupdated>9/19/2005 2:06:28 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp">
            <summary>
            Gets a value indicating whether the digital sample has a <see cref="P:NationalInstruments.DigitalWaveformSample.TimeStamp"/>.
            </summary>
            <value>
            	<see langword="true"/> if the digital sample has a <see cref="P:NationalInstruments.DigitalWaveformSample.TimeStamp"/>.
            </value>
            <lastupdated>9/8/2005 11:37:34 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSample.TimeStamp">
            <summary>
            The time stamp of the digital sample.
            </summary>
            <value>
            The <see cref="T:System.DateTime"/> representing the time stamp.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/>
            <lastupdated>6/20/2006 8:23:11 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSample.PrecisionTimeStamp">
            <summary>
            The time stamp of the digital sample.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the time stamp.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <remarks>
            Use <see cref="P:NationalInstruments.DigitalWaveformSample.PrecisionTimeStamp"/> instead of
            <see cref="P:NationalInstruments.DigitalWaveformSample.TimeStamp"/> to obtain 
            a time stamp with higher precision than <see cref="T:System.DateTime"/>.
            If the timing information in the <see cref="T:NationalInstruments.DigitalWaveform"/> 
            containing the <see cref="T:NationalInstruments.DigitalWaveformSample"/> was set using
            <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>, then this property
            will return a time stamp with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>, 
            the time stamp returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="P:NationalInstruments.DigitalWaveformSample.HasTimeStamp"/>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="T:NationalInstruments.PrecisionDateTime"/>
            <lastupdated>10/13/2006 9:43:16 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSample.States">
            <summary>
            Gets the collection of digital states that are part of the sample.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.DigitalStateCollection"/> of digital states that are part of the
            <see cref="T:NationalInstruments.DigitalWaveformSample"/>.
            </value>
            <lastupdated>9/19/2005 9:29:27 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.ObsoleteMessage">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.ObsoleteMessage.SynchronizingObject">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IConvertibleType">
            <exclude/>
            <lastupdated>7/23/2002 12:42:06 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IConvertibleType.CanConvertTo(System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:42:08 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IConvertibleType.ConvertTo(System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:42:17 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IPrecisionDateTimeService">
            <exclude/>
            <lastupdated>7/25/2006 5:13:35 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IPrecisionDateTimeService.GetWholeSecondsByEpoch(NationalInstruments.Restricted.PrecisionDateTimeEpoch)">
            <exclude/>
            <lastupdated>7/25/2006 5:13:40 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IPrecisionDateTimeService.GetFractionalSecondTicksByEpoch(NationalInstruments.Restricted.PrecisionDateTimeEpoch)">
            <exclude/>
            <lastupdated>7/25/2006 5:13:37 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformFailure">
            <summary>
            Provides a class that encapsulates a test failure between two digital states.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<see cref="T:NationalInstruments.DigitalWaveformFailure"/> contains information about a test failure.
            <see cref="P:NationalInstruments.DigitalWaveformFailure.ActualState"/> returns the actual state and
            <see cref="P:NationalInstruments.DigitalWaveformFailure.ExpectedState"/> returns the state that
            was expected but failed.
            </remarks>
            <lastupdated>9/19/2005 1:40:24 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformFailure.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.DigitalWaveformFailure"/> with the specified info and 
            context.
            </summary>
            <param name="info">
            The data needed to serialize or deserialize an object.
            </param>
            <param name="context">
            The source and destination of a given serialized stream.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/7/2005 1:11:01 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformFailure.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:NationalInstruments.DigitalWaveformFailure"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the
            <see cref="T:NationalInstruments.DigitalWaveformFailure"/>.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> object.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/7/2005 1:11:11 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformFailure.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:01 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformFailure.SampleIndex">
            <summary>
            Gets the sample index into the compared test waveform where the test failure occurred.
            </summary>
            <value>
            The sample index where the test failure occurred.
            </value>
            <lastupdated>10/31/2005 2:27:17 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformFailure.ExpectedSampleIndex">
            <summary>
            Gets the sample index into the expected test waveform where the test failure occurred.
            </summary>
            <value>
            The expected sample index where the test failure occurred.
            </value>
            <lastupdated>10/31/2005 2:26:42 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformFailure.SignalIndex">
            <summary>
            Gets the signal index into the compared test waveform and the expected test waveform where the test failure occurred.
            </summary>
            <value>
            The signal index where the test failure occurred.
            </value>
            <lastupdated>10/31/2005 2:27:34 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformFailure.ActualState">
            <summary>
            Gets the state from the compared waveform where the test failure occurred.</summary>
            <value>
            The compared <see cref="T:NationalInstruments.DigitalState"/>.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveformFailure.ActualState"/> was compared against <see cref="P:NationalInstruments.DigitalWaveformFailure.ExpectedState"/>
            and failed.
            </remarks>
            <lastupdated>6/20/2006 8:22:54 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformFailure.ExpectedState">
            <summary>
            Gets the state from the expected waveform where the test failure occurred.</summary>
            <value>
            The expected <see cref="T:NationalInstruments.DigitalState"/> where the test failure occurred.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveformFailure.ExpectedState"/> was compared to <see cref="P:NationalInstruments.DigitalWaveformFailure.ActualState"/>
            and failed.
            </remarks>
            <lastupdated>6/20/2006 8:23:03 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.WaveformSampleIntervalMode">
            <summary>
            Specifies the sample interval mode that determines how the waveform is sampled.
            </summary>
            <lastupdated>9/19/2005 2:18:23 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.WaveformSampleIntervalMode.None">
            <summary>
            No sample interval.
            </summary>
            <lastupdated>9/15/2005 6:21:42 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.WaveformSampleIntervalMode.Regular">
            <summary>
            The sample interval is regular.
            </summary>
            <lastupdated>9/15/2005 6:21:46 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.WaveformSampleIntervalMode.Irregular">
            <summary>
            The sample interval is irregular.
            </summary>
            <lastupdated>9/15/2005 6:21:37 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.LicenseProviderBase">
            <exclude/>
            <lastupdated>8/3/2002 9:28:20 PM</lastupdated>
            <updatedby>Matthew Jennings</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseProviderBase.#ctor">
            <exclude/>
            <lastupdated>2/11/2003 2:46:09 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenseProviderBase.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <exclude/>
            <lastupdated>2/11/2003 2:46:07 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.LicenseProviderBase.License">
            <exclude/>
            <lastupdated>2/11/2003 2:46:12 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IAnalogWaveformService`1">
            <exclude/>
            <lastupdated>11/21/2005 11:11:17 AM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService`1.LoadData(`0)">
            <exclude/>
            <lastupdated>11/21/2005 11:11:28 AM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IAnalogWaveformService`1.LoadData(`0,System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>11/28/2005 4:32:46 PM</lastupdated>
            <updatedby>Lisa Hannan</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.EnumObject">
            <summary>
            Provides the base class for enumeration-like objects that are based on extensible types.
            </summary>
            <threadsafety safety="safe"/>
            <remarks>
            An <see cref="T:NationalInstruments.EnumObject"/> is similar to an <see cref="T:System.Enum"/> in
            that it provides a fixed set of values that are valid for a specific type.  However, the
            underlying type of an <see cref="T:NationalInstruments.EnumObject"/> is an extensible type rather
            than an integral type, so you can define new values to create customized behavior.
            </remarks>
            <example>
            The following example demonstrates how to add the values of an
            <see cref="T:NationalInstruments.EnumObject"/>-derived type to a Windows Forms ComboBox.
            <code lang="VB.NET">
            ' The styles variable is a ComboBox control.  FillStyle is a type that
            ' derives from EnumObject.
            For Each style As FillStyle In EnumObject.GetValues(GetType(FillStyle))
                styles.Items.Add(style)
            Next
            </code>
            </example>
            <example>
            	<code lang="C#">
            // The styles variable is a ComboBox control.  FillStyle is a type that
            // derives from EnumObject.
            foreach (FillStyle style in EnumObject.GetValues(typeof(FillStyle)))
                styles.Items.Add(style);
            </code>
            </example>
            <lastupdated>9/15/2005 5:30:55 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.EnumObject"/> class.
            </summary>
            <lastupdated>7/1/2003 11:45:02 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.ToString">
            <summary>
            Override <see cref="M:System.String.ToString"/>.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <lastupdated>7/1/2003 11:48:26 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an indication of their relative values.
            </summary>
            <param name="obj">
            An object to compare, or <see langword="null"/>.
            </param>
            <returns>
            	<para>
            A signed number indicating the relative values of this instance and <paramref name="value"/>.
            </para>
            	<list type="table">
            		<listheader>
            			<term>Return Value</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>
            Less than zero
            </term>
            			<description>
            This instance is less than <paramref name="value"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Zero
            </term>
            			<description>
            This instance is equal to <paramref name="value"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Greater than zero
            </term>
            			<description>
            				<para>
            This instance is greater than <paramref name="value"/>
            				</para>
            				<para>
            -or-
            </para>
            				<para>
            					<paramref name="value"/> is <see langword="null"/>.
            </para>
            			</description>
            		</item>
            	</list>
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is not an <see cref="T:NationalInstruments.EnumObject"/>.
            </exception>
            <lastupdated>7/1/2003 11:44:58 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.GetNames(System.Type)">
            <summary>
            Gets an array of the names of the values in a specified <see cref="T:NationalInstruments.EnumObject"/>.
            </summary>
            <param name="type">
            An <see cref="T:NationalInstruments.EnumObject"/> type.
            </param>
            <returns>
            A string array of the names of the default values that are provided by the
            <see cref="T:NationalInstruments.EnumObject"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="type"/> is not an <see cref="T:NationalInstruments.EnumObject"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="type"/> is <see langword="null"/>.
            </exception>
            <lastupdated>7/1/2003 11:45:24 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.GetValues(System.Type)">
            <summary>
            Gets an array of the values in a specified <see cref="T:NationalInstruments.EnumObject"/>.
            </summary>
            <param name="type">
            An <see cref="T:NationalInstruments.EnumObject"/> type.
            </param>
            <returns>
            A <see cref="T:System.Array"/> of the default values that are provided by the
            <see cref="T:NationalInstruments.EnumObject"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="type"/> is not an <see cref="T:NationalInstruments.EnumObject"/>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="type"/> is <see langword="null"/>.
            </exception>
            <lastupdated>7/1/2003 11:45:34 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.Parse(System.Type,System.String)">
            <summary>
            Converts the string representation of the name to an equivalent <see cref="T:NationalInstruments.EnumObject"/> instance.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the <see cref="T:NationalInstruments.EnumObject"/>.
            </param>
            <param name="value">
            A string that contains the name to convert.
            </param>
            <returns>
            An object which has a type that is specified by <paramref name="type"/> and has a value that is represented
            by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="type"/> is not an <see cref="T:NationalInstruments.EnumObject"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="value"/> is not one of the default values that is defined by the
            <see cref="T:NationalInstruments.EnumObject"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="type"/> is <see langword="null"/>.
            </exception>
            <lastupdated>7/30/2007 5:01:40 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EnumObject.Parse(System.Type,System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name to an equivalent <see cref="T:NationalInstruments.EnumObject"/> instance. You can specify if the operation is case-sensitive.</summary>
            <param name="type">
            The <see cref="T:System.Type"/> of the <see cref="T:NationalInstruments.EnumObject"/>.
            </param>
            <param name="value">
            A string that contains the name to convert.
            </param>
            <param name="ignoreCase">
            Ignores case sensitivity if <see langword="true"/>.
            </param>
            <returns>
            An object which has a type that is specified by <paramref name="type"/> and has a value that is represented
            by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="type"/> is not an <see cref="T:NationalInstruments.EnumObject"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="value"/> is not one of the default values that is defined by the
            <see cref="T:NationalInstruments.EnumObject"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="type"/> is <see langword="null"/>.
            </exception>
            <lastupdated>7/30/2007 5:06:34 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EnumObject.UnderlyingType">
            <summary>
            Gets the underlying type of an <see cref="T:NationalInstruments.EnumObject"/> value.
            </summary>
            <value>
            A <see cref="T:System.Type"/> that represents the underlying type of the value.
            </value>
            <lastupdated>7/1/2003 11:44:30 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EnumObject.Name">
            <summary>
            Gets the name of an <see cref="T:NationalInstruments.EnumObject"/> value.
            </summary>
            <value>
            A <see cref="T:System.String"/> that represents the name of the value.
            </value>
            <lastupdated>7/1/2003 11:44:27 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.EngineeringFormatInfo">
            <summary>
            Defines a custom formatter to format numeric values with engineering notation and International
            System of Units (SI) prefixes and symbols.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<para>
            The format strings that you can use with <see cref="T:NationalInstruments.EngineeringFormatInfo"/>
            are specified by the following format:
            </para>
            	<para>
            		<format type="monospace">
            (format string)[decimal places][literal string]
            </format>
            	</para>
            	<para>
            The format string section specifies how to format the numeric value and can be one of the
            following values:
            </para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Format</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5e+3.
            </description>
            			</item>
            			<item>
            				<term>
            EE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5E+3.
            </description>
            			</item>
            			<item>
            				<term>
            eee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5e+003.
            </description>
            			</item>
            			<item>
            				<term>
            EEE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5E+003.
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with no space between the number and the prefix.
            For example, 5000 becomes 5kilo.
            </description>
            			</item>
            			<item>
            				<term>
            s
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with no space between the number and the symbol.
            For example, 5000 becomes 5k.
            </description>
            			</item>
            			<item>
            				<term>
            SS
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with a space between the number and the prefix.
            For example, 5000 becomes 5 kilo.
            </description>
            			</item>
            			<item>
            				<term>
            S
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with a space between the number and the symbol.
            For example, 5000 becomes 5 k.
            </description>
            			</item>
            		</list>
            	</para>
            	<para>
            The decimal places section is optional and specifies the number of digits to display after
            the decimal point in the formatted numeric value.  If the decimal places section is not specified, the numeric value is formatted with three
            decimal places by default.
            </para>
            	<para>
            The literal string section is optional
            and is a string enclosed in single or double quotes that specifies a string to copy
            to the formatted numeric value string literally. It does not affect formatting; 
            therefore, place the literal string immediately following the formatted numeric value string.
            </para>
            </remarks>
            <example>
            The following example demonstrates using <see cref="T:NationalInstruments.EngineeringFormatInfo"/>
            with <see cref="M:System.String.Format(System.String,System.Object)"/> with several format strings as well as the result of each
            formatting operation.
            <code lang="VB.NET">
            String.Format(EngineeringFormatInfo.Default, "{0:ee}", 12345.67)       ' Returns "12.346e+3"
            String.Format(EngineeringFormatInfo.Default, "{0:ee1}", 12345.67)      ' Returns "12.3e+3"
            String.Format(EngineeringFormatInfo.Default, "{0:ee'Hz'}", 12345.67)   ' Returns "12.346e+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:ee1'Hz'}", 12345.67)  ' Returns "12.3e+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EE}", 12345.67)       ' Returns "12.346E+3"
            String.Format(EngineeringFormatInfo.Default, "{0:EE1}", 12345.67)      ' Returns "12.3E+3"
            String.Format(EngineeringFormatInfo.Default, "{0:EE'Hz'}", 12345.67)   ' Returns "12.346E+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EE1'Hz'}", 12345.67)  ' Returns "12.3E+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:eee}", 12345.67)      ' Returns "12.346e+003"
            String.Format(EngineeringFormatInfo.Default, "{0:eee1}", 12345.67)     ' Returns "12.3e+003"
            String.Format(EngineeringFormatInfo.Default, "{0:eee'Hz'}", 12345.67)  ' Returns "12.346e+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:eee1'Hz'}", 12345.67) ' Returns "12.3e+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE}", 12345.67)      ' Returns "12.346E+003"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE1}", 12345.67)     ' Returns "12.3E+003"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE'Hz'}", 12345.67)  ' Returns "12.346E+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE1'Hz'}", 12345.67) ' Returns "12.3E+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:ss}", 12345.67)       ' Returns "12.346kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:ss1}", 12345.67)      ' Returns "12.3kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:ss'Hz'}", 12345.67)   ' Returns "12.346kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:ss1'Hz'}", 12345.67)  ' Returns "12.3kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:s}", 12345.67)        ' Returns "12.346k"
            String.Format(EngineeringFormatInfo.Default, "{0:s1}", 12345.67)       ' Returns "12.3k"
            String.Format(EngineeringFormatInfo.Default, "{0:s'Hz'}", 12345.67)    ' Returns "12.346kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:s1'Hz'}", 12345.67)   ' Returns "12.3kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:SS}", 12345.67)       ' Returns "12.346 kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:SS1}", 12345.67)      ' Returns "12.3 kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:SS'Hz'}", 12345.67)   ' Returns "12.346 kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:SS1'Hz'}", 12345.67)  ' Returns "12.3 kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:S}", 12345.67)        ' Returns "12.346 k"
            String.Format(EngineeringFormatInfo.Default, "{0:S1}", 12345.67)       ' Returns "12.3 k"
            String.Format(EngineeringFormatInfo.Default, "{0:S'Hz'}", 12345.67)    ' Returns "12.346 kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:S1'Hz'}", 12345.67)   ' Returns "12.3 kHz"
            </code>
            </example>
            <example>
            	<code lang="C#">
            String.Format(EngineeringFormatInfo.Default, "{0:ee}", 12345.67);       // Returns "12.346e+3"
            String.Format(EngineeringFormatInfo.Default, "{0:ee1}", 12345.67);      // Returns "12.3e+3"
            String.Format(EngineeringFormatInfo.Default, "{0:ee'Hz'}", 12345.67);   // Returns "12.346e+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:ee1'Hz'}", 12345.67);  // Returns "12.3e+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EE}", 12345.67);       // Returns "12.346E+3"
            String.Format(EngineeringFormatInfo.Default, "{0:EE1}", 12345.67);      // Returns "12.3E+3"
            String.Format(EngineeringFormatInfo.Default, "{0:EE'Hz'}", 12345.67);   // Returns "12.346E+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EE1'Hz'}", 12345.67);  // Returns "12.3E+3Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:eee}", 12345.67);      // Returns "12.346e+003"
            String.Format(EngineeringFormatInfo.Default, "{0:eee1}", 12345.67);     // Returns "12.3e+003"
            String.Format(EngineeringFormatInfo.Default, "{0:eee'Hz'}", 12345.67);  // Returns "12.346e+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:eee1'Hz'}", 12345.67); // Returns "12.3e+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE}", 12345.67);      // Returns "12.346E+003"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE1}", 12345.67);     // Returns "12.3E+003"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE'Hz'}", 12345.67);  // Returns "12.346E+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:EEE1'Hz'}", 12345.67); // Returns "12.3E+003Hz"
            String.Format(EngineeringFormatInfo.Default, "{0:ss}", 12345.67);       // Returns "12.346kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:ss1}", 12345.67);      // Returns "12.3kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:ss'Hz'}", 12345.67);   // Returns "12.346kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:ss1'Hz'}", 12345.67);  // Returns "12.3kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:s}", 12345.67);        // Returns "12.346k"
            String.Format(EngineeringFormatInfo.Default, "{0:s1}", 12345.67);       // Returns "12.3k"
            String.Format(EngineeringFormatInfo.Default, "{0:s'Hz'}", 12345.67);    // Returns "12.346kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:s1'Hz'}", 12345.67);   // Returns "12.3kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:SS}", 12345.67);       // Returns "12.346 kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:SS1}", 12345.67);      // Returns "12.3 kilo"
            String.Format(EngineeringFormatInfo.Default, "{0:SS'Hz'}", 12345.67);   // Returns "12.346 kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:SS1'Hz'}", 12345.67);  // Returns "12.3 kiloHz"
            String.Format(EngineeringFormatInfo.Default, "{0:S}", 12345.67);        // Returns "12.346 k"
            String.Format(EngineeringFormatInfo.Default, "{0:S1}", 12345.67);       // Returns "12.3 k"
            String.Format(EngineeringFormatInfo.Default, "{0:S'Hz'}", 12345.67);    // Returns "12.346 kHz"
            String.Format(EngineeringFormatInfo.Default, "{0:S1'Hz'}", 12345.67);   // Returns "12.3 kHz"
            </code>
            </example>
            <lastupdated>5/25/2004 11:50:37 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.EngineeringFormatInfo"/> class.
            </summary>
            <lastupdated>11/14/2003 4:53:02 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:08 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.GetInstance(System.IFormatProvider)">
            <summary>
            Gets <see cref="T:NationalInstruments.EngineeringFormatInfo"/> associated with the specified
            <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="provider">
            The <see cref="T:System.IFormatProvider"/> used to get <see cref="T:NationalInstruments.EngineeringFormatInfo"/>.
            </param>
            <returns>
            The <see cref="T:NationalInstruments.EngineeringFormatInfo"/> associated with the specified
            <see cref="T:System.IFormatProvider"/>.
            </returns>
            <lastupdated>11/14/2003 4:54:31 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.ReadOnly(NationalInstruments.EngineeringFormatInfo)">
            <summary>
            Returns a read-only copy of the specified <see cref="T:NationalInstruments.EngineeringFormatInfo"/>.
            </summary>
            <param name="efi">
            The <see cref="T:NationalInstruments.EngineeringFormatInfo"/> from which to create a read-only copy.
            </param>
            <returns>
            Attempting to perform an assignment to a property of a read-only
            <see cref="T:NationalInstruments.EngineeringFormatInfo"/> causes an
            <see cref="T:System.InvalidOperationException"/>.
            </returns>
            <lastupdated>11/14/2003 4:54:55 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.GetFormat(System.Type)">
            <summary>
            Gets an object of the specified type that provides a numeric formatting service.
            </summary>
            <param name="formatType">
            The <see cref="T:System.Type"/> of the required formatting service.
            </param>
            <returns>
            The current <see cref="T:NationalInstruments.EngineeringFormatInfo"/>, if <paramref name="formatType"/>
            is the same as the type of the current <see cref="T:NationalInstruments.EngineeringFormatInfo"/>;
            otherwise, <see langword="null"/>.
            </returns>
            <remarks>
            The Format methods supported by the base types that accept an
            <see cref="T:System.IFormatProvider"/> parameter invoke this method when the current
            <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is passed as the
            <see cref="T:System.IFormatProvider"/> parameter.  This method implements
            <see cref="M:System.IFormatProvider.GetFormat(System.Type)"/>.
            </remarks>
            <lastupdated>11/14/2003 4:54:03 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.Clone">
            <summary>
            Creates a copy of <see cref="T:NationalInstruments.EngineeringFormatInfo"/>.
            </summary>
            <returns>
            A new <see cref="T:NationalInstruments.EngineeringFormatInfo"/> copied from the original
            <see cref="T:NationalInstruments.EngineeringFormatInfo"/>.
            </returns>
            <remarks>
            The clone is writable even if the original <see cref="T:NationalInstruments.EngineeringFormatInfo"/>
            is read-only; therefore, the properties of the clone can be modified with user-defined settings.
            </remarks>
            <lastupdated>11/14/2003 4:52:56 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.TryParse(System.String,System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the engineering string representation of a number to its double-precision floating-point number equivalent
            based on the format specified.
            </summary>
            <param name="format">
            A format string containing formatting specifications.
            </param>
            <param name="s">
            The formatted string to parse.
            </param>
            <param name="formatProvider">
            An <see cref="T:System.IFormatProvider"/> object that supplies format information about the
            current instance.
            </param>
            <param name="value">
            Upon return, contains the parsed value.
            </param>
            <returns>
            	<see langword="true"/> if the string is parsed successfully.
            </returns>
            <remarks>
            Use this method to parse an engineering string representation of a value to obtain the actual value.
            <para>
            The format strings that you can use with <paramref name="format"/>
            are specified by the following format:
            </para>
            	<para>
            	</para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Format</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5e+3.
            </description>
            			</item>
            			<item>
            				<term>
            EE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5E+3.
            </description>
            			</item>
            			<item>
            				<term>
            eee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5e+003.
            </description>
            			</item>
            			<item>
            				<term>
            EEE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5E+003.
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with no space between the number and the prefix.
            For example, 5000 becomes 5kilo.
            </description>
            			</item>
            			<item>
            				<term>
            s
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with no space between the number and the symbol.
            For example, 5000 becomes 5k.
            </description>
            			</item>
            			<item>
            				<term>
            SS
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with a space between the number and the prefix.
            For example, 5000 becomes 5 kilo.
            </description>
            			</item>
            			<item>
            				<term>
            S
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with a space between the number and the symbol.
            For example, 5000 becomes 5 k.
            </description>
            			</item>
            		</list>
            		<para>
            For more information about how to format strings, refer to <see cref="T:NationalInstruments.EngineeringFormatInfo" crefType="Unqualified"/>.</para>
            	</para>
            </remarks>
            <example>
            	<para>The following example shows how to parse a string formatted with <format type="bold">S</format>.</para>
            	<code lang="VB.NET">
            Dim s As String = "9.50"
            Dim x As Double
            Dim info As EngineeringFormatInfo = New EngineeringFormatInfo()
            Dim success As Boolean = info.TryParse("S", s, CultureInfo.CurrentCulture, x)
            </code>
            </example>
            <example>
            	<code lang="C#">
            string s = "9.50";
            double x; 
            EngineeringFormatInfo info = new EngineeringFormatInfo();
            bool success = info.TryParse("S", s, CultureInfo.CurrentCulture, out x);
            </code>
            </example>
            <lastupdated>12/17/2008 1:50:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.Parse(System.String,System.String)">
            <summary>
            Converts the engineering string representation of a number to its double-precision floating-point number equivalent
            based on the format specified.
            </summary>
            <param name="format">
            A format string containing formatting specifications.
            </param>
            <param name="s">
            The formatted string to parse.
            </param>
            <returns>
            The parsed value.
            </returns>
            <remarks>
            Use this method to parse an engineering string representation of a value to obtain the actual value.
            <para>
            The format strings that you can use with <paramref name="format"/>
            are specified by the following format:
            </para>
            	<para>
            	</para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Format</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5e+3.
            </description>
            			</item>
            			<item>
            				<term>
            EE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5E+3.
            </description>
            			</item>
            			<item>
            				<term>
            eee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5e+003.
            </description>
            			</item>
            			<item>
            				<term>
            EEE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5E+003.
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with no space between the number and the prefix.
            For example, 5000 becomes 5kilo.
            </description>
            			</item>
            			<item>
            				<term>
            s
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with no space between the number and the symbol.
            For example, 5000 becomes 5k.
            </description>
            			</item>
            			<item>
            				<term>
            SS
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with a space between the number and the prefix.
            For example, 5000 becomes 5 kilo.
            </description>
            			</item>
            			<item>
            				<term>
            S
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with a space between the number and the symbol.
            For example, 5000 becomes 5 k.
            </description>
            			</item>
            		</list>
            		<para>
            For more information about how to format strings, refer to <see cref="T:NationalInstruments.EngineeringFormatInfo" crefType="Unqualified"/>.</para>
            	</para>
            </remarks>
            <example>
            	<para>The following example shows how to parse a string formatted with <format type="bold">S</format>.</para>
            	<code lang="VB.NET">
            Dim s As String = "9.50"
            Dim info As EngineeringFormatInfo = New EngineeringFormatInfo()
            Dim x As Double = info.Parse("S", s)
            </code>
            </example>
            <example>
            	<code lang="C#">
            string s = "9.50";
            EngineeringFormatInfo info = new EngineeringFormatInfo();
            double x = info.Parse("S", s);
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">
            	<para><paramref name="format"/> is <see langword="null"/>.</para>
            	<para>-or-</para>
            	<para><paramref name="s"/> is <see langword="null"/></para>
            </exception>
            <exception cref="T:System.FormatException">
            	<para><paramref name="format"/> is not a valid engineering format.</para>
            	<para>-or-</para>
            	<para>The format of <paramref name="s"/> does not match the format specified by <paramref name="format"/>.</para>
            </exception>
            <lastupdated>12/17/2008 1:36:42 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.Parse(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the engineering string representation of a number to its double-precision floating-point number equivalent
            based on the specified format and format provider.
            </summary>
            <param name="format">
            A format string containing formatting specifications.
            </param>
            <param name="s">
            The formatted string to parse.
            </param>
            <param name="formatProvider">
            An <see cref="T:System.IFormatProvider"/> object that supplies format information about the
            current instance.
            </param>
            <returns>
            The parsed value.
            </returns>
            <remarks>
            Use this method to parse an engineering string representation of a value to obtain the actual value.
            <para>
            The format strings that you can use with <paramref name="format"/>
            are specified by the following format:
            </para>
            	<para>
            	</para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Format</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5e+3.
            </description>
            			</item>
            			<item>
            				<term>
            EE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with as few characters as possible.  For example,
            5000 becomes 5E+3.
            </description>
            			</item>
            			<item>
            				<term>
            eee
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'e' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5e+003.
            </description>
            			</item>
            			<item>
            				<term>
            EEE
            </term>
            				<description>
            Formats the numeric value into engineering notation with an 'E' inserted between the number
            and the exponent, and the exponent formatted with three characters.  For example,
            5000 becomes 5E+003.
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with no space between the number and the prefix.
            For example, 5000 becomes 5kilo.
            </description>
            			</item>
            			<item>
            				<term>
            s
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with no space between the number and the symbol.
            For example, 5000 becomes 5k.
            </description>
            			</item>
            			<item>
            				<term>
            SS
            </term>
            				<description>
            Formats the numeric value with an SI prefix, with a space between the number and the prefix.
            For example, 5000 becomes 5 kilo.
            </description>
            			</item>
            			<item>
            				<term>
            S
            </term>
            				<description>
            Formats the numeric value with an SI symbol, with a space between the number and the symbol.
            For example, 5000 becomes 5 k.
            </description>
            			</item>
            		</list>
            		<para>
            For more information about how to format strings, refer to <see cref="T:NationalInstruments.EngineeringFormatInfo" crefType="Unqualified"/>.</para>
            	</para>
            </remarks>
            <example>
            	<para>The following example shows how to parse a string formatted with <format type="bold">S</format>.</para>
            	<code lang="VB.NET">
            Dim s As String = "9.50"
            Dim info As EngineeringFormatInfo = New EngineeringFormatInfo()
            Dim x As Double = info.Parse("S", s, CultureInfo.CurrentCulture)
            </code>
            </example>
            <example>
            	<code lang="C#">
            string s = "9.50";
            EngineeringFormatInfo info = new EngineeringFormatInfo();
            double x = info.Parse("S", s, CultureInfo.CurrentCulture);
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">
            	<para><paramref name="format"/> is <see langword="null"/>.</para>
            	<para>-or-</para>
            	<para><paramref name="s"/> is <see langword="null"/></para>
            </exception>
            <exception cref="T:System.FormatException">
            	<para><paramref name="format"/> is not a valid engineering format.</para>
            	<para>-or-</para>
            	<para>The format of <paramref name="s"/> does not match the format specified by <paramref name="format"/>.</para>
            </exception>
            <lastupdated>12/17/2008 1:39:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.EngineeringFormatInfo.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Converts the value of a specified object to an equivalent string representation using
            specified formatting information.
            </summary>
            <param name="format">
            A format string containing formatting specifications.
            </param>
            <param name="arg">
            An object to format.
            </param>
            <param name="formatProvider">
            An <see cref="T:System.IFormatProvider"/> object that supplies format information about the
            current instance.
            </param>
            <returns>
            The string representation of the value of <paramref name="arg"/>, formatted as specified
            by <paramref name="format"/> and <paramref name="formatProvider"/>.
            </returns>
            <lastupdated>11/14/2003 4:53:25 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.IsReadOnly">
            <summary>
            Gets a value that indicates if <see cref="T:NationalInstruments.EngineeringFormatInfo"/>
            is read-only.
            </summary>
            <value>
            	<see langword="true"/> if <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is
            read-only.
            </value>
            <lastupdated>11/14/2003 4:46:00 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.YottaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">24</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">24</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:51:32 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.YottaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">24</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">24</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:51:42 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ZettaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">21</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">21</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:52:15 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ZettaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">21</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">21</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:52:24 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ExaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">18</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">18</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:24:36 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ExaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">18</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">18</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:24:46 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.PetaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">15</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">15</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:07 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.PetaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">15</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">15</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:15 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.TeraPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">12</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">12</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:47 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.TeraSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">12</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">12</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:53 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.GigaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">9</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">9</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:45:15 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.GigaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">9</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">9</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:45:36 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MegaPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">6</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">6</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:29 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MegaSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">6</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">6</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:35 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.KiloPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript">3</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript">3</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:13 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.KiloSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript">3</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript">3</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:21 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MilliPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>3</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>3</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:49:15 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MilliSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>3</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>3</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:49:29 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MicroPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>6</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>6</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.MicroSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>6</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>6</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:48:59 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.NanoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>9</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>9</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:49:42 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.NanoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>9</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>9</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:49:56 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.PicoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>12</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>12</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:27 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.PicoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>12</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>12</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:50:42 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.FemtoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>15</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>15</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:25:09 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.FemtoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>15</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>15</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:45:04 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.AttoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>18</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>18</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:23:03 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.AttoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>18</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>18</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:23:40 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ZeptoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>21</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>21</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:51:56 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.ZeptoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>21</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>21</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:52:07 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.YoctoPrefix">
            <summary>
            Gets or sets the SI prefix string to use for 10<format type="superscript"><entity value="ndash"/>24</format>.
            </summary>
            <value>
            The SI prefix string that is displayed for 10<format type="superscript"><entity value="ndash"/>24</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:51:11 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.YoctoSymbol">
            <summary>
            Gets or sets the SI symbol string to use for 10<format type="superscript"><entity value="ndash"/>24</format>.
            </summary>
            <value>
            The SI symbol string that is displayed for 10<format type="superscript"><entity value="ndash"/>24</format>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The property is being set and <see cref="T:NationalInstruments.EngineeringFormatInfo"/> is read-only.
            </exception>
            <lastupdated>11/14/2003 4:51:24 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.EngineeringFormatInfo.Default">
            <summary>
            Gets a read-only <see cref="T:NationalInstruments.EngineeringFormatInfo"/> whose properties are
            set to the default values.
            </summary>
            <value>
            A read-only <see cref="T:NationalInstruments.EngineeringFormatInfo"/> with all of its properties
            set to their default values.
            </value>
            <remarks>
            The <see cref="P:NationalInstruments.EngineeringFormatInfo.Default"/> property provides a
            convenient way to use <see cref="T:NationalInstruments.EngineeringFormatInfo"/> with base type
            Format methods that accept an <see cref="T:System.IFormatProvider"/> parameter, such as
            <see cref="M:System.String.Format(System.String,System.Object)"/>.  If you want to use <see cref="T:NationalInstruments.EngineeringFormatInfo"/>
            with all of its properties set to their default values and do not wish to customize any of
            the formatted values, you can pass <see cref="P:NationalInstruments.EngineeringFormatInfo.Default"/>
            as the <see cref="T:System.IFormatProvider"/> parameter value instead of creating a new <see cref="T:NationalInstruments.EngineeringFormatInfo"/>.
            </remarks>
            <lastupdated>7/26/2004 9:30:51 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexDouble">
            <summary>
            Represents a complex number of type <see cref="T:System.Double"/> that is composed of a real part and an imaginary part.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            A complex number is an ordered pair of real numbers. 
            Complex numbers are usually written as <format type="italics">a + bi</format>
            where <format type="italics">a</format>
             is the real number and <format type="italics">b</format>
             is the imaginary number. <see cref="T:NationalInstruments.ComplexDouble"/> represents a complex number composed of <see cref="T:System.Double"/> types. Complex numbers can also be represented using <see cref="P:NationalInstruments.ComplexDouble.Magnitude"/> and <see cref="P:NationalInstruments.ComplexDouble.Phase"/>. <see cref="P:NationalInstruments.ComplexDouble.Magnitude"/> is defined as the square root of the sum of <see cref="P:NationalInstruments.ComplexDouble.Real"/><format type="superscript">2</format> + <see cref="P:NationalInstruments.ComplexDouble.Imaginary"/><format type="superscript">2</format>. <see cref="P:NationalInstruments.ComplexDouble.Phase"/> is defined as the arctangent of <see cref="P:NationalInstruments.ComplexDouble.Real"/> and <see cref="P:NationalInstruments.ComplexDouble.Imaginary"/>. You can plot <see cref="T:NationalInstruments.ComplexDouble"/> numbers on the Measurement Studio Complex Graph.
            </remarks>
            <seealso keyword="DataConverter" keywordType="mstudio">Converting Data Types Using Measurement Studio DataConverter</seealso>
            <lastupdated>9/16/2008 4:52:34 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ComplexDouble"/> class with the specified real and imaginary values.
            </summary>
            <param name="real">
            The real part of the complex number.
            </param>
            <param name="imaginary">
            The imaginary part of the complex number.
            </param>
            <lastupdated>2/21/2003 9:56:09 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.FromDouble(System.Double)">
            <summary>
            Creates a <see cref="T:NationalInstruments.ComplexDouble"/> from a double real value.
            </summary>
            <param name="real">
            The real part of the complex number.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with the real part specified by <paramref name="real"/>
            and a 0 imaginary part.
            </returns>
            <lastupdated>3/28/2003 2:44:57 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.FromPolar(System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.ComplexDouble"/> that represents a complex
            value with the specified magnitude and phase.
            </summary>
            <param name="magnitude">
            The magnitude of the complex quantity.
            </param>
            <param name="phase">
            The phase, in radians, of the complex quantity.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> that represents a complex value
            with a magnitude of <paramref name="magnitude"/> and a phase of 
            <paramref name="phase"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:23 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Plus">
            <summary>
            Returns this instance of the <see cref="T:NationalInstruments.ComplexDouble"/> (unary plus).
            </summary>
            <returns>
            This instance of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:51 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_UnaryPlus(NationalInstruments.ComplexDouble)">
            <summary>
            Returns the specified instance of the <see cref="T:NationalInstruments.ComplexDouble"/> (unary plus).
            </summary>
            <param name="c">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            The specified instance of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:46 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Negate">
            <summary>
            Returns a <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is 
            the negated value of this object (unary minus).
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the negated value 
            of this object.
            </returns>
            <lastupdated>2/21/2003 9:56:33 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_UnaryNegation(NationalInstruments.ComplexDouble)">
            <summary>
            Returns a <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the negative of the specified 
            object (unary minus).
            </summary>
            <param name="c">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the negative of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:36 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Add(NationalInstruments.ComplexDouble)">
            <summary>
            Adds the value of the specified <see cref="T:NationalInstruments.ComplexDouble"/> to this object and returns a 
            new <see cref="T:NationalInstruments.ComplexDouble"/> that represents the sum.
            </summary>
            <param name="c">
            The <see cref="T:NationalInstruments.ComplexDouble"/> to add to this object.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> that represents the value of this 
            object plus the value of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:05 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Addition(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Adds the values of two <see cref="T:NationalInstruments.ComplexDouble"/> objects.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the sum of 
            <paramref name="c1"/> and <paramref name="c2"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:47 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Subtract(NationalInstruments.ComplexDouble)">
            <summary>
            Subtracts the value of a <see cref="T:NationalInstruments.ComplexDouble"/> from this object and 
            returns a new <see cref="T:NationalInstruments.ComplexDouble"/> that represents the difference.
            </summary>
            <param name="c">
            The <see cref="T:NationalInstruments.ComplexDouble"/> to subtract from this object.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> that represents the value of this
            object minus the value of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:55 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Subtraction(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Subtracts the value of one <see cref="T:NationalInstruments.ComplexDouble"/> from the value of another <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the result of 
            <paramref name="c1"/> minus <paramref name="c2"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:41 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Multiply(NationalInstruments.ComplexDouble)">
            <summary>
            Multiplies a <see cref="T:NationalInstruments.ComplexDouble"/> with this object and 
            returns a new <see cref="T:NationalInstruments.ComplexDouble"/> that represents the product.
            </summary>
            <param name="c">
            The <see cref="T:NationalInstruments.ComplexDouble"/> to multiply with this object.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> that represents the value of this
            object times the value of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:32 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Multiply(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Multiplies the values of two <see cref="T:NationalInstruments.ComplexDouble"/> objects.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that is the product of 
            <paramref name="c1"/> and <paramref name="c2"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:42 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Divide(NationalInstruments.ComplexDouble)">
            <summary>
            Divides this object by a <see cref="T:NationalInstruments.ComplexDouble"/> and returns
            a new <see cref="T:NationalInstruments.ComplexDouble"/> that represents the result.
            </summary>
            <param name="c">
            The <see cref="T:NationalInstruments.ComplexDouble"/> by which to divide this object.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> that represents the value of this
            object divided by the value of <paramref name="c"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:17 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Division(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Divides the value of a <see cref="T:NationalInstruments.ComplexDouble"/> by the value of another <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with a value that equal to is 
            <paramref name="c1"/> divided by <paramref name="c2"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:44 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Explicit(System.Double)~NationalInstruments.ComplexDouble">
            <summary>
            Creates a <see cref="T:NationalInstruments.ComplexDouble"/> from a double real value.
            </summary>
            <param name="real">
            The real part of the complex number.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> with the real part specified by <paramref name="real"/>
            and a 0 imaginary part.
            </returns>
            <lastupdated>3/28/2003 2:45:31 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.ComplexDouble"/> objects might have the same hash 
            code even though they represent different values.
            </remarks>
            <lastupdated>2/21/2003 9:56:25 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Equality(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Returns if two <see cref="T:NationalInstruments.ComplexDouble"/> objects are 
            equal.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            	<see langword="true"/> if the values of <paramref name="c1"/> and <paramref name="c2"/>
            are equal.
            </returns>
            <lastupdated>2/21/2003 9:56:48 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.op_Inequality(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Returns if two <see cref="T:NationalInstruments.ComplexDouble"/> objects are 
            not equal.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            	<see langword="true"/> if the values of <paramref name="c1"/> and <paramref name="c2"/>
            are not equal.
            </returns>
            <lastupdated>2/21/2003 9:56:34 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Equals(NationalInstruments.ComplexDouble,NationalInstruments.ComplexDouble)">
            <summary>
            Returns a value that indicates if two specified <see cref="T:NationalInstruments.ComplexDouble"/> objects are equal.
            </summary>
            <param name="c1">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <param name="c2">
            A <see cref="T:NationalInstruments.ComplexDouble"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="c1"/> and <paramref name="c2"/> are equal.
            </returns>
            <lastupdated>2/21/2003 9:56:20 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Equals(System.Object)">
            <summary>
            Returns a value that indicates if this object is equal to the specified object.
            </summary>
            <param name="obj">
            An object to compare with this object.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a
            <see cref="T:NationalInstruments.ComplexDouble"/> that represents the same value as this object.
            </returns>
            <lastupdated>2/21/2003 9:56:21 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Equals(NationalInstruments.ComplexDouble)">
            <summary>
            Returns a value that indicates if this object is equal to the specified 
            <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <param name="c">
            A <see cref="T:NationalInstruments.ComplexDouble"/> to compare with this object.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="c"/> represents the same value  
            as this object.
            </returns>
            <lastupdated>2/21/2003 9:56:18 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>2/21/2003 9:56:56 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns the <see cref="T:System.String"/> representation of the value of this object using the specified format and culture-specific 
            formatting information.
            </summary>
            <param name="format">
            	The <see cref="T:System.String"/> that specifies the format to use.  This value can be any of the numeric format 
            strings that are defined for <see cref="T:System.Double"/> and is applied to the real and imaginary
            parts of the complex number. If <paramref name="format"/> is <see langword="null"/>,  the return value uses the default format.</param>
            <param name="formatProvider">
            The <see cref="T:System.IFormatProvider"/> to use to format the value.  This <see cref="T:System.IFormatProvider"/> is
            applied to the real and imaginary parts of the number. If <paramref name="formatProvider"/> is <see langword="null"/>, the return value uses
            the numeric format information from the current locale setting of the operating system.
            </param>
            <returns>
            A string representation of this object as specified by <paramref name="format"/> and <paramref name="formatProvider"/>.
            </returns>
            <lastupdated>2/21/2003 9:57:03 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ToString(System.String)">
            <summary>
            Returns the <see cref="T:System.String"/> representation of the value of this object using the specified format.
            </summary>
            <param name="format">
            The <see cref="T:System.String"/> that specifies the format to use.  This value can be any of the numeric format 
            strings that are defined for <see cref="T:System.Double"/> and is applied to the real and imaginary
            parts of the complex number. If <paramref name="format"/> is <see langword="null"/>, the return value uses the default format.
            </param>
            <returns>
            A string representation of this object as specified by <paramref name="format"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:59 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ToString(System.IFormatProvider)">
            <summary>
            Returns the <see cref="T:System.String"/> representation of the value of this object using the specified culture-specific formatting information.
            </summary>
            <param name="formatProvider">
            The <see cref="T:System.IFormatProvider"/> to use to format the value.  This <see cref="T:System.IFormatProvider"/> is
            applied to the real and imaginary parts of the number. If <paramref name="formatProvider"/> is <see langword="null"/>, the return value uses
             the numeric format information from the current locale setting of the operating system.
            </param>
            <returns>
            A string representation of this object as specified by <paramref name="formatProvider"/>.
            </returns>
            <lastupdated>2/21/2003 9:56:58 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>5/11/2005 11:05:04 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ComposeArray(System.Double[],System.Double[])">
            <summary>
            Creates an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects from 
            <see cref="T:System.Double"/> arrays that represent the real and imaginary parts of complex numbers.
            </summary>
            <param name="realData">
            The real parts of complex numbers.
            </param>
            <param name="imaginaryData">
            The imaginary parts of complex numbers.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> array in which the real part of the
            <format type="italics">n</format>th element is <paramref name="realData"/>[<format type="italics">n</format>] and the imaginary part is 
            <paramref name="imaginaryData"/>[<format type="italics">n</format>].
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="realData"/> and <paramref name="imaginaryData"/> do not have the same 
            length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="realData"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="imaginaryData"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>9/15/2005 5:50:08 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ComposeArray(System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Creates an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects from subsets of 
            <see cref="T:System.Double"/> arrays that represent the real and imaginary parts of complex numbers.
            </summary>
            <param name="realData">
            The real parts of complex numbers.
            </param>
            <param name="imaginaryData">
            The imaginary parts of complex numbers.
            </param>
            <param name="startIndex">
            The index in <paramref name="realData"/> (and <paramref name="imaginaryData"/>), from which to compose the <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="length">
            The number of elements used, beginning at <paramref name="startIndex"/> in <paramref name="realData"/> and 
            <paramref name="imaginaryData"/>, to compose the <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> array in which the real part of the
            <format type="italics">n</format>th element is <paramref name="realData"/>[<paramref name="startIndex"/> + <format type="italics">n</format>] and the imaginary part is 
            <paramref name="imaginaryData"/>[<paramref name="startIndex"/> + <format type="italics">n</format>].
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="realData"/> and <paramref name="imaginaryData"/> do not have the same 
            length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="realData"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="imaginaryData"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="startIndex"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="startIndex"/> is greater than or equal to the
            number of elements in <paramref name="realData"/> (or <paramref name="imaginaryData"/>).
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is greater than the number of elements
            from <paramref name="startIndex"/> to the end of <paramref name="realData"/> (or <paramref name="imaginaryData"/>).
            </para>
            </exception>
            <lastupdated>9/15/2005 5:40:19 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ComposeArrayPolar(System.Double[],System.Double[])">
            <summary>
            Creates an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects from 
            <see cref="T:System.Double"/> arrays that represent the magnitudes and phases of complex numbers.
            </summary>
            <param name="magnitudes">
            The magnitudes of complex numbers.
            </param>
            <param name="phases">
            The phases of complex numbers.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> array in which the magnitude of the
            <format type="italics">n</format>th element is <paramref name="magnitudes"/>[<format type="italics">n</format>]
             and the phase is <paramref name="phases"/>[<format type="italics">n</format>].
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="magnitudes"/> and <paramref name="phases"/> do not have the same 
            length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="magnitudes"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="phases"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>9/15/2005 5:41:03 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.ComposeArrayPolar(System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Creates an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects from subsets of
            <see cref="T:System.Double"/> arrays that represent the magnitudes and phases of complex numbers.
            </summary>
            <param name="magnitudes">
            The magnitudes of complex numbers.
            </param>
            <param name="phases">
            The phases of complex numbers.
            </param>
            <param name="startIndex">
            The index in <paramref name="magnitudes"/> and <paramref name="phases"/>, from which to compose the <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="length">
            The number of elements used, beginning at <paramref name="startIndex"/> in <paramref name="magnitudes"/> and 
            <paramref name="phases"/>, to compose the <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> array in which the magnitude of the
            <format type="italics">n</format>th element is <paramref name="magnitudes"/>[<paramref name="startIndex"/> + <format type="italics">n</format>]
             and the phase is <paramref name="phases"/>[<paramref name="startIndex"/> + <format type="italics">n</format>].
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="magnitudes"/> and <paramref name="phases"/> do not have the same 
            length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="magnitudes"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="phases"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="startIndex"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="startIndex"/> is greater than or equal to the
            number of elements in <paramref name="magnitudes"/> or <paramref name="phases"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is greater than the number of elements
            from <paramref name="startIndex"/> to the end of <paramref name="magnitudes"/> or <paramref name="phases"/>.
            </para>
            </exception>
            <lastupdated>9/15/2005 5:45:09 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.DecomposeArray(NationalInstruments.ComplexDouble[],System.Double[]@,System.Double[]@)">
            <summary>Extracts the real and imaginary parts of a <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="realData">
            Upon return, contains an array that consists of the real parts of <paramref name="complexData"/>.
            </param>
            <param name="imaginaryData">
            Upon return, contains an array that consists of the imaginary parts of <paramref name="complexData"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>3/28/2003 2:44:08 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.DecomposeArray(NationalInstruments.ComplexDouble[],System.Int32,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>Extracts the real and imaginary parts of a subset of a <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="startIndex">
            The index in <paramref name="complexData"/>, from which to decompose into two <see cref="T:System.Double"/> arrays.
            </param>
            <param name="length">
            The number of elements used, beginning at <paramref name="startIndex"/> in <paramref name="complexData"/>,
             to decompose into two <see cref="T:System.Double"/> arrays.
            </param>
            <param name="realData">
            Upon return, contains an array that consists of the real parts of <paramref name="complexData"/>.
            </param>
            <param name="imaginaryData">
            Upon return, contains an array that consists of the imaginary parts of <paramref name="complexData"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="startIndex"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="startIndex"/> is greater than or equal to the
            number of elements in <paramref name="complexData"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is greater than the number of elements
            from <paramref name="startIndex"/> to the end of <paramref name="complexData"/>.
            </para>
            </exception>
            <lastupdated>9/15/2005 5:46:55 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.DecomposeArrayPolar(NationalInstruments.ComplexDouble[],System.Double[]@,System.Double[]@)">
            <summary>Extracts the magnitude and phase parts of a <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="magnitudes">
            Upon return, contains an array that consists of the magnitudes of <paramref name="complexData"/>.
            </param>
            <param name="phases">
            Upon return, contains an array that consists of the phases of <paramref name="complexData"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>3/28/2003 2:44:20 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.DecomposeArrayPolar(NationalInstruments.ComplexDouble[],System.Int32,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>Extracts the magnitude and phase parts of a subset of a <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <param name="startIndex">
            The index in <paramref name="complexData"/>, from which to decompose into two <see cref="T:System.Double"/> arrays.
            </param>
            <param name="length">
            The number of elements used, beginning at <paramref name="startIndex"/> in <paramref name="complexData"/>,
             to decompose into two <see cref="T:System.Double"/> arrays.
            </param>
            <param name="magnitudes">
            Upon return, contains an array that consists of the magnitudes of <paramref name="complexData"/>.
            </param>
            <param name="phases">
            Upon return, contains an array that consists of the phases of <paramref name="complexData"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="startIndex"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="startIndex"/> is greater than or equal to the
            number of elements in <paramref name="complexData"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is less than 0.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="length"/> is greater than the number of elements
            from <paramref name="startIndex"/> to the end of <paramref name="complexData"/>.
            </para>
            </exception>
            <lastupdated>9/15/2005 5:47:37 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.GetPhases(NationalInstruments.ComplexDouble[])">
            <summary>
            Extracts the phases of complex numbers from an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <returns>
            A <see cref="T:System.Double"/> array that contains the phases of the complex numbers in
            <paramref name="complexData"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>3/28/2003 2:45:16 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.GetMagnitudes(NationalInstruments.ComplexDouble[])">
            <summary>
            Extracts the magnitudes of complex numbers from an array of <see cref="T:NationalInstruments.ComplexDouble"/> objects.
            </summary>
            <param name="complexData">
            A <see cref="T:NationalInstruments.ComplexDouble"/> array.
            </param>
            <returns>
            A <see cref="T:System.Double"/> array that contains the magnitudes of the complex numbers in
            <paramref name="complexData"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="complexData"/> is <see langword="null"/>.
            </para>
            </exception>
            <lastupdated>3/28/2003 2:45:07 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Parse(System.String)">
            <summary>
            Converts the string representation of a complex number to its
            <see cref="T:NationalInstruments.ComplexDouble"/> equivalent.
            </summary>
            <param name="s">
            A string contains a complex number to convert.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> equivalent to the complex numeric value
            specified in <paramref name="s"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="s"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="s"/> is not a complex number in a valid format.
            </exception>
            <remarks>
            	<para>
            The <paramref name="s"/> parameter can contains a string of the form:
            </para>
            	<list type="bullet">
            		<item>
            			<description>
            [real] + [imaginary]i
            </description>
            		</item>
            		<item>
            			<description>
            [real] + [imaginary]j
            </description>
            		</item>
            		<item>
            			<description>
            [real] + i[imaginary]
            </description>
            		</item>
            		<item>
            			<description>
            [real] + j[imaginary]
            </description>
            		</item>
            		<item>
            			<description>
            [imaginary]i + [real]
            </description>
            		</item>
            		<item>
            			<description>
            [imaginary]j + [real]
            </description>
            		</item>
            		<item>
            			<description>
            i[imaginary] + real
            </description>
            		</item>
            		<item>
            			<description>
            j[imaginary] + real
            </description>
            		</item>
            		<item>
            			<description>
            ([real], [imaginary])
            </description>
            		</item>
            	</list>
            	<para>
            The [real] and [imaginary] parts of the strings above are <see cref="T:System.Double"/> values whose
            string forms are specified in the <see cref="M:System.Double.Parse(System.String)"/> documentation.  Some examples
            of <paramref name="s"/> are "1.2 + 3.4i", "1.2 + 3.4j", "1.2 + i3.4", "1.2 + j3.4", and "(1.2, 3.4)".
            </para>
            </remarks>
            <seealso cref="M:System.Double.Parse(System.String)"/>
            <lastupdated>3/28/2003 2:49:46 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a complex number in a specified culture-specific format
            to its <see cref="T:NationalInstruments.ComplexDouble"/> equivalent.
            </summary>
            <param name="s">
            A string contains a complex number to convert.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information
            about <paramref name="s"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexDouble"/> equivalent to the complex numeric value
            specified in <paramref name="s"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="s"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="s"/> is not a complex number in a valid format.
            </exception>
            <remarks>
            	<para>
            The <paramref name="s"/> parameter can contains a string of the form:
            </para>
            	<list type="bullet">
            		<item>
            			<description>
            [real] + [imaginary]i
            </description>
            		</item>
            		<item>
            			<description>
            [real] + [imaginary]j
            </description>
            		</item>
            		<item>
            			<description>
            [real] + i[imaginary]
            </description>
            		</item>
            		<item>
            			<description>
            [real] + j[imaginary]
            </description>
            		</item>
            		<item>
            			<description>
            [imaginary]i + [real]
            </description>
            		</item>
            		<item>
            			<description>
            [imaginary]j + [real]
            </description>
            		</item>
            		<item>
            			<description>
            i[imaginary] + real
            </description>
            		</item>
            		<item>
            			<description>
            j[imaginary] + real
            </description>
            		</item>
            		<item>
            			<description>
            ([real], [imaginary])
            </description>
            		</item>
            	</list>
            	<para>
            The [real] and [imaginary] parts of the strings above are <see cref="T:System.Double"/> values whose
            string forms are specified in the <see cref="M:System.Double.Parse(System.String)"/> documentation.  Some examples
            of <paramref name="s"/> are "1.2 + 3.4i", "1.2 + 3.4j", "1.2 + i3.4", "1.2 + j3.4", and "(1.2, 3.4)".
            </para>
            </remarks>
            <seealso cref="M:System.Double.Parse(System.String)"/>
            <lastupdated>3/28/2003 2:49:58 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.TryParse(System.String,NationalInstruments.ComplexDouble@)">
            <summary>
            Converts the string representation of a complex number to its
            <see cref="T:NationalInstruments.ComplexDouble"/> equivalent.
            </summary>
            <param name="s">
            A string contains a complex number to convert.
            </param>
            <param name="result">
            A <see cref="T:NationalInstruments.ComplexDouble"/> equivalent to the complex numeric value
            specified by <paramref name="s"/>.  If the return value is <see langword="false"/>, <paramref name="result"/>
            is <see cref="P:NationalInstruments.ComplexDouble.Zero"/>.
            </param>
            <returns>
            	<see langword="true"/> is <paramref name="s"/> is converted successfully.
            </returns>
            <seealso cref="M:NationalInstruments.ComplexDouble.Parse(System.String)"/>
            <lastupdated>3/28/2003 2:50:20 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexDouble.TryParse(System.String,System.IFormatProvider,NationalInstruments.ComplexDouble@)">
            <summary>
            Converts the string representation of a complex number in a specified culture-specific format
            to its <see cref="T:NationalInstruments.ComplexDouble"/> equivalent.
            </summary>
            <param name="s">
            A string contains a complex number to convert.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information
            about <paramref name="s"/>.
            </param>
            <param name="result">
            A <see cref="T:NationalInstruments.ComplexDouble"/> equivalent to the complex numeric value
            specified by <paramref name="s"/>.  If the return value is <see langword="false"/>, <paramref name="result"/>
            is <see cref="P:NationalInstruments.ComplexDouble.Zero"/>.
            </param>
            <returns>
            	<see langword="true"/> is <paramref name="s"/> is converted successfully.
            </returns>
            <seealso cref="M:NationalInstruments.ComplexDouble.Parse(System.String)"/>
            <lastupdated>3/28/2003 2:50:23 PM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.Real">
            <summary>
            Gets or sets the real part of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <value>
            The real part of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </value>
            <lastupdated>2/21/2003 9:56:52 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.Imaginary">
            <summary>
            Gets or sets the imaginary part of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <value>
            The imaginary part of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </value>
            <lastupdated>2/21/2003 9:56:29 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.Magnitude">
            <summary>
            Gets the magnitude of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <value>
            The magnitude of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.ComplexDouble.Magnitude"/> is defined as the square root of the sum of <see cref="P:NationalInstruments.ComplexDouble.Real"/><format type="superscript">2</format> + <see cref="P:NationalInstruments.ComplexDouble.Imaginary"/><format type="superscript">2</format>. 
            </remarks>
            <lastupdated>3/17/2008 3:36:39 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.Phase">
            <summary>
            Gets the phase of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <value>
            The phase of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.ComplexDouble.Phase"/> is defined as the arctangent of <see cref="P:NationalInstruments.ComplexDouble.Real"/> and <see cref="P:NationalInstruments.ComplexDouble.Imaginary"/>. 
            </remarks>
            <lastupdated>3/17/2008 3:37:14 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.ComplexConjugate">
            <summary>
            Gets the complex conjugate of the <see cref="T:NationalInstruments.ComplexDouble"/>.
            </summary>
            <value>
            The complex conjugate of this object.  For a complex value <format type="italics">a + bi</format>, the complex 
            conjugate is <format type="italics">a - bi</format>.
            </value>
            <lastupdated>2/21/2003 9:56:07 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexDouble.Zero">
            <summary>
            Gets the complex number <format type="italics">0 + 0i</format>.
            </summary>
            <value>
            The complex number <format type="italics">0 + 0i</format>.
            </value>
            <remarks>
            This property provides a convenient source for an object of a 
            <see cref="T:NationalInstruments.ComplexDouble"/> with a value of <format type="italics">0 + 0i</format>.
            </remarks>
            <lastupdated>2/21/2003 9:57:05 AM</lastupdated>
            <updatedby>Beth Parrott</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformSignalCollection">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.DigitalWaveformSignal"/> objects.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/15/2005 5:29:32 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignalCollection.IndexOf(NationalInstruments.DigitalWaveformSignal)">
            <summary>
            Searches for the <see cref="T:NationalInstruments.DigitalWaveformSignal"/> and returns the zero-based index of the first
            occurrence.
            </summary>
            <param name="signal">
            The <see cref="T:NationalInstruments.DigitalWaveformSignal"/> to locate.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="signal"/>.
            </returns>
            <lastupdated>9/16/2005 10:28:53 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignalCollection.CopyTo(NationalInstruments.DigitalWaveformSignal[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.
            </para>
            	<para>
            - or -
            </para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>9/16/2005 10:27:38 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignalCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:57 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignalCollection.GetEnumerator">
            <summary>
            Returns an enumerator that you use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>9/16/2005 10:27:49 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignalCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.DigitalWaveformSignal"/> at the specified index.
            </summary>
            <param name="signalIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>The <see cref="T:NationalInstruments.DigitalWaveformSignal"/> at the specified index.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="signalIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="signalIndex"/> is greater than or equal to count.
            </para>
            </exception>
            <lastupdated>9/16/2005 10:27:03 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignalCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NationalInstruments.DigitalWaveformSignal"/> with the specified signal name.
            </summary>
            <param name="signalName">
            The signal name of the <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </param>
            <value>The <see cref="T:NationalInstruments.DigitalWaveformSignal"/> with the signal name.</value>
            <exception cref="T:System.ArgumentException">
            	<paramref name="signalName"/> was not found.
            </exception>
            <lastupdated>9/16/2005 10:27:21 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignalCollection.Count">
            <summary>
            Gets the number of samples in the <see cref="T:NationalInstruments.DigitalWaveformSignalCollection"/>.
            </summary>
            <value>
            The number of samples in the <see cref="T:NationalInstruments.DigitalWaveformSignalCollection"/>.
            </value>
            <lastupdated>9/16/2005 10:26:09 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignalCollection.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>1/23/2009 4:21:52 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignalCollection.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>1/23/2009 4:21:56 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveform">
            <summary>
            Provides a data type that encapsulates digital data and timing information.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<para>
            		<see cref="T:NationalInstruments.DigitalWaveform"/> encapsulates a group of sampled digital signals. 
            You view the digital waveform in terms of signals or samples. With one signal, you view one state from each sample in the digital waveform. A sample represents a set of digital states that are either acquired at that same time or are at the same sample index in the digital waveform. The digital states of a sample span across a signal. Use <see cref="P:NationalInstruments.DigitalWaveform.Signals"/> to access the signals in a digital waveform. Use <see cref="P:NationalInstruments.DigitalWaveform.Samples"/>
            to access the samples in a digital waveform.</para>
            	<para>
            The first
            <see cref="T:NationalInstruments.DigitalWaveformSignal"/> in <see cref="P:NationalInstruments.DigitalWaveform.Signals"/> is
            the least significant signal. <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> specifies the timing
            information of the <see cref="T:NationalInstruments.DigitalWaveform"/>. When you create a digital waveform using the constructor or a factory method, such as <see cref="M:NationalInstruments.DigitalWaveform.FromPort(System.Byte[])"/>, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </para>
            	<para>
            Use <see cref="M:NationalInstruments.DigitalWaveform.FromPort(System.Byte[])"/> and <see cref="M:NationalInstruments.DigitalWaveform.FromPorts(System.Byte[0:,0:])"/> to 
            construct a <see cref="T:NationalInstruments.DigitalWaveform"/> from primitive data types.
            Use <see cref="M:NationalInstruments.DigitalWaveform.Test(NationalInstruments.DigitalWaveform)"/> to test a <see cref="T:NationalInstruments.DigitalWaveform"/>
            against an expected <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            </remarks>
            <example>
            The following sample demonstrates a method that displays all the digital states in a
            <see cref="T:NationalInstruments.DigitalWaveform"/>. Each row displayed is a particular signal. The first
            row is the least significant signal. The columns are the samples; the column on the left is the first
            sample.
            <code lang="VB.NET">
            Private Sub DisplayWaveform(ByVal waveform As DigitalWaveform)
                For Each signal As DigitalWaveformSignal In waveform.Signals
                    For Each state As DigitalState In signal.States
                        Debug.Write(String.Format("{0,-20}", state))
                    Next
                    Debug.WriteLine("")
                Next
            End Sub
            </code>
            </example>
            <example>
            	<code lang="C#">
            private void DisplayWaveform(DigitalWaveform waveform)
            {
                foreach(DigitalWaveformSignal signal in waveform.Signals)
                {
                    foreach(DigitalState state in signal.States)
                    {
                        Debug.Write(String.Format("{0,-20}", state));
                    }
                    Debug.WriteLine("");
                }
            }</code>
            </example>
            <seealso keyword="DataConverter" keywordType="mstudio">Converting Data Types Using Measurement Studio DataConverter</seealso>
            <lastupdated>6/30/2006 3:55:05 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.DigitalWaveform"/> with the specified sample and signal
            count.
            </summary>
            <param name="sampleCount">
            The number of samples in the <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="signalCount">
            The number of signals in the <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is less than zero.
            </para>
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </remarks>
            <lastupdated>9/19/2005 1:23:51 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.#ctor(System.Int32,System.Int32,NationalInstruments.DigitalState)">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.DigitalWaveform"/> with the specified sample count, signal
            count, and default value.
            </summary>
            <param name="sampleCount">
            The number of samples in the <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="signalCount">
            The number of signals in the <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="defaultValue">
            The <see cref="T:NationalInstruments.DigitalState"/> to initialize the <see cref="T:NationalInstruments.DigitalWaveform"/> with.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is less than zero.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="defaultValue"/> is an invalid <see cref="T:NationalInstruments.DigitalState"/> value.
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </remarks>
            <lastupdated>9/19/2005 1:24:00 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:13:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.DigitalWaveform.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.DigitalWaveform"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>9/6/2005 3:14:37 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:13:04 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>9/7/2005 11:08:52 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.CopyStates(NationalInstruments.DigitalWaveform,NationalInstruments.DigitalWaveform,System.Int32,System.Int32)">
            <summary>
            Copies the data of a source digital waveform to a destination digital waveform.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <param name="signalCount">
            The number of signals to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            The <paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than
            <paramref name="destinationWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is greater than
            <paramref name="sourceWaveform"/> signal count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is greater than
            <paramref name="destinationWaveform"/> signal count.
            </para>
            </exception>
            <lastupdated>9/19/2005 5:36:42 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.CopyStates(NationalInstruments.DigitalWaveform,System.Int32,System.Int32,NationalInstruments.DigitalWaveform,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the data of a source digital waveform to a destination digital waveform with the specified indexes.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="sourceSampleIndex">
            The source sample index.
            </param>
            <param name="sourceSignalIndex">
            The source signal index.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="destinationSampleIndex">
            The destination sample index.
            </param>
            <param name="destinationSignalIndex">
            The destination signal index.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <param name="signalCount">
            The number of signals to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            The <paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sourceSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSignalIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSignalIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="signalCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSampleIndex"/> + <paramref name="sampleCount"/> is greater than
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> + <paramref name="sampleCount"/> is greater than
            <paramref name="destinationWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSignalIndex"/> + <paramref name="signalCount"/> is greater than
            <paramref name="sourceWaveform"/> signal count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSignalIndex"/> + <paramref name="signalCount"/> is greater than
            <paramref name="destinationWaveform"/> signal count.
            </para>
            </exception>
            <lastupdated>9/19/2005 5:37:26 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.Test(NationalInstruments.DigitalWaveform)">
            <summary>
            Tests the digital waveform against an expected digital waveform.
            </summary>
            <param name="expectedWaveform">
            The expected <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveformTestResult"/> containing the test results.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="expectedWaveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The digital waveform and the <paramref name="expectedWaveform"/> signal counts are not equal.
            </exception>
            <remarks>
            Compares the digital waveform to the <paramref name="expectedWaveform"/> by comparing the states of each, using <see cref="M:NationalInstruments.DigitalStateUtility.Test(NationalInstruments.DigitalState,NationalInstruments.DigitalState)"/>.
            </remarks>
            <lastupdated>9/19/2005 1:39:01 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.Test(System.Int32,NationalInstruments.DigitalWaveform,System.Int32,System.Int32)">
            <summary>
            Tests the digital waveform against an expected digital waveform using the specified start sample and expected start sample.
            </summary>
            <param name="startSample">
            The beginning sample to compare.
            </param>
            <param name="expectedWaveform">
            The expected <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </param>
            <param name="expectedStartSample">
            The beginning sample of the expected <see cref="T:NationalInstruments.DigitalWaveform"/> to compare. 
            </param>
            <param name="sampleCount">
            The number of samples to compare.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="expectedWaveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="startSample"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="expectedStartSample"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="startSample"/> plus <paramref name="sampleCount"/> is greater than
            the digital waveform sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="expectedStartSample"/> plus <paramref name="sampleCount"/> is greater than
            the <paramref name="expectedWaveform"/> sample count.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The digital waveform and the <paramref name="expectedWaveform"/> signal counts are not equal.
            </exception>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveformTestResult"/> containing the test results.
            </returns>
            <remarks>
            Compares the digital waveform to the <paramref name="expectedWaveform"/> by comparing the states of each, using <see cref="M:NationalInstruments.DigitalStateUtility.Test(NationalInstruments.DigitalState,NationalInstruments.DigitalState)"/>.
            </remarks>
            <lastupdated>9/19/2005 1:39:48 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Byte[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional <see cref="T:System.Byte"/> array.
            </summary>
            <param name="samples">
            The two-dimensional <see cref="T:System.Byte"/> array of samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each <see cref="T:System.Byte"/> in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:01 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Byte[0:,0:],System.Byte[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional <see cref="T:System.Byte"/> array with
            the specified mask array.
            </summary>
            <param name="samples">
            The two-dimensional <see cref="T:System.Byte"/> array of samples.
            </param>
            <param name="masks">
            The mask array used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="samples"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="masks"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of rows in <paramref name="samples"/> is not equal to the length of <paramref name="masks"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each <see cref="T:System.Byte"/> in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            The <paramref name="masks"/> index corresponds to each row of the two-dimensional <paramref name="samples"/> array. For example,
            <paramref name="masks"/> index 0 is applied to row 0 of <paramref name="samples"/>.
            </para>
            	<para>
            Use <paramref name="masks"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="masks"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:11 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Byte[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="samples">
            The <see cref="T:System.Byte"/> array of samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each <see cref="T:System.Byte"/> in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>.
            <para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:24:30 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Byte[],System.Byte)">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from a <see cref="T:System.Byte"/> array and a
            mask.
            </summary>
            <param name="samples">
            The <see cref="T:System.Byte"/> array of samples.
            </param>
            <param name="mask">
            The mask used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each <see cref="T:System.Byte"/> in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Use the <paramref name="mask"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="mask"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:24:40 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Int16[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 16-bit integers.
            </summary>
            <param name="samples">
            The two-dimensional array of 16-bit integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 16-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:35 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Int16[0:,0:],System.Int16[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 16-bit integers with
            the specified mask array.
            </summary>
            <param name="samples">
            The two-dimensional array of 16-bit integer samples.
            </param>
            <param name="masks">
            The mask array used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="samples"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="masks"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of rows in <paramref name="samples"/> is not equal to the length of <paramref name="masks"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 16-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            The <paramref name="masks"/> index corresponds to each row of the two-dimensional <paramref name="samples"/> array. For example,
            <paramref name="masks"/> index 0 is applied to row 0 of <paramref name="samples"/>.
            </para>
            	<para>
            Use <paramref name="masks"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="masks"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:45 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Int16[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 16-bit integers.
            </summary>
            <param name="samples">
            The array of 16-bit integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each 16-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            <para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:07 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Int16[],System.Int16)">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 16-bit integers and a
            mask.
            </summary>
            <param name="samples">
            The array of 16-bit integer samples.
            </param>
            <param name="mask">
            The mask used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each 16-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Use <paramref name="mask"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="mask"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> only includes one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:16 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.UInt16[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 16-bit unsigned integers.
            </summary>
            <param name="samples">
            The two-dimensional array of 16-bit unsigned integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 16-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:27:11 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.UInt16[0:,0:],System.UInt16[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 16-bit unsigned integers with
            the specified mask array.
            </summary>
            <param name="samples">
            The two-dimensional array of 16-bit unsigned integer samples.
            </param>
            <param name="masks">
            The mask array used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="samples"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="masks"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of rows in <paramref name="samples"/> is not equal to the length of <paramref name="masks"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 16-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            The <paramref name="masks"/> index corresponds to each row of the two-dimensional <paramref name="samples"/> array. For example,
            <paramref name="masks"/> index 0 is applied to row 0 of <paramref name="samples"/>.
            </para>
            	<para>
            Use <paramref name="masks"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="masks"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes
            only one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:27:19 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.UInt16[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 16-bit unsigned integers.
            </summary>
            <param name="samples">
            The array of 16-bit unsigned integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each 16-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            <para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:42 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.UInt16[],System.UInt16)">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 16-bit unsigned integers and a
            mask.
            </summary>
            <param name="samples">
            The array of 16-bit unsigned integer samples.
            </param>
            <param name="mask">
            The mask used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each 16-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Use the <paramref name="mask"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="mask"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes  only one signal per sample.
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:53 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Int32[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 32-bit integers.
            </summary>
            <param name="samples">
            The two-dimensional array of 32-bit integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 32-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:19 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.Int32[0:,0:],System.Int32[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 32-bit integers with
            the specified mask array.
            </summary>
            <param name="samples">
            The two-dimensional array of 32-bit integer samples.
            </param>
            <param name="masks">
            The mask array used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="samples"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="masks"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of rows in <paramref name="samples"/> is not equal to the length of <paramref name="masks"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 32-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            The <paramref name="masks"/> index corresponds to each row of the two-dimensional <paramref name="samples"/> array. For example,
            <paramref name="masks"/> index 0 is applied to row 0 of the <paramref name="samples"/>.
            </para>
            	<para>
            Use <paramref name="masks"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="masks"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:27 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Int32[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 32-bit integers.
            </summary>
            <param name="samples">
            The array of 32-bit integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each 32-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            <para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:24:49 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.Int32[],System.Int32)">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 32-bit integers and a
            mask.
            </summary>
            <param name="samples">
            The array of 32-bit integer samples.
            </param>
            <param name="mask">
            The mask used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each 32-bit integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Use <paramref name="mask"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="mask"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:24:58 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.UInt32[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 32-bit unsigned integers.
            </summary>
            <param name="samples">
            The two-dimensional array of 32-bit unsigned integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 32-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:26:53 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPorts(System.UInt32[0:,0:],System.UInt32[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> array from a two-dimensional array of 32-bit unsigned integers with
            the specified mask array.
            </summary>
            <param name="samples">
            The two-dimensional array of 32-bit unsigned integer samples.
            </param>
            <param name="masks">
            The mask array used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="samples"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="masks"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of rows in <paramref name="samples"/> is not equal to the length of <paramref name="masks"/>.
            </exception>
            <remarks>
            	<para>
            Each row of the two-dimensional <paramref name="samples"/> array corresponds to a resulting <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </para>
            	<para>
            Each 32-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            The <paramref name="masks"/> index corresponds to each row of the two-dimensional <paramref name="samples"/> array. For example,
            <paramref name="masks"/> index 0 is applied to row 0 of <paramref name="samples"/>.
            </para>
            	<para>
            Use <paramref name="masks"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="masks"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes only one signal per sample.</para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:27:03 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.UInt32[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 32-bit unsigned integers.
            </summary>
            <param name="samples">
            The array of 32-bit unsigned integer samples.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each 32-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            <para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:25 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.FromPort(System.UInt32[],System.UInt32)">
            <summary>
            Creates a <see cref="T:NationalInstruments.DigitalWaveform"/> from an array of 32-bit unsigned integers and a
            mask.
            </summary>
            <param name="samples">
            The array of 32-bit unsigned integer samples.
            </param>
            <param name="mask">
            The mask used to specify which bits are used.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.DigitalWaveform"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="samples"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<para>
            Each 32-bit unsigned integer in the <paramref name="samples"/> array represents a digital sample taken over a port of signals. Each bit in the sample is
            a signal value, either on or off. The least significant bit of the sample is placed at signal
            index 0 of the <see cref="T:NationalInstruments.DigitalWaveform"/>. 
            </para>
            	<para>
            Use the <paramref name="mask"/> to specify what bits are included in the resulting <see cref="T:NationalInstruments.DigitalWaveform"/>. For
            example, a <paramref name="mask"/> value of 0x1 means the resulting <see cref="T:NationalInstruments.DigitalWaveform"/> includes 
            only one signal per sample.
            </para>
            	<para>
            Upon construction, <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to set timing information.
            </para>
            </remarks>
            <lastupdated>9/19/2005 1:25:34 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>.
            </summary>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <lastupdated>9/7/2005 10:56:52 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.DigitalWaveform.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.DigitalWaveform"/> was set using
            <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.</remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/13/2006 9:47:20 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> using the 
            specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the digital waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <lastupdated>3/16/2006 1:41:31 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/> using the 
            specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the digital waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.DigitalWaveform.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.DigitalWaveform"/> was set using
            <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/13/2006 9:47:15 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetTimeStamps(System.Int32,System.Int32,System.DateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> using the 
            specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the digital waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>3/16/2006 1:42:22 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps(System.Int32,System.Int32,NationalInstruments.PrecisionDateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/> using the 
            specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the digital waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.DigitalWaveform.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.DigitalWaveform.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.DigitalWaveform"/> was set using
            <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/13/2006 9:45:11 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveform.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:13:06 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.Signals">
            <summary>
            Gets the signals of the digital waveform.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.DigitalWaveformSignalCollection"/> containing the <see cref="T:NationalInstruments.DigitalWaveformSignal"/>
            objects.
            </value>
            <lastupdated>9/6/2005 3:03:40 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.Samples">
            <summary>
            Gets the samples of the digital waveform.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.DigitalWaveformSampleCollection"/> containing the <see cref="T:NationalInstruments.DigitalWaveformSample"/>
            objects.
            </value>
            <lastupdated>9/6/2005 3:03:38 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.Timing">
            <summary>
            Gets or sets the timing information of the digital waveform.
            </summary>
            <value>
            The timing information of the digital waveform. The default value is <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveform.Timing"/> includes information that 
            encapsulates waveform timing.  
            </remarks>
            <lastupdated>3/16/2006 1:46:02 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.PrecisionTiming">
            <summary>
            Gets or sets the timing information of the digital waveform with a higher precision
            than <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>.
            </summary>
            <value>
            The timing information of the digital waveform. The default value is <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            	<para>
            		<see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/> includes information that 
            encapsulates waveform timing.  
            Use <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/> instead of
            <see cref="P:NationalInstruments.DigitalWaveform.Timing"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the waveform timing information in <see cref="T:NationalInstruments.DigitalWaveform"/>
            is set using <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming"/>, then this property
            returns timing information with the precision of <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>.
            If the timing information is set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>, 
            the timing information returned is only as precise as <see cref="T:NationalInstruments.WaveformTiming"/>.</para>
            	<para>Accessing this property can potentially decrease performance if the timing information is
            set using <see cref="P:NationalInstruments.DigitalWaveform.Timing"/>. Use 
            <see cref="P:NationalInstruments.DigitalWaveform.IsPrecisionTimingInitialized" crefType="Unqualified"/> to
            determine if <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming" crefType="Unqualified"/>
            has been initialized.</para>
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>9/16/2008 4:51:42 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.IsPrecisionTimingInitialized">
            <summary>
            Gets a value indicating whether the precision timing information for the waveform has been initialized.
            </summary>
            <value>
            	<see langword="true"/> if <see cref="P:NationalInstruments.DigitalWaveform.PrecisionTiming" crefType="Unqualified"/>
            has been initialized.
            </value>
            <lastupdated>9/16/2008 4:51:02 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.ExtendedProperties">
            <summary>
            Gets the extended properties for the digital waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/> that contains the extended
            properties of the digital waveform.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveform.ExtendedProperties"/> stores key value pair information
            specific to the digital waveform. For example, drivers, such as the NI-DAQmx driver, populate <see cref="P:NationalInstruments.DigitalWaveform.ExtendedProperties"/> 
            with information specific to the data acquisition type. For more information, refer to your specific driver documentation.
            </remarks>
            <lastupdated>9/19/2005 1:30:31 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveform.ChannelName">
            <summary>
            Gets or sets the name of the device channel from which the digital waveform was acquired.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the name of the device channel from which the 
            <see cref="T:NationalInstruments.DigitalWaveform"/> was acquired.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveform.ChannelName"/> reads and writes to
            <see cref="P:NationalInstruments.DigitalWaveform.ExtendedProperties"/> using the reserved key <format type="monospace">NI_ChannelName</format>.
            </remarks>
            <lastupdated>3/16/2006 1:37:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IDigitalWaveformService">
            <exclude/>
            <lastupdated>4/11/2005 11:22:26 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IDigitalWaveformService.LoadData(NationalInstruments.DigitalState[0:,0:])">
            <exclude/>
            <lastupdated>4/11/2005 11:22:29 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IDigitalWaveformService.GetData">
            <exclude/>
            <lastupdated>4/11/2005 11:22:29 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="E:NationalInstruments.Restricted.IDigitalWaveformService.Changed">
            <exclude/>
            <lastupdated>4/11/2005 11:22:32 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalStateCollection">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.DigitalState"/> values.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/19/2005 9:12:31 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalStateCollection.CopyTo(NationalInstruments.DigitalState[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.
            </para>
            	<para>
            - or -
            </para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>9/6/2005 2:07:15 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalStateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:12:51 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalStateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>9/6/2005 2:07:18 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalStateCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NationalInstruments.DigitalState"/> at the specified index. 
            </summary>
            <param name="stateIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>The <see cref="T:NationalInstruments.DigitalState"/> at the specified index.</value>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="index"/> is an invalid <see cref="T:NationalInstruments.DigitalState"/> value.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="index"/> is greater than or equal to <see cref="P:NationalInstruments.DigitalStateCollection.Count"/>.
            </para>
            </exception>
            <lastupdated>9/7/2005 2:05:29 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalStateCollection.Count">
            <summary>
            Gets the number of states in the <see cref="T:NationalInstruments.DigitalStateCollection"/>.
            </summary>
            <value>
            The number of states in the <see cref="T:NationalInstruments.DigitalStateCollection"/>.
            </value>
            <lastupdated>9/6/2005 1:53:31 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalStateCollection.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>1/23/2009 4:12:46 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalStateCollection.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>1/23/2009 4:12:49 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveformCollection`1">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.AnalogWaveform`1"/> objects.
            </summary>
            <typeparam>
            The underlying type of the waveforms. The following data types are supported by <typeparamref name="TData"/>:
            <see cref="T:System.Byte"/>,
            <see cref="T:System.SByte"/>,
            <see cref="T:System.Decimal"/>,
            <see cref="T:System.Single"/>,
            <see cref="T:System.Double"/>,
            <see cref="T:System.Int16"/>,
            <see cref="T:System.UInt16"/>,
            <see cref="T:System.Int32"/>,
            <see cref="T:System.UInt32"/>,
            <see cref="T:System.Int64"/>, and
            <see cref="T:System.UInt64"/>.
            			</typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<para>
            An <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/> contains a strongly typed collection of 
            <see cref="T:NationalInstruments.AnalogWaveform`1"/> objects; one object for each channel and record combination.
            You can access these objects through the 1D indexer or the 2D indexer.  The 1D indexer accepts a single integer referring
            to the absolute position of the <see cref="T:NationalInstruments.AnalogWaveform`1"/> in the collection, and is
            most useful when the collection contains only one record per channel or one channel with multiple records.  The 2D indexer
            accepts two indexes: one for the record index and one for the channel index.  To determine the total number of
            <see cref="T:NationalInstruments.AnalogWaveform`1"/> objects in the collection, access the 
            <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Count"/> property.  
            To determine the number of records and channels, access the <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Records"/>
            and <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Channels"/> properties, respectively. 
            </para>
            	<para>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </para>
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>2/12/2008 4:50:08 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </summary>
            <remarks>
            Upon construction, <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>
            is set to an empty collection of <see cref="T:NationalInstruments.AnalogWaveform`1"/> objects.
            </remarks>
            <lastupdated>12/7/2007 10:53:09 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:50 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.AnalogWaveformCollection`1.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>12/7/2007 10:53:17 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:01:49 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.CopyTo(NationalInstruments.AnalogWaveform{`0}[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>12/7/2007 10:53:33 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:50 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>12/7/2007 10:53:45 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformCollection`1.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:51 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.Channels">
            <summary>
            Gets the number of channels in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </summary>
            <value>
            The number of channels in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </value>
            <lastupdated>2/12/2008 4:50:15 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.Count">
            <summary>
            Gets the number of analog waveforms in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </summary>
            <value>
            The number of analog waveforms in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Count"/> is defined as the number of 
            channels in the collection multiplied by the number of records.
            </value>
            <lastupdated>2/12/2008 4:51:58 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.Records">
            <summary>
            Gets the number of records in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </summary>
            <value>
            The number of records in <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/>.
            </value>
            <lastupdated>2/12/2008 4:52:04 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveform`1"/> at the specified index. 
            </summary>
            <param name="index">
            The zero-based index of the <see cref="T:NationalInstruments.AnalogWaveform`1"/> to locate in the collection.
            Valid values range from zero to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Count"/> - 1.
            </param>
            <value>
            The <see cref="T:NationalInstruments.AnalogWaveform`1"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="index"/> is greater than or equal to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Count"/>.
            </para>
            </exception>
            <remarks>
            The <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/> stores all of its contained waveforms in a single
            one-dimensional array.  The waveforms within the array are arranged sequentially by time rather than sequentially by channel.
            This means that the record 0 waveforms for all channels are located in the array before the record 1 waveforms for the channels.
            For example, an <see cref="T:NationalInstruments.AnalogWaveformCollection`1"/> with two records and two channels stores
            the data in this format: [ R0C0 R0C1 R1C0 R1C1 ].
            Use the 2D indexer to retrieve the waveform for a specific record index and channel index.
            </remarks>
            <lastupdated>2/12/2008 4:46:19 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveform`1"/> at the specified indexes. 
            </summary>
            <param name="recordIndex">
            The zero-based record index of the <see cref="T:NationalInstruments.AnalogWaveform`1"/> to locate in the collection.
            Valid values range from zero to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Records"/> - 1.
            </param>
            <param name="channelIndex">
            The zero-based channel index of the <see cref="T:NationalInstruments.AnalogWaveform`1"/> to locate in the collection.
            Valid values range from zero to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Channels"/> - 1.
            </param>
            <value>
            The <see cref="T:NationalInstruments.AnalogWaveform`1"/> at the specified indexes.
            </value>
            <exception cref="T:System.IndexOutOfRangeException">
            	<paramref name="recordIndex"/> or <paramref name="channelIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="recordIndex"/> is greater than or equal to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Records"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="channelIndex"/> is greater than or equal to <see cref="P:NationalInstruments.AnalogWaveformCollection`1.Channels"/>.
            </para>
            </exception>
            <lastupdated>2/12/2008 4:49:52 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.IsSynchronized">
            <exclude/>
            <lastupdated>12/7/2007 10:52:24 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformCollection`1.SyncRoot">
            <exclude/>
            <lastupdated>12/7/2007 10:52:33 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveform`1">
            <summary>
            Provides a data type that encapsulates analog data and timing information.
            </summary>
            <threadsafety safety="unsafe"/>
            <typeparam name="TData">
            The underlying type of the waveform. The following data types are supported by <typeparamref name="TData"/>:
            <see cref="T:System.Byte"/>,
            <see cref="T:System.SByte"/>,
            <see cref="T:System.Decimal"/>,
            <see cref="T:System.Single"/>,
            <see cref="T:System.Double"/>,
            <see cref="T:System.Int16"/>,
            <see cref="T:System.UInt16"/>,
            <see cref="T:System.Int32"/>,
            <see cref="T:System.UInt32"/>,
            <see cref="T:System.Int64"/>, and
            <see cref="T:System.UInt64"/>.
            			</typeparam>
            <remarks>
            	<para>
            		<see cref="T:NationalInstruments.AnalogWaveform`1"/> encapsulates a group of sampled analog values and timing information.  
            Each sample represents an analog value. Use <see cref="P:NationalInstruments.AnalogWaveform`1.Samples"/> to access the samples 
            in an analog waveform. Use <see cref="M:NationalInstruments.AnalogWaveform`1.GetRawData"/> to get the raw analog data and
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetScaledData"/> to get the scaled analog data. 
            <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> determines the scaling of the scaled data.</para>
            	<para><see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> and <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> 
            specify the timing information of the <see cref="T:NationalInstruments.AnalogWaveform`1"/>.  Use 
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> when you need a higher timing precision 
            than is provided by <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>.  When you create an analog 
            waveform using the constructor or a factory method, such as <see cref="M:NationalInstruments.AnalogWaveform`1.FromArray1D(`0[])"/>, 
            <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/> 
            and <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> is set to 
            <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            		</para>
            	<note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <example>
            The following example demonstrates a method that displays all the analog values in an <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            Each line displays a new analog value.
            <code lang="VB.NET">
            Private Sub DisplayWaveform(Of TData)(ByVal waveform As AnalogWaveform(Of TData))
                 For Each sample As AnalogWaveformSample(Of TData) In waveform.Samples
                      Debug.WriteLine(String.Format("{0}", sample.Value))
                 Next
            End Sub
            </code>
            </example>
            <example>
            	<code lang="C#">
            private void DisplayWaveform&lt;TData&gt;(AnalogWaveform&lt;TData&gt; waveform)
            {
                 foreach (AnalogWaveformSample&lt;TData&gt; sample in waveform.Samples)
                 {
                      Debug.WriteLine(String.Format("{0}", sample.Value));
                 }
            }
            </code>
            </example>
            <seealso keyword="DataConverter" keywordType="mstudio">Converting Data Types Using Measurement Studio DataConverter</seealso>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>10/27/2006 1:56:53 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.AnalogWaveform`1"/> with the specified sample
            count.
            </summary>
            <param name="sampleCount">
            The number of samples in the <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleCount"/> is less than zero.
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 5:03:33 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:47 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.FromArray1D(`0[])">
            <summary>
            Creates an <see cref="T:NationalInstruments.AnalogWaveform`1"/> from an array of values.
            </summary>
            <param name="array">
            The array of values.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 5:40:15 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.FromArray2D(`0[0:,0:])">
            <summary>
            Creates an <see cref="T:NationalInstruments.AnalogWaveform`1"/> array from a two-dimensional array of values.
            </summary>
            <param name="array">
            The two-dimensional array of values.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform`1"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each <see cref="T:NationalInstruments.AnalogWaveform`1"/> instance in the returned array represents a row of data
            in the two-dimensional <paramref name="array"/>. Upon construction, <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> is set to <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> to set the timing information.
            </remarks>
            <lastupdated>3/1/2006 5:41:57 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.CopySamples(NationalInstruments.AnalogWaveform{`0},NationalInstruments.AnalogWaveform{`0},System.Int32)">
            <summary>
            Copies the data of a source analog waveform to a destination analog waveform.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>3/1/2006 5:36:08 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.CopySamples(NationalInstruments.AnalogWaveform{`0},System.Int32,NationalInstruments.AnalogWaveform{`0},System.Int32,System.Int32)">
            <summary>
            Copies the data of a source analog waveform to a destination analog waveform with the specified indexes.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </param>
            <param name="sourceSampleIndex">
            The source sample index.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </param>
            <param name="destinationSampleIndex">
            The destination sample index.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sourceSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>3/1/2006 5:39:33 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetRawData">
            <summary>
            Returns the raw analog waveform data.
            </summary>
            <returns>
            The raw analog waveform data.
            </returns>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <lastupdated>3/1/2006 5:42:05 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetRawData(System.Int32,System.Int32)">
            <summary>
            Returns the raw analog waveform data using the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The raw analog waveform data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <lastupdated>3/16/2006 11:25:57 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetRawData(System.Int32,System.Int32,`0[],System.Int32)">
            <summary>
            Returns the raw analog waveform data using the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the raw data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the raw data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            The raw data returned is a copy of the data in the analog waveform.
            </remarks>
            <lastupdated>3/16/2006 11:26:14 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetScaledData">
            <summary>
            Returns the scaled analog waveform data.
            </summary>
            <returns>
            The scaled analog waveform data.
            </returns>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform. The scaled data is retrieved by using the
            <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/>.
            </remarks>
            <seealso cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/>
            <lastupdated>3/1/2006 5:44:04 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetScaledData(System.Int32,System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The scaled analog waveform data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform. The scaled data is retrieved by using the
            <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/>.
            </remarks>
            <lastupdated>3/16/2006 11:26:36 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetScaledData(System.Int32,System.Int32,System.Double[],System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            The scaled data returned is a copy of the data in the analog waveform.
            </remarks>
            <lastupdated>3/16/2006 11:26:57 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.AnalogWaveform`1.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>3/1/2006 5:23:33 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:01:46 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>.
            </summary>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <lastupdated>3/1/2006 5:45:17 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.AnalogWaveform`1"/> was set using
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/12/2006 12:58:31 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> using 
            the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <lastupdated>3/16/2006 11:27:13 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> using 
            the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.AnalogWaveform`1"/> was set using
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/12/2006 12:59:03 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps(System.Int32,System.Int32,System.DateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> using 
            the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>3/16/2006 11:27:22 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps(System.Int32,System.Int32,NationalInstruments.PrecisionDateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> using 
            the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the analog waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            Use <see cref="M:NationalInstruments.AnalogWaveform`1.GetPrecisionTimeStamps"/> instead of
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetTimeStamps"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.AnalogWaveform`1"/> was set using
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>, then this method
            will return time stamps with the precision of <see cref="T:NationalInstruments.PrecisionDateTime"/>.  
            If the timing information was set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>, 
            the time stamps returned will only be as precise as <see cref="T:System.DateTime"/>.</remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>10/12/2006 12:59:27 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:46:13 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveform`1.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:01:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.Samples">
            <summary>
            Gets the samples of the analog waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.AnalogWaveformSampleCollection`1"/> containing the
            <see cref="T:NationalInstruments.AnalogWaveformSample`1"/> objects.
            </value>
            <remarks>
            To access the number of samples in the analog waveform, use <see cref="P:NationalInstruments.AnalogWaveform`1.SampleCount"/> instead of <see cref="P:NationalInstruments.AnalogWaveformSampleCollection`1.Count"/>.
            Accessing the number of samples with <see cref="P:NationalInstruments.AnalogWaveformSampleCollection`1.Count"/> 
            requires you to use the <see cref="P:NationalInstruments.AnalogWaveform`1.Samples"/> property, which results in decreased performance. 
            </remarks>
            <lastupdated>7/22/2008 3:17:16 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.SampleCount">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.AnalogWaveform`1"/>.
            </value>
            <lastupdated>7/22/2008 12:37:29 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.ScaleMode">
            <summary>
            Gets or sets the scale mode of the analog waveform.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.WaveformScaleMode"/> of the analog waveform. The default value is
            <see cref="P:NationalInstruments.WaveformScaleMode.None"/>.
            </value>
            <remarks>
            The <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> represents the scale used to convert the raw data of the analog
            waveform to scaled data.
            The <see cref="M:NationalInstruments.AnalogWaveform`1.GetScaledData"/> method of the analog waveform calls
            the <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> to retrieve the scaled data of the analog waveform.
            </remarks>
            <lastupdated>3/1/2006 5:19:52 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.DataType">
            <summary>
            Gets the data type of the analog waveform.
            </summary>
            <value>
            The <see cref="T:System.Type"/> of the analog waveform.
            </value>
            <lastupdated>3/1/2006 5:04:25 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.ChannelName">
            <summary>
            Gets or sets the name of the device channel from which the analog waveform was acquired.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the name of the device channel from which the 
            <see cref="T:NationalInstruments.AnalogWaveform`1"/> was acquired. 
            The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform`1.ChannelName"/> reads and writes to
            <see cref="P:NationalInstruments.AnalogWaveform`1.ExtendedProperties"/> using the reserved key <format type="monospace">NI_ChannelName</format>.
            </remarks>
            <lastupdated>3/16/2006 1:36:27 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.UnitDescription">
            <summary>
            Gets or sets the unit of measurement, such as volts, of the analog waveform.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the unit of measurement of the <see cref="T:NationalInstruments.AnalogWaveform`1"/>. 
            The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform`1.UnitDescription"/> reads and writes to
            <see cref="P:NationalInstruments.AnalogWaveform`1.ExtendedProperties"/> using the reserved key <format type="monospace">NI_UnitDescription</format>.
            </remarks>
            <lastupdated>3/16/2006 11:48:38 AM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.Timing">
            <summary>
            Gets or sets the timing information of the analog waveform.
            </summary>
            <value>
            The timing information of the analog waveform. The default value is <see cref="F:NationalInstruments.WaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/> and the number of time stamps in 
            <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> is not equal to
            <see cref="P:NationalInstruments.AnalogWaveformSampleCollection`1.Count"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> includes information that 
            encapsulates waveform timing.  
            </remarks>
            <lastupdated>3/16/2006 1:45:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming">
            <summary>
            Gets or sets the timing information of the analog waveform with a higher precision
            than <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>.
            </summary>
            <value>
            The timing information of the analog waveform. The default value is 
            <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/> and the number of time stamps in 
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> is not equal to
            <see cref="P:NationalInstruments.AnalogWaveformSampleCollection`1.Count"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            	<para>Use <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/> instead of
            <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/> to obtain 
            timing information with higher precision than <see cref="T:NationalInstruments.WaveformTiming"/>.
            If the timing information in <see cref="T:NationalInstruments.AnalogWaveform`1"/> is set using
            <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming"/>, then this property
            returns timing information with the precision of <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>.  
            If the timing information is set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>, 
            the timing information returned is only as precise as <see cref="T:NationalInstruments.WaveformTiming"/>.</para>
            	<para>Accessing this property can potentially decrease performance if the timing information is
            set using <see cref="P:NationalInstruments.AnalogWaveform`1.Timing"/>. Use 
            <see cref="P:NationalInstruments.AnalogWaveform`1.IsPrecisionTimingInitialized" crefType="Unqualified"/> to
            determine if <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming" crefType="Unqualified"/>
            has been initialized.</para>
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>9/16/2008 4:49:13 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.IsPrecisionTimingInitialized">
            <summary>
            Gets a value indicating whether the precision timing information for the waveform has been initialized.
            </summary>
            <value>
            	<see langword="true"/> if <see cref="P:NationalInstruments.AnalogWaveform`1.PrecisionTiming" crefType="Unqualified"/>
            has been initialized.
            </value>
            <lastupdated>9/16/2008 4:44:49 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveform`1.ExtendedProperties">
            <summary>
            Gets the extended properties for the analog waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/> that contains the extended
            properties of the analog waveform.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.AnalogWaveform`1.ExtendedProperties"/> stores key value pair information
            specific to the analog waveform. For example, drivers, such as the NI-DAQmx driver, populate <see cref="P:NationalInstruments.AnalogWaveform`1.ExtendedProperties"/> 
            with information specific to the data acquisition type. For more information, refer to your specific driver documentation.
            </remarks>
            <lastupdated>3/1/2006 5:04:31 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.UnmanagedHandle">
            <exclude/>
            <lastupdated>7/23/2002 12:43:50 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.#ctor(System.IntPtr)">
            <exclude/>
            <lastupdated>7/23/2002 12:44:13 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.Finalize">
            <exclude/>
            <lastupdated>7/23/2002 12:43:53 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.Dispose">
            <exclude/>
            <lastupdated>7/23/2002 12:44:00 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.ToHandle">
            <exclude/>
            <lastupdated>7/23/2002 12:44:09 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.CloseHandle">
            <exclude/>
            <lastupdated>7/23/2002 12:43:56 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.UnmanagedHandle.op_Implicit(NationalInstruments.Restricted.UnmanagedHandle)~System.IntPtr">
            <exclude/>
            <lastupdated>7/23/2002 12:44:03 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.MultiKeyDictionary`3">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.#ctor">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.Add(`0,`1,`2)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.Clear">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.ContainsKey(`0,`1)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.Remove(`0,`1)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.MultiKeyDictionary`3.TryGetValue(`0,`1,`2@)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.MultiKeyDictionary`3.Item(`0,`1)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.DigitalChangeType">
            <exclude/>
            <lastupdated>4/11/2005 10:54:51 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.DigitalChangeType.Data">
            <exclude/>
            <lastupdated>4/11/2005 10:54:55 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.DigitalChangeType.Timing">
            <exclude/>
            <lastupdated>4/11/2005 10:55:05 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.DigitalChangeType.Label">
            <exclude/>
            <lastupdated>4/11/2005 10:54:58 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformTestResult">
            <summary>
            Provides a test result from comparing an expected digital waveform against the compared waveform.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<see cref="T:NationalInstruments.DigitalWaveformTestResult"/> provides a test result from comparing two digital waveforms. Use
            <see cref="P:NationalInstruments.DigitalWaveformTestResult.Success"/> to determine if the test did not fail.
            <see cref="M:NationalInstruments.DigitalWaveformTestResult.GetFailures"/> returns an array of
            <see cref="T:NationalInstruments.DigitalWaveformFailure"/> objects.
            </remarks>
            <lastupdated>9/19/2005 5:48:35 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformTestResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.DigitalWaveformTestResult"/> with the info and 
            context.
            </summary>
            <param name="info">
            The data needed to serialize or deserialize an object.
            </param>
            <param name="context">
            The source and destination of a given serialized stream.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/15/2005 6:20:26 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformTestResult.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Returns the data needed to serialize the <see cref="T:NationalInstruments.DigitalWaveformTestResult"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the
            <see cref="T:NationalInstruments.DigitalWaveformTestResult"/>.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> object.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/15/2005 6:20:49 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformTestResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:08 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformTestResult.GetFailures">
            <summary>
            Returns a <see cref="T:NationalInstruments.DigitalWaveformFailure"/> array containing failure information.
            </summary>
            <returns>
            The <see cref="T:NationalInstruments.DigitalWaveformFailure"/> array containing failure information.
            </returns>
            <lastupdated>9/15/2005 6:20:40 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformTestResult.Success">
            <summary>
            Returns if the test is successful.
            </summary>
            <value>
            	<see langword="true"/> if the test is successful.
            </value>
            <lastupdated>9/15/2005 6:20:12 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs">
            <exclude/>
            <lastupdated>4/11/2005 11:21:02 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.#ctor(NationalInstruments.DigitalWaveform,NationalInstruments.Restricted.DigitalChangeType)">
            <exclude/>
            <lastupdated>4/11/2005 11:21:17 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.#ctor(NationalInstruments.DigitalWaveform,System.Int32,System.Int32,NationalInstruments.Restricted.DigitalChangeType)">
            <exclude/>
            <lastupdated>4/11/2005 11:21:20 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.Waveform">
            <exclude/>
            <lastupdated>4/11/2005 11:21:14 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.SampleIndex">
            <exclude/>
            <lastupdated>4/11/2005 11:21:08 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.SignalIndex">
            <exclude/>
            <lastupdated>4/11/2005 11:21:10 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.DigitalWaveformChangedEventArgs.ChangeType">
            <exclude/>
            <lastupdated>4/11/2005 11:21:05 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.Categories">
            <exclude/>
            <lastupdated>2/11/2003 2:41:08 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Action">
            <exclude/>
            <lastupdated>2/11/2003 2:38:13 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Accessibility">
            <exclude/>
            <lastupdated>2/11/2003 2:38:07 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Appearance">
            <exclude/>
            <lastupdated>2/11/2003 2:38:29 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Behavior">
            <exclude/>
            <lastupdated>2/11/2003 2:38:34 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Configurations">
            <exclude/>
            <lastupdated>2/11/2003 2:38:38 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Data">
            <exclude/>
            <lastupdated>2/11/2003 2:38:44 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Design">
            <exclude/>
            <lastupdated>2/11/2003 2:38:53 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.DragDrop">
            <exclude/>
            <lastupdated>2/11/2003 2:38:58 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Focus">
            <exclude/>
            <lastupdated>2/11/2003 2:39:03 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Format">
            <exclude/>
            <lastupdated>2/11/2003 2:39:07 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Key">
            <exclude/>
            <lastupdated>2/11/2003 2:39:18 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Layout">
            <exclude/>
            <lastupdated>2/11/2003 2:39:22 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Mouse">
            <exclude/>
            <lastupdated>2/11/2003 2:39:30 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Misc">
            <exclude/>
            <lastupdated>2/11/2003 2:39:26 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.PropertyChanged">
            <exclude/>
            <lastupdated>2/11/2003 2:39:33 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.WindowStyle">
            <exclude/>
            <lastupdated>2/11/2003 2:39:37 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Arrow">
            <exclude/>
            <lastupdated>2/11/2003 2:39:37 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Caption">
            <exclude/>
            <lastupdated>2/11/2003 2:39:37 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Shape">
            <exclude/>
            <lastupdated>2/11/2003 2:39:37 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.Categories.Range">
            <exclude/>
            <lastupdated>2/11/2003 2:39:37 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalState">
            <summary>
            Specifies the different digital states that a digital signal can represent.
            </summary>
            <lastupdated>9/19/2005 5:50:12 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.ForceDown">
            <summary>
            Force logic low. Drive to the low voltage level (VIL).
            </summary>
            <lastupdated>9/16/2005 11:30:31 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.ForceUp">
            <summary>
            Force logic high. Drive to the high voltage level (VIH).
            </summary>
            <lastupdated>9/16/2005 11:30:18 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.ForceOff">
            <summary>
            Force logic high impedance. Turn the driver off.
            </summary>
            <lastupdated>9/16/2005 11:30:24 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.CompareLow">
            <summary>
            Compare logic low (edge). Compare for a voltage level lower than
            the low voltage threshold (VOL).
            </summary>
            <lastupdated>9/16/2005 11:29:53 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.CompareHigh">
            <summary>
            Compare logic high (edge). Compare for a voltage level higher
            than the high voltage threshold (VOH).
            </summary>
            <lastupdated>9/16/2005 11:29:47 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.CompareUnknown">
            <summary>
            Compare logic unknown. Don't compare.
            </summary>
            <lastupdated>9/16/2005 11:30:08 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.CompareOff">
            <summary>
            Compare logic high impedance (edge). Compare for a voltage level
            between the low voltage threshold (VOL) and the high voltage threshold
            (VOH).
            </summary>
            <lastupdated>9/16/2005 11:30:03 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.DigitalState.CompareValid">
            <summary>
            Compare logic valid level (edge). Compare for a 
            voltage level either lower than the low voltage threshold (VOL) or higher
            than the high voltage threshold (VOH).
            </summary>
            <lastupdated>9/16/2005 11:43:20 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformSampleCollection">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.DigitalWaveformSample"/> objects.
            </summary>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/15/2005 5:29:00 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSampleCollection.IndexOf(NationalInstruments.DigitalWaveformSample)">
            <summary>
            Searches for the <see cref="T:NationalInstruments.DigitalWaveformSample"/> and returns the zero-based index of the first
            occurrence.
            </summary>
            <param name="sample">
            The <see cref="T:NationalInstruments.DigitalWaveformSample"/> to locate.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="sample"/>.
            </returns>
            <lastupdated>9/15/2005 6:19:32 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSampleCollection.CopyTo(NationalInstruments.DigitalWaveformSample[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="array"/> is multidimensional.
            </para>
            	<para>
            - or -
            </para>
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>9/15/2005 6:19:05 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSampleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:06 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSampleCollection.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>9/15/2005 6:19:22 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSampleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.DigitalWaveformSample"/> at the specified index. 
            </summary>
            <param name="sampleIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>The <see cref="T:NationalInstruments.DigitalWaveformSample"/> at the specified index.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is greater than or equal to count.
            </para>
            </exception>
            <lastupdated>9/15/2005 6:09:51 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSampleCollection.Count">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.DigitalWaveformSampleCollection"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.DigitalWaveformSampleCollection"/>.
            </value>
            <lastupdated>9/15/2005 5:53:07 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSampleCollection.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>1/23/2009 4:20:03 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSampleCollection.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>1/23/2009 4:20:05 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexWaveformSample`1">
            <summary>
            Represents a sample of a complex waveform.
            </summary>
            <typeparam name="TData">
            The type of the sample.
            </typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            A <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> represents a sample of a complex waveform. Use
            the <see cref="P:NationalInstruments.ComplexWaveformSample`1.Value"/> property to get the value contained
            in <see cref="T:NationalInstruments.ComplexWaveformSample`1"/>.
            Use the <see cref="P:NationalInstruments.ComplexWaveformSample`1.HasTimeStamp"/> property to determine if the sample has a time stamp.
            If <see cref="P:NationalInstruments.ComplexWaveformSample`1.HasTimeStamp"/> is <see langword="true"/>, 
            <see cref="P:NationalInstruments.ComplexWaveformSample`1.PrecisionTimeStamp"/> returns the time stamp of the sample. 
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>12/11/2007 12:56:34 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformSample`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>11/21/2007 9:41:41 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSample`1.Owner">
            <summary>
            Gets the <see cref="T:NationalInstruments.ComplexWaveform`1"/> that the sample came from.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ComplexWaveform`1"/> of the
            <see cref="T:NationalInstruments.ComplexWaveformSample`1"/>.
            </value>
            <lastupdated>11/21/2007 9:41:13 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSample`1.Value">
            <summary>
            Gets or sets the value of the <see cref="T:NationalInstruments.ComplexWaveformSample`1"/>.
            </summary>
            <value>
            The value of the <see cref="T:NationalInstruments.ComplexWaveformSample`1"/>. The default value is 0 + 0i.
            </value>
            <lastupdated>11/21/2007 9:41:31 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSample`1.HasTimeStamp">
            <summary>
            Gets a value indicating if the complex sample has a time stamp.
            </summary>
            <value>
            	<see langword="true"/> if the complex sample has a <see cref="P:NationalInstruments.ComplexWaveformSample`1.PrecisionTimeStamp"/>.
            </value>
            <lastupdated>11/21/2007 9:41:05 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformSample`1.PrecisionTimeStamp">
            <summary>
            Gets the time at which the data was sampled.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> representing the time at which the data was sampled.
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.ComplexWaveformSample`1.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.ComplexWaveformSample`1.HasTimeStamp"/>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="T:NationalInstruments.PrecisionDateTime"/>
            <lastupdated>11/21/2007 9:41:21 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexWaveform`1">
            <summary>
            Provides a data type that encapsulates raw complex data, scaling information, and timing information.
            </summary>
            <threadsafety safety="unsafe"/>
            <typeparam name="TData">
            The underlying type of the waveform. <typeparamref name="TData"/> supports the <see cref="T:NationalInstruments.ComplexDouble"/> data type. 
            			</typeparam>
            <remarks>
            	<para>
            		<see cref="T:NationalInstruments.ComplexWaveform`1"/> encapsulates a group of sampled complex values and timing information.  
            Each sample represents a complex value. Use <see cref="P:NationalInstruments.ComplexWaveform`1.Samples"/> to access the samples 
            in a complex waveform. Use <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> to get the raw complex data and
            <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> to get the scaled complex data. 
            <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> determines the scaling of the scaled data.</para>
            	<para><see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> 
            specifies the timing information of the <see cref="T:NationalInstruments.ComplexWaveform`1"/>. When you create a complex 
            waveform using the constructor or a factory method, such as <see cref="M:NationalInstruments.ComplexWaveform`1.FromArray1D(`0[])"/>, 
            <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> is set to
            <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            		</para>
            	<note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <example>
            The following example demonstrates a method that displays all the complex values in an <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            Each line displays a new complex value.
            <code lang="VB.NET">
            Private Sub DisplayWaveform(Of TData)(ByVal waveform As ComplexWaveform(Of TData))
                 For Each sample As ComplexWaveformSample(Of TData) In waveform.Samples
                      Console.WriteLine(String.Format("{0}", sample.Value))
                 Next
            End Sub
            </code>
            </example>
            <example>
            	<code lang="C#">
            private void DisplayWaveform&lt;TData&gt;(ComplexWaveformSample&lt;TData&gt; waveform)
            {
                 foreach (ComplexWaveformSample&lt;TData&gt; sample in waveform.Samples)
                 {
                      Console.WriteLine(String.Format("{0}", sample.Value));
                 }
            }
            </code>
            </example>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>11/20/2007 3:09:16 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.ComplexWaveform`1"/> with the specified sample
            count.
            </summary>
            <param name="sampleCount">
            The number of samples in <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleCount"/> is less than zero.
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> is set to <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> to set the timing information.
            </remarks>
            <lastupdated>12/11/2007 1:05:41 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:12:11 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.FromArray1D(`0[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.ComplexWaveform`1"/> from an array of values.
            </summary>
            <param name="array">
            The array of values.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Upon construction, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> is set to <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> to set the timing information.
            </remarks>
            <lastupdated>11/20/2007 4:19:38 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.FromArray2D(`0[0:,0:])">
            <summary>
            Creates a <see cref="T:NationalInstruments.ComplexWaveform`1"/> array from a two-dimensional array of values.
            </summary>
            <param name="array">
            The two-dimensional array of values.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexWaveform`1"/> array.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <remarks>
            Each <see cref="T:NationalInstruments.ComplexWaveform`1"/> instance in the returned array represents a row of data
            in the two-dimensional <paramref name="array"/>. Upon construction, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> is set to <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            Use <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> to set the timing information.
            </remarks>
            <lastupdated>11/20/2007 4:23:08 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.CopySamples(NationalInstruments.ComplexWaveform{`0},NationalInstruments.ComplexWaveform{`0},System.Int32)">
            <summary>
            Copies the data of a source complex waveform to a destination complex waveform.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>11/20/2007 4:18:55 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.CopySamples(NationalInstruments.ComplexWaveform{`0},System.Int32,NationalInstruments.ComplexWaveform{`0},System.Int32,System.Int32)">
            <summary>
            Copies the data of a source complex waveform to a destination complex waveform with the specified indexes.
            </summary>
            <param name="sourceWaveform">
            The source <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </param>
            <param name="sourceSampleIndex">
            The source sample index.
            </param>
            <param name="destinationWaveform">
            The destination <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </param>
            <param name="destinationSampleIndex">
            The destination sample index.
            </param>
            <param name="sampleCount">
            The number of samples to copy.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="sourceWaveform"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationWaveform"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sourceSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleCount"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sourceSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="sourceWaveform"/> sample count.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="destinationSampleIndex"/> plus <paramref name="sampleCount"/> is greater than the 
            <paramref name="destinationWaveform"/> sample count.
            </para>
            </exception>
            <lastupdated>11/20/2007 4:19:03 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetRawData">
            <summary>
            Returns the raw complex waveform data.
            </summary>
            <returns>
            The raw complex waveform data.
            </returns>
            <remarks>
            The raw data returned is a copy of the data in the complex waveform.
            </remarks>
            <lastupdated>11/20/2007 5:11:29 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetRawData(System.Int32,System.Int32)">
            <summary>
            Returns the raw complex waveform data using the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The raw complex waveform data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            The raw data returned is a copy of the data in the complex waveform.
            </remarks>
            <lastupdated>11/20/2007 5:11:44 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetRawData(System.Int32,System.Int32,`0[],System.Int32)">
            <summary>
            Returns the raw complex waveform data using the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the raw data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the raw data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            The raw data returned is a copy of the data in the complex waveform.
            </remarks>
            <lastupdated>12/11/2007 2:31:09 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetScaledData">
            <summary>
            Returns the scaled complex waveform data.
            </summary>
            <returns>
            The scaled complex waveform data.
            </returns>
            <remarks>
            The scaled data returned is a copy of the data in the complex waveform. You can use 
            <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> to define how the returned data is scaled.
            </remarks>
            <seealso cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/>
            <lastupdated>12/11/2007 1:06:09 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetScaledData(System.Int32,System.Int32)">
            <summary>
            Returns the scaled complex waveform data using the sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to return.
            </param>
            <returns>
            The scaled complex waveform data.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            The scaled data returned is a copy of the data in the complex waveform. You can use 
            <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> to define how the returned data is scaled.
            </remarks>
            <lastupdated>12/11/2007 1:06:12 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetScaledData(System.Int32,System.Int32,NationalInstruments.ComplexDouble[],System.Int32)">
            <summary>
            Returns the scaled complex waveform data using the sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the data.
            </param>
            <param name="count">
            The number of samples to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            The scaled data returned is a copy of the data in the complex waveform. You can use 
            <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> to define how the returned data is scaled.
            </remarks>
            <lastupdated>12/11/2007 1:06:16 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.ComplexWaveform`1.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>11/20/2007 4:18:34 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:12:07 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetPrecisionTimeStamps">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>
            <lastupdated>11/20/2007 5:11:13 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetPrecisionTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> using 
            the specified sample index and count.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>
            <lastupdated>11/20/2007 5:12:10 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetPrecisionTimeStamps(System.Int32,System.Int32,NationalInstruments.PrecisionDateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps from <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> using 
            the specified sample index, count, and array index.
            </summary>
            <param name="sampleIndex">
            The beginning index of the complex waveform from which to get the time stamps.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is 
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.PrecisionWaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <seealso cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>
            <lastupdated>11/20/2007 5:12:13 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>11/20/2007 5:26:19 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/26/2009 12:09:33 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetRealDataArray(System.Boolean)">
            <summary>
            Returns an array that contains the real parts of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the real data.
            </param>
            <returns>
            An array that contains the real parts of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the real parts of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.  
            </remarks>
            <lastupdated>12/11/2007 1:05:59 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetRealDataWaveform(System.Boolean)">
            <summary>
            Returns an <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the real 
            parts of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the real data.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the 
            real parts of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the real parts of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.  
            The returned waveform always has <see cref="P:NationalInstruments.WaveformScaleMode.None"/> as the <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> value.
            Other complex waveform properties, such as  <see cref="P:NationalInstruments.ComplexWaveform`1.ChannelName"/>, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>,
            and <see cref="P:NationalInstruments.ComplexWaveform`1.UnitDescription"/> are copied to the returned analog waveform.
            </remarks>
            <lastupdated>12/11/2007 1:06:04 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetImaginaryDataArray(System.Boolean)">
            <summary>
            Returns an array that contains the imaginary parts of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the imaginary data.
            </param>
            <returns>
            An array that contains the imaginary parts of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the imaginary parts of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.  
            </remarks>
            <lastupdated>12/11/2007 1:04:13 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetImaginaryDataWaveform(System.Boolean)">
            <summary>
            Returns an <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the imaginary 
            parts of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the imaginary data.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the 
            imaginary parts of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the imaginary parts of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.
            The returned waveform always has <see cref="P:NationalInstruments.WaveformScaleMode.None"/> as the <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> value.
            Other complex waveform properties, such as  <see cref="P:NationalInstruments.ComplexWaveform`1.ChannelName"/>, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>,
            and <see cref="P:NationalInstruments.ComplexWaveform`1.UnitDescription"/> are copied to the returned analog waveform.
            </remarks>
            <lastupdated>12/11/2007 1:05:44 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetMagnitudeDataArray(System.Boolean)">
            <summary>
            Returns an array that contains the magnitudes of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the magnitude.
            </param>
            <returns>
            An array that contains the magnitudes of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the magnitudes of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.  
            </remarks>
            <lastupdated>12/11/2007 1:05:47 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetMagnitudeDataWaveform(System.Boolean)">
            <summary>
            Returns an <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/>, that contains the magnitude
            data of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the magnitude data or not .
            </param>
            <returns>
            An an <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that has the 
            magnitude data of the complex samples.
            </returns>
            <remarks>
            The complex data used to get the magnitude data is obtained with the help of <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/>,
            if <paramref name="applyScaling"/> is <see langword="true"/>. Otherwise, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.
            The returned waveform always has <see cref="P:NationalInstruments.WaveformScaleMode.None"/> as the <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> value.
            Other complex waveform properties, such as  <see cref="P:NationalInstruments.ComplexWaveform`1.ChannelName"/>, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>,
            and <see cref="P:NationalInstruments.ComplexWaveform`1.UnitDescription"/> are copied to the returned analog waveform.
            </remarks>
            <lastupdated>12/11/2007 1:05:50 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetPhaseDataArray(System.Boolean)">
            <summary>
            Returns an array that contains the phases of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the phase.
            </param>
            <returns>
            An array that contains the phases of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the phases of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.
            </remarks>
            <lastupdated>12/11/2007 1:05:53 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveform`1.GetPhaseDataWaveform(System.Boolean)">
            <summary>
            Returns an <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the phases
            of the complex waveform samples.
            </summary>
            <param name="applyScaling">
            Specifies whether to apply scaling to the raw data before obtaining the phases.
            </param>
            <returns>
            An <see cref="T:NationalInstruments.AnalogWaveform`1"/> of type <see cref="T:System.Double"/> that contains the 
            phases of the complex samples.
            </returns>
            <remarks>
            If <paramref name="applyScaling"/> is <see langword="true"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> is
            used to return the imaginary parts of the complex waveform samples. If <paramref name="applyScaling"/> is 
            <see langword="false"/>, <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> is used.
            The returned waveform always has <see cref="P:NationalInstruments.WaveformScaleMode.None"/> as the <see cref="P:NationalInstruments.AnalogWaveform`1.ScaleMode"/> value.
            Other complex waveform properties, such as  <see cref="P:NationalInstruments.ComplexWaveform`1.ChannelName"/>, <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/>,
            and <see cref="P:NationalInstruments.ComplexWaveform`1.UnitDescription"/> are copied to the returned analog waveform.
            </remarks>
            <lastupdated>12/11/2007 1:05:56 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.Samples">
            <summary>
            Gets the samples of the complex waveform.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.ComplexWaveformSampleCollection`1"/> containing the
            <see cref="T:NationalInstruments.ComplexWaveformSample`1"/> objects.
            </value>
            <remarks>
            To access the number of samples in the complex waveform, use <see cref="P:NationalInstruments.ComplexWaveform`1.SampleCount"/> instead of <see cref="P:NationalInstruments.ComplexWaveformSampleCollection`1.Count"/>. 
            Accessing the number of samples with <see cref="P:NationalInstruments.ComplexWaveformSampleCollection`1.Count"/>
            requires you to use the <see cref="P:NationalInstruments.ComplexWaveform`1.Samples"/> property, which results in decreased performance. 
            </remarks>
            <lastupdated>7/22/2008 3:21:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.SampleCount">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.ComplexWaveform`1"/>.
            </value>
            <lastupdated>7/22/2008 12:37:21 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.ScaleMode">
            <summary>
            Gets or sets the scale mode of the complex waveform.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> of the complex waveform. The default value is
            <see cref="P:NationalInstruments.ComplexWaveformScaleMode.None"/>.
            </value>
            <remarks>
            The <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> represents the scale used to convert the raw data of 
            the complex waveform to scaled data.
            The <see cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/> method of the complex waveform calls
            the <see cref="P:NationalInstruments.ComplexWaveform`1.ScaleMode"/> to retrieve the scaled data of the complex waveform.
            </remarks>
            <seealso cref="T:NationalInstruments.ComplexWaveformScaleMode"/>
            <seealso cref="M:NationalInstruments.ComplexWaveform`1.GetScaledData"/>
            <seealso cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/>
            <lastupdated>11/20/2007 3:10:17 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.DataType">
            <summary>
            Gets the data type of the complex waveform.
            </summary>
            <value>
            The <see cref="T:System.Type"/> of the complex waveform.
            </value>
            <lastupdated>11/21/2007 10:12:24 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.ChannelName">
            <summary>
            Gets or sets the name of the device channel from which the complex waveform is acquired.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the name of the device channel from which the 
            <see cref="T:NationalInstruments.ComplexWaveform`1"/> is acquired. 
            The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.ComplexWaveform`1.ChannelName"/> reads and writes to
            <see cref="P:NationalInstruments.ComplexWaveform`1.ExtendedProperties"/> using the reserved key <format type="monospace">NI_ChannelName</format>.
            </remarks>
            <lastupdated>11/20/2007 3:09:20 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.UnitDescription">
            <summary>
            Gets or sets the unit of measurement, such as volts, of the complex waveform.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the unit of measurement of the <see cref="T:NationalInstruments.ComplexWaveform`1"/>. 
            The default value is an empty string.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.ComplexWaveform`1.UnitDescription"/> reads and writes to
            <see cref="P:NationalInstruments.ComplexWaveform`1.ExtendedProperties"/> using the reserved key <format type="monospace">NI_UnitDescription</format>.
            </remarks>
            <lastupdated>11/20/2007 3:10:25 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming">
            <summary>
            Gets or sets the timing information of the complex waveform.
            </summary>
            <value>
            The timing information of the complex waveform. The default value is 
            <see cref="F:NationalInstruments.PrecisionWaveformTiming.Empty"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
            	The specified value is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            		<see cref="P:NationalInstruments.PrecisionWaveformTiming.SampleIntervalMode"/> is
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/> and the number of time stamps in 
            <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> is not equal to
            <see cref="P:NationalInstruments.ComplexWaveformSampleCollection`1.Count"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The time stamp values are greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <remarks>
            Use the <see cref="M:NationalInstruments.PrecisionWaveformTiming.ToWaveformTiming"/> method on the 
            <see cref="P:NationalInstruments.ComplexWaveform`1.PrecisionTiming"/> property to get timing information with lower precision than <see cref="T:NationalInstruments.PrecisionWaveformTiming"/>.
            </remarks>
            <seealso cref="T:NationalInstruments.PrecisionWaveformTiming"/>
            <lastupdated>11/20/2007 3:09:51 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveform`1.ExtendedProperties">
            <summary>
            Gets the extended properties for the complex waveform.
            </summary>
            <value>
            An <see cref="T:NationalInstruments.ExtendedPropertyDictionary"/> that contains the extended
            properties of the complex waveform.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.ComplexWaveform`1.ExtendedProperties"/> stores key value pair information
            specific to the complex waveform. For example, drivers, such as the NI-DAQmx driver, populate <see cref="P:NationalInstruments.ComplexWaveform`1.ExtendedProperties"/> 
            with information specific to the data acquisition type. For more information, refer to your specific driver documentation.
            </remarks>
            <lastupdated>11/21/2007 10:12:18 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IComplexWaveformService`1">
            <exclude/>
            <lastupdated>25/10/2007 7:52:53 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService`1.LoadData(`0)">
            <exclude/>
            <lastupdated>25/10/2007 7:52:58 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService`1.LoadData(`0,System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>25/10/2007 7:53:03 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IComplexWaveformService2`1">
            <exclude/>
            <lastupdated>12/5/2007 04:35:00 PM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService2`1.LoadData(`0[])">
            <exclude/>
            <lastupdated>12/5/2007 04:35:00 PM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService2`1.LoadData(`0[],System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>12/5/2007 04:35:00 PM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService2`1.RequestBuffer(System.Int32)">
            <exclude/>
            <lastupdated>12/5/2007 04:35:00 PM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformService2`1.GetBuffer">
            <exclude/>
            <lastupdated>12/5/2007 04:35:00 PM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.IComplexWaveformService2`1.Capacity">
            <exclude/>
            <lastupdated>12/12/2007 10:52:00 AM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.PrecisionTimeSpan">
            <summary>
            Represents a time interval with a higher precision than <see cref="T:System.TimeSpan"/>.
            </summary>
            <threadsafety safety="unsafe"/>
            <security condition="unmanagedcode"/>
            <remarks>
            	<para>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object represents a time interval,
            or duration of time, measured as a positive or negative number of days, hours, minutes,
            seconds, and fractions of a second. The largest unit of time used to measure duration
            is a day. Time intervals are measured in days for consistency because the number of
            days in larger units of time, such as months and years, varies.
            </para>
            	<para>
            The value of a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object is the number
            of whole seconds and fractional second ticks that equal the represented time interval.
            <see cref="P:NationalInstruments.PrecisionTimeSpan.WholeSeconds"/>
            is a 64-bit number that represents the number of whole seconds 
            in the <see cref="T:NationalInstruments.PrecisionTimeSpan"/> without a fractional portion. 
            <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            is a 64-bit number that represents the number of 2^(-64) seconds 
            after the whole seconds. Each fractional second tick represents 0.05421010862427522170... 
            attoseconds. Use <see cref="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks"/>
            to convert <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/> to 
            its fractional seconds equivalent or use the <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSeconds"/>
            property. When using the <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSeconds"/>
            property or converting <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            to fractional seconds, some rounding errors may occur.
            </para>
            	<para>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object can be created from a
            <see cref="T:System.TimeSpan"/> object using <see cref="M:NationalInstruments.PrecisionTimeSpan.FromTimeSpan(System.TimeSpan)"/>
            and can be converted to a <see cref="T:System.TimeSpan"/> object using 
            <see cref="M:NationalInstruments.PrecisionTimeSpan.ToTimeSpan"/>. Some precision may be lost when converting a 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object to a <see cref="T:System.TimeSpan"/>
            object.
            </para>
            	<para>
            Use the <see cref="M:NationalInstruments.PrecisionTimeSpan.Parse(System.String)"/>, <see cref="M:NationalInstruments.PrecisionTimeSpan.TryParse(System.String,NationalInstruments.PrecisionTimeSpan@)"/>,
            and <see cref="M:NationalInstruments.PrecisionTimeSpan.ToString"/> methods for formatting time values.
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> calls these methods on a
            <see cref="T:System.TimeSpan"/> object, so some precision may be lost.
            </para>
            	<para>
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> type implements the
            <see cref="T:System.Runtime.Serialization.ISerializable"/>, <see cref="T:System.IComparable"/>,
            <see cref="T:System.IComparable`1"/>, and <see cref="T:System.IEquatable`1"/>
            interfaces.
            </para>
            </remarks>
            <seealso cref="T:System.TimeSpan"/>
            <example>
            	<para>The following code example creates several 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> objects and displays the 
            properties of each.</para>
            	<code lang="VB.NET">
            ' Example of the PrecisionTimeSpan properties.
            Imports NationalInstruments
             
            Module PrecisionTimeSpanDemo
             
                Const headerFmt As String = vbCrLf &amp; "{0,-45}"
                Const dataFmt As String = "{0,-12}{1,8}       {2,-18}{3,21}"
             
                ' Display the properties of the PrecisionTimeSpan parameter.
                Sub ShowPrecisionTimeSpanProperties(ByVal interval As PrecisionTimeSpan)
             
                    Console.WriteLine("{0,21}", interval)
                    Console.WriteLine(dataFmt, _
                        "Days", interval.Days, "TotalDays", interval.TotalDays)
                    Console.WriteLine(dataFmt, "Hours", interval.Hours, _
                        "TotalHours", interval.TotalHours)
                    Console.WriteLine(dataFmt, "Minutes", interval.Minutes, _
                        "TotalMinutes", interval.TotalMinutes)
                    Console.WriteLine(dataFmt, "Seconds", interval.Seconds, _
                        "TotalSeconds", interval.TotalSeconds)
                    Console.WriteLine(dataFmt, _
                        "Milliseconds", interval.Milliseconds, _
                        "TotalMilliseconds", interval.TotalMilliseconds)
                    Console.WriteLine(dataFmt, _
                        Nothing, Nothing, "FractionalSecondTicks", interval.FractionalSecondTicks)
                    Console.WriteLine(dataFmt, _
                        Nothing, Nothing, "FractionalSeconds", interval.FractionalSeconds)
                End Sub
             
                Sub Main()
                    Console.WriteLine( _
                        "This example of the PrecisionTimeSpan class generates " &amp; vbCrLf &amp; _
                        "the following output. It creates several PrecisionTimeSpan " &amp; vbCrLf &amp; _
                        "objects and displays the values of the properties for each")
             
                    ' Create and display a PrecisionTimeSpan value of 1 fractional second tick.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 0, 1 )")
                    ShowPrecisionTimeSpanProperties(New PrecisionTimeSpan(0, 1))
             
                    ' Create a PrecisionTimeSpan value with both whole seconds and fractional second ticks.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 123456, 111222333444555 )")
                    ShowPrecisionTimeSpanProperties(New PrecisionTimeSpan(123456, 111222333444555))
             
                    ' Create a PrecisionTimeSpan value from 1.5 seconds.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 1.5 )")
                    ShowPrecisionTimeSpanProperties(New PrecisionTimeSpan(1.5))
             
                    ' This TimeSpan is based on a number of days.
                    Console.Write(headerFmt, "FromDays( 20.84745602 )")
                    ShowPrecisionTimeSpanProperties(PrecisionTimeSpan.FromDays(20.84745602))
             
                    ' Create a PrecisionTimeSpan value from a TimeSpan object.
                    Console.Write(headerFmt, "FromTimeSpan(new TimeSpan( 10, 20, 30, 40, 50 ))")
                    ShowPrecisionTimeSpanProperties(PrecisionTimeSpan.FromTimeSpan(New TimeSpan(10, 20, 30, 40, 50)))
                End Sub
            End Module
             
            ' This example of the PrecisionTimeSpan class generates 
            ' the following output. It creates several PrecisionTimeSpan 
            ' objects and displays the values of the properties for each
            '
            ' PrecisionTimeSpan( 0, 1 )                                    00:00:00
            ' Days               0       TotalDays             6.27431812780963E-25
            ' Hours              0       TotalHours            1.50583635067431E-23
            ' Minutes            0       TotalMinutes          9.03501810404587E-22
            ' Seconds            0       TotalSeconds          5.42101086242752E-20
            ' Milliseconds       0       TotalMilliseconds     5.42101086242752E-17
            '                            FractionalSecondTicks                    1
            '                            FractionalSeconds     5.42101086242752E-20
            '
            ' PrecisionTimeSpan( 123456, 111222333444555 )       1.10:17:36.0000060
            ' Days               1       TotalDays                 1.42888888895867
            ' Hours             10       TotalHours                34.2933333350082
            ' Minutes           17       TotalMinutes              2057.60000010049
            ' Seconds           36       TotalSeconds              123456.000006029
            ' Milliseconds       0       TotalMilliseconds         123456000.006029
            '                            FractionalSecondTicks      111222333444555
            '                            FractionalSeconds     6.02937477747469E-06
            '
            ' PrecisionTimeSpan( 1.5 )                             00:00:01.5000000
            ' Days               0       TotalDays             1.73611111111111E-05
            ' Hours              0       TotalHours            0.000416666666666667
            ' Minutes            0       TotalMinutes                         0.025
            ' Seconds            1       TotalSeconds                           1.5
            ' Milliseconds     500       TotalMilliseconds                     1500
            '                            FractionalSecondTicks  9223372036854775808
            '                            FractionalSeconds                      0.5
            '
            ' FromDays( 20.84745602 )                           20.20:20:20.2001280
            ' Days              20       TotalDays                      20.84745602
            ' Hours             20       TotalHours                    500.33894448
            ' Minutes           20       TotalMinutes                 30020.3366688
            ' Seconds           20       TotalSeconds                1801220.200128
            ' Milliseconds     200       TotalMilliseconds           1801220200.128
            '                            FractionalSecondTicks  3691709997923696640
            '                            FractionalSeconds        0.200127999996766
            '
            ' FromTimeSpan(new TimeSpan( 10, 20, 30, 40, 50 ))  10.20:30:40.0500000
            ' Days              10       TotalDays                 10.8546302083333
            ' Hours             20       TotalHours                      260.511125
            ' Minutes           30       TotalMinutes                    15630.6675
            ' Seconds           40       TotalSeconds                     937840.05
            ' Milliseconds      49       TotalMilliseconds                937840050
            '                            FractionalSecondTicks   922337203685477580
            '                            FractionalSeconds                     0.05
            	</code>
            </example>
            <example>
            	<code lang="C#">
            // Example of the PrecisionTimeSpan properties.
            using System;
            using NationalInstruments;
             
            public class PrecisionTimeSpanDemo
            {
                const string headerFmt = "\n{0,-48}";
                const string dataFmt = "{0,-12}{1,8}       {2,-21}{3,21}";
             
                // Display the properties of the TimeSpan parameter.
                static void ShowPrecisionTimeSpanProperties(PrecisionTimeSpan interval)
                {
                    Console.WriteLine("{0,21}", interval);
                    Console.WriteLine(dataFmt, "Days", interval.Days,
                        "TotalDays", interval.TotalDays);
                    Console.WriteLine(dataFmt, "Hours", interval.Hours,
                        "TotalHours", interval.TotalHours);
                    Console.WriteLine(dataFmt, "Minutes", interval.Minutes,
                        "TotalMinutes", interval.TotalMinutes);
                    Console.WriteLine(dataFmt, "Seconds", interval.Seconds,
                        "TotalSeconds", interval.TotalSeconds);
                    Console.WriteLine(dataFmt, "Milliseconds",
                        interval.Milliseconds, "TotalMilliseconds",
                        interval.TotalMilliseconds);
                    Console.WriteLine(dataFmt, null, null,
                        "FractionalSecondTicks", interval.FractionalSecondTicks);
                    Console.WriteLine(dataFmt, null, null,
                        "FractionalSeconds", interval.FractionalSeconds);
                }
                
                static void Main()
                {
                    Console.WriteLine(
                        "This example of the PrecisionTimeSpan class generates\n" +
                        "the following output. It creates several PrecisionTimeSpan\n" +
                        "objects and displays the values of the properties for each.");
             
                    // Create and display a PrecisionTimeSpan value of 1 fractional second tick.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 0, 1 )");
                    ShowPrecisionTimeSpanProperties(new PrecisionTimeSpan(0, 1));
             
                    // Create a PrecisionTimeSpan value with both whole seconds and fractional second ticks.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 123456, 111222333444555 )");
                    ShowPrecisionTimeSpanProperties(new PrecisionTimeSpan(123456, 111222333444555));
             
                    // Create a PrecisionTimeSpan value from 1.5 seconds.
                    Console.Write(headerFmt, "PrecisionTimeSpan( 1.5 )");
                    ShowPrecisionTimeSpanProperties(new PrecisionTimeSpan(1.5));
             
                    // This PrecisionTimeSpan is based on a number of days.
                    Console.Write(headerFmt, "FromDays( 20.84745602 )");
                    ShowPrecisionTimeSpanProperties(PrecisionTimeSpan.FromDays(20.84745602));
             
                    // Create a PrecisionTimeSpan value from a TimeSpan object.
                    Console.Write(headerFmt, "FromTimeSpan(new TimeSpan(10, 20, 30, 40, 50))");
                    ShowPrecisionTimeSpanProperties(PrecisionTimeSpan.FromTimeSpan(new TimeSpan(10, 20, 30, 40, 50)));
                }
            }
             
            /*
            This example of the PrecisionTimeSpan class generates
            the following output. It creates several PrecisionTimeSpan
            objects and displays the values of the properties for each.
             
            PrecisionTimeSpan( 0, 1 )                                    00:00:00
            Days               0       TotalDays             6.27431812780963E-25
            Hours              0       TotalHours            1.50583635067431E-23
            Minutes            0       TotalMinutes          9.03501810404587E-22
            Seconds            0       TotalSeconds          5.42101086242752E-20
            Milliseconds       0       TotalMilliseconds     5.42101086242752E-17
                                       FractionalSecondTicks                    1
                                       FractionalSeconds     5.42101086242752E-20
             
            PrecisionTimeSpan( 123456, 111222333444555 )       1.10:17:36.0000060
            Days               1       TotalDays                 1.42888888895867
            Hours             10       TotalHours                34.2933333350082
            Minutes           17       TotalMinutes              2057.60000010049
            Seconds           36       TotalSeconds              123456.000006029
            Milliseconds       0       TotalMilliseconds         123456000.006029
                                       FractionalSecondTicks      111222333444555
                                       FractionalSeconds     6.02937477747469E-06
             
            PrecisionTimeSpan( 1.5 )                             00:00:01.5000000
            Days               0       TotalDays             1.73611111111111E-05
            Hours              0       TotalHours            0.000416666666666667
            Minutes            0       TotalMinutes                         0.025
            Seconds            1       TotalSeconds                           1.5
            Milliseconds     500       TotalMilliseconds                     1500
                                       FractionalSecondTicks  9223372036854775808
                                       FractionalSeconds                      0.5
             
            FromDays( 20.84745602 )                           20.20:20:20.2001280
            Days              20       TotalDays                      20.84745602
            Hours             20       TotalHours                    500.33894448
            Minutes           20       TotalMinutes                 30020.3366688
            Seconds           20       TotalSeconds                1801220.200128
            Milliseconds     200       TotalMilliseconds           1801220200.128
                                       FractionalSecondTicks  3691709997923696640
                                       FractionalSeconds        0.200127999996766
             
            FromTimeSpan(new TimeSpan(10, 20, 30, 40, 50))    10.20:30:40.0500000
            Days              10       TotalDays                 10.8546302083333
            Hours             20       TotalHours                      260.511125
            Minutes           30       TotalMinutes                    15630.6675
            Seconds           40       TotalSeconds                     937840.05
            Milliseconds      49       TotalMilliseconds                937840050
                                       FractionalSecondTicks   922337203685477580
                                       FractionalSeconds                     0.05
            */
            </code>
            </example>
            <lastupdated>10/4/2006 12:58:57 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks">
            <summary>
            Represents the number of seconds for each fractional second tick. This field is read-only.
            </summary>
            <remarks>
            	<para>
            The value of this constant is 2^(-64).
            Fractional seconds are stored as <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>.
            Use this field to convert between <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            and <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSeconds"/>.
            </para>
            </remarks>
            <lastupdated>10/4/2006 12:59:36 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionTimeSpan.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:NationalInstruments.PrecisionTimeSpan"/>. This field is read-only.
            </summary>
            <lastupdated>10/4/2006 12:59:18 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionTimeSpan.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:NationalInstruments.PrecisionTimeSpan"/>. This field is read-only.
            </summary>
            <lastupdated>10/4/2006 12:59:26 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionTimeSpan.Zero">
            <summary>
            Represents the zero <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value.
            This field is read-only.
            </summary>
            <remarks>
            This constant provides a convenient source for zero in time calculations.
            </remarks>
            <lastupdated>10/4/2006 12:59:44 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.#ctor(System.Int64,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure with the specified whole seconds and fractional second ticks.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds to represent.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed. This value cannot be less than zero.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            </exception>
            <lastupdated>10/4/2006 1:15:27 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure with the specified whole seconds and fractional second ticks.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds to represent.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed. This value cannot be less than zero.
            </param>
            <remarks>
            This constructor is provided for CLS compliance. However, the 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> constructor which
            takes the fractional second ticks as an <format type="bold">ulong</format>
            has higher precision.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            </exception>
            <lastupdated>10/4/2006 2:13:03 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure to the specified date and time represented by a
            <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="timeSpan">
            A <see cref="T:System.TimeSpan"/> which represents the time information to
            initialize the <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <remarks>
            A <see cref="T:System.TimeSpan"/> stores timing information in 100-nanosecond ticks.
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> stores timing information
            in whole seconds and fractional second ticks (2^(-64) seconds).  The date and time
            represented by the <paramref name="timeSpan"/> parameter is converted to whole 
            seconds and fractional second ticks in the new <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            Therefore, some rounding errors may occur.
            </remarks>
            <lastupdated>10/4/2006 1:15:52 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            structure with the specified number of seconds.
            </summary>
            <param name="seconds">
            The number of seconds to represent.
            </param>
            <remarks>
            The <paramref name="seconds"/> parameter represents whole and fractional seconds. Since
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> stores fractional seconds as
            fractional second ticks (2^(-64) seconds), some rounding may occur when initializing 
            the new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance.
            </remarks>
            <exception cref="T:System.OverflowException">
            The time value represented by <paramref name="seconds"/> is less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.PositiveInfinity"/> or
            <see cref="F:System.Double.NegativeInfinity"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.NaN"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="seconds"/> is greater than <see cref="F:System.Int64.MaxValue"/> or
            less than <see cref="F:System.Int64.MinValue"/>.
            </para>
            </exception>
            <lastupdated>10/4/2006 1:14:18 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.ToTimeSpan">
            <summary>
            Converts the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to a
            <see cref="T:System.TimeSpan"/> object.
            </summary>
            <returns>
            A <see cref="T:System.TimeSpan"/> object which represents the time of 
            the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance.
            </returns>
            <remarks>
            	<para>
            Since the <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure has a higher
            precision than <see cref="T:System.TimeSpan"/>, some precision may be lost
            when performing this conversion.
            </para>
            </remarks>
            <lastupdated>10/4/2006 1:16:50 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromTimeSpan(System.TimeSpan)">
            <summary>
            Returns a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance that
            represents the value of a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timeSpan">
            A <see cref="T:System.TimeSpan"/> which contains the time information to initialize
            the new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents the time
            specified by <paramref name="timeSpan"/>.
            </returns>
            <remarks>
            A <see cref="T:System.TimeSpan"/> stores timing information in 100-nanosecond
            ticks. A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> stores timing
            information in whole seconds and fractional second ticks (2^(-64) seconds).
            The time represented by the <paramref name="timeSpan"/> parameter is converted
            to whole seconds and fractional second ticks in the new
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/>. Therefore, some rounding
            errors may occur.
            </remarks>
            <lastupdated>10/4/2006 1:09:50 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromDays(System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents a
            specified number of days.
            </summary>
            <param name="value">
            A number of days.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            	<paramref name="value"/> is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is equal to <see cref="F:System.Double.NaN"/>.
            </exception>
            <remarks>
            If <paramref name="value"/> is <see cref="F:System.Double.PositiveInfinity"/>, 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/> is returned. If
            <paramref name="value"/> is <see cref="F:System.Double.NegativeInfinity"/>,
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> is returned.
            </remarks>
            <lastupdated>10/4/2006 1:08:21 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromHours(System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents a
            specified number of hours.
            </summary>
            <param name="value">
            A number of hours.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            	<paramref name="value"/> is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is equal to <see cref="F:System.Double.NaN"/>.
            </exception>
            <remarks>
            If <paramref name="value"/> is <see cref="F:System.Double.PositiveInfinity"/>, 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/> is returned. If
            <paramref name="value"/> is <see cref="F:System.Double.NegativeInfinity"/>,
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> is returned.
            </remarks>
            <lastupdated>10/4/2006 1:08:29 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromMinutes(System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents a
            specified number of minutes.
            </summary>
            <param name="value">
            A number of minutes.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            	<paramref name="value"/> is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is equal to <see cref="F:System.Double.NaN"/>.
            </exception>
            <remarks>
            If <paramref name="value"/> is <see cref="F:System.Double.PositiveInfinity"/>, 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/> is returned. If
            <paramref name="value"/> is <see cref="F:System.Double.NegativeInfinity"/>,
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> is returned.
            </remarks>
            <lastupdated>10/4/2006 1:09:01 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromSeconds(System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents a
            specified number of seconds.
            </summary>
            <param name="value">
            A number of seconds.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            	<paramref name="value"/> is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is equal to <see cref="F:System.Double.NaN"/>.
            </exception>
            <remarks>
            If <paramref name="value"/> is <see cref="F:System.Double.PositiveInfinity"/>, 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/> is returned. If
            <paramref name="value"/> is <see cref="F:System.Double.NegativeInfinity"/>,
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> is returned.
            </remarks>
            <lastupdated>10/4/2006 1:09:15 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.FromMilliseconds(System.Double)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents a
            specified number of milliseconds.
            </summary>
            <param name="value">
            A number of milliseconds.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents
            <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            	<paramref name="value"/> is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="value"/> is equal to <see cref="F:System.Double.NaN"/>.
            </exception>
            <remarks>
            If <paramref name="value"/> is <see cref="F:System.Double.PositiveInfinity"/>, 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/> is returned. If
            <paramref name="value"/> is <see cref="F:System.Double.NegativeInfinity"/>,
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> is returned.
            </remarks>
            <lastupdated>10/4/2006 1:08:44 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            An object to compare with this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object that
            represents the same time interval as the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure;
            otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:07:54 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Equals(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object.
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object to compare with
            this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> represents the same time
            interval as this instance; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method implements the <see cref="T:System.IEquatable`1"/> interface, and
            performs slightly better than the <see cref="M:NationalInstruments.PrecisionTimeSpan.Equals(System.Object)"/>
            overload which takes an object as a parameter because it does not have to convert
            the <paramref name="other"/> parameter to an object.
            </remarks>
            <lastupdated>10/4/2006 1:08:06 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Equals(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Returns a value indicating whether two specified instances of 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> are equal.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the values of <paramref name="t1"/> and
            <paramref name="t2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:08:16 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.PrecisionTimeSpan"/> objects might have the same
            hash code even though they represent different time values.
            </remarks>
            <lastupdated>10/4/2006 1:10:05 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Duration">
            <summary>
            Returns a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object whose
            value is the absolute value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            object.
            </summary>
            <returns>
            A new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is the absolute
            value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The value of this instance is <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>.
            </exception>
            <lastupdated>10/4/2006 1:07:44 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Negate">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is the negated
            value of this instance.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> which has the same numeric value as
            this instance, but with the opposite sign.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The negated value of this instance cannot be represented by a <see cref="T:NationalInstruments.PrecisionTimeSpan"/>;
            that is, the value of this instance is <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>.
            </exception>
            <lastupdated>10/4/2006 1:10:20 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Add(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Adds the specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to this
            instance.
            </summary>
            <param name="ts">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to add to the current 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents the value
            of this instance plus the value of <paramref name="ts"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The resulting <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            The return value must be between <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            and <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>; otherwise, an
            exception is thrown.
            </para>
            	<para>
            The return value is a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/>; the
            original <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is not modified.
            </para>
            </remarks>
            <lastupdated>10/4/2006 1:06:31 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Subtract(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Subtracts the specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> from this instance.
            </summary>
            <param name="ts">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to subtract.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is the result of the value
            of this instance minus the value of <paramref name="ts"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The return value is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            The return value must be between <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            and <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>; otherwise, an
            exception is thrown.
            </para>
            	<para>
            The return value is a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/>; the
            original <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is not modified.
            </para>
            </remarks>
            <lastupdated>10/4/2006 1:16:17 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Addition(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Adds two specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instances.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is the sum of
            <paramref name="t1"/> and <paramref name="t2"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The resulting <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 1:11:23 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Subtraction(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Subtracts a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> from another
            specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is the result
            of the value of <paramref name="t1"/> minus the value of <paramref name="t2"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The return value is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 1:10:58 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_UnaryPlus(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Returns the specified instance of <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="ts">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            Returns <paramref name="ts"/>.
            </returns>
            <lastupdated>10/4/2006 1:11:05 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_UnaryNegation(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Returns a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is
            the negated value of the specified instance.
            </summary>
            <param name="ts">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to negate.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> with the same numeric value
            as this instance, but the opposite sign.
            </returns>
            <exception cref="T:System.OverflowException">
            The negated value of this instance cannot be represented by a
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/>; that is, the value of this
            instance is <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>.
            </exception>
            <lastupdated>10/4/2006 1:10:39 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Multiply(NationalInstruments.PrecisionTimeSpan,System.Int64)">
            <summary>
            Multiples a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance by a value.
            </summary>
            <param name="ts">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance to multiply.
            </param>
            <param name="value">
            The value to multiply <paramref name="ts"/> by.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is <paramref name="ts"/> 
            multiplied by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The resulting <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>3/6/2007 5:16:02 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Division(NationalInstruments.PrecisionTimeSpan,System.Int64)">
            <summary>
            Divides a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance by a value.
            </summary>
            <param name="ts">
            The <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance to divide.
            </param>
            <param name="value">
            The value to divide <paramref name="ts"/> by.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> whose value is <paramref name="ts"/> 
            divided by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.OverflowException">
            The resulting <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>3/6/2007 5:16:18 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Equality(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether two <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instances
            are equal.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the values of <paramref name="t1"/> and
            <paramref name="t2"/> are equal; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:11:52 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_Inequality(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether two <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instances
            are not equal.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the values of <paramref name="t1"/> and <paramref name="t2"/>
            are not equal; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:10:28 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_LessThan(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            another specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the value of <paramref name="t1"/> is less than the
            value of <paramref name="t2"/>; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:11:34 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_GreaterThan(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is greater than
            another specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the value of <paramref name="t1"/> is greater than the
            value of <paramref name="t2"/>; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:12:02 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_LessThanOrEqual(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than
            or equal to another specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the value of <paramref name="t1"/> is less than 
            or equal to the value of <paramref name="t2"/>; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:11:44 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.op_GreaterThanOrEqual(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Indicates whether a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is greater than
            or equal to another specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            	<see langword="true"/> if the value of <paramref name="t1"/> is greater than 
            or equal to the value of <paramref name="t2"/>; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 1:12:11 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Compare(NationalInstruments.PrecisionTimeSpan,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Compares two <see cref="T:NationalInstruments.PrecisionTimeSpan"/> values and returns
            an integer that indicates their relationship.
            </summary>
            <param name="t1">
            The first <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A signed number indicating the relative values of <paramref name="t1"/> and <paramref name="t2"/>.
            <list type="table">
            		<listheader>
            			<term>Value Type</term>
            			<description>Condition</description>
            		</listheader>
            		<item>
            			<term>
            -1
            </term>
            			<description>
            				<paramref name="t1"/> is less than <paramref name="t2"/>.
            </description>
            		</item>
            		<item>
            			<term>
            0
            </term>
            			<description>
            				<paramref name="t1"/> is equal to <paramref name="t2"/>.
            </description>
            		</item>
            		<item>
            			<term>
            1
            </term>
            			<description>
            				<paramref name="t1"/> is greater than <paramref name="t2"/>.
            </description>
            		</item>
            	</list>
            </returns>
            <lastupdated>10/4/2006 1:06:44 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an indication of their
            relative values.
            </summary>
            <param name="obj">
            An object to compare, or <see langword="null"/>.
            </param>
            <returns>
            A signed number indicating the relative values of the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance
            and <paramref name="obj"/>.
            <list type="table">
            		<listheader>
            			<term>Value Type</term>
            			<description>Condition</description>
            		</listheader>
            		<item>
            			<term>
            -1
            </term>
            			<description>
            				The value of this instance is less than the value
            of <paramref name="obj"/>.
            </description>
            		</item>
            		<item>
            			<term>
            0
            </term>
            			<description>
            				The value of this instance is equal to the value
            of <paramref name="obj"/>.
            </description>
            		</item>
            		<item>
            			<term>
            1
            </term>
            			<description>
            				<para>
            The value of this instance is greater than the value of <paramref name="obj"/>.
            </para>
            				<para>
            -or-
            </para>
            				<para>
            					<paramref name="obj"/> is <see langword="null"/>.
            </para>
            			</description>
            		</item>
            	</list>
            </returns>
            <remarks>
            	<para>
            Any instance of <see cref="T:NationalInstruments.PrecisionTimeSpan"/>, regardless of
            its value, is considered greater than <see langword="null"/>.
            </para>
            	<para>
            The <paramref name="obj"/> parameter must be an instance of 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> or <see langword="null"/>;
            otherwise, an exception is thrown.
            </para>
            </remarks>
            <lastupdated>10/4/2006 1:07:08 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.CompareTo(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Compares this instance to a specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            and returns an indication of their relative values.
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to compare to this instance.
            </param>
            <returns>
            A signed number indicating the relative values of the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance
            and <paramref name="other"/>.
            <list type="table">
            		<listheader>
            			<term>Value Type</term>
            			<description>Condition</description>
            		</listheader>
            		<item>
            			<term>
            -1
            </term>
            			<description>
            				The value of this instance is less than the value
            of <paramref name="other"/>.
            </description>
            		</item>
            		<item>
            			<term>
            0
            </term>
            			<description>
            				The value of this instance is equal to the value
            of <paramref name="other"/>.
            </description>
            		</item>
            		<item>
            			<term>
            1
            </term>
            			<description>
            The value of this instance is greater than the value of <paramref name="other"/>.
            </description>
            		</item>
            	</list>
            </returns>
            <remarks>
            	<para>
            This method implements the <see cref="T:System.IComparable"/> interface and
            performs slightly better than the <see cref="M:NationalInstruments.PrecisionTimeSpan.CompareTo(System.Object)"/>
            method which takes an object as a parameter because it does not have to convert the
            <paramref name="other"/> parameter to an object.
            </para>
            </remarks>
            <lastupdated>10/4/2006 1:07:32 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.Parse(System.String)">
            <summary>
            Constructs a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object from
            a time interval specified in a string.
            </summary>
            <param name="timeSpan">
            A string that specifies a time interval.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that corresponds to <paramref name="timeSpan"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="timeSpan"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="timeSpan"/> has an invalid format.
            </exception>
            <exception cref="T:System.OverflowException">
            	<para>
            		<paramref name="timeSpan"/> represents a number less than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            At least one of the days, hours, minutes, or seconds components is outside its valid
            range.
            </para>
            </exception>
            <remarks>
            	<para>
            The <paramref name="timeSpan"/> parameter contains a time interval specification of the form:
            </para>
            	<para>
            [ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]
            </para>
            	<para>
            Items in square brackets ([ and ]) are optional. One selection from the list of alternatives
            enclosed in braces ({ and }) and separated by vertical bars (|) is required.
            Colons and period (: and .) are literal characters and required. Other items are as follows.
            </para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Item</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ws
            </term>
            				<description>
            optional white space
            </description>
            			</item>
            			<item>
            				<term>
            "-"
            </term>
            				<description>
            optional minus sign indicating a negative <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            				</description>
            			</item>
            			<item>
            				<term>
            d
            </term>
            				<description>
            days, ranging from 0 to 10675199
            </description>
            			</item>
            			<item>
            				<term>
            hh
            </term>
            				<description>
            hours, ranging from 0 to 23
            </description>
            			</item>
            			<item>
            				<term>
            mm
            </term>
            				<description>
            minutes, ranging from 0 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            optional seconds, ranging from 0 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ff
            </term>
            				<description>
            optional fractional seconds, consisting of 1 to 7 decimal digits
            </description>
            			</item>
            		</list>
            	</para>
            	<para>
            The components of <paramref name="timeSpan"/> must collectively specify a time interval
            greater than or equal to <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            and less than or equal to <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </para>
            	<para>This method calls <see cref="M:System.TimeSpan.Parse(System.String)"/> to parse <paramref name="timeSpan"/>. Some precision may be lost.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:21:34 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.TryParse(System.String,NationalInstruments.PrecisionTimeSpan@)">
            <summary>
            Constructs a new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> object from
            a time interval specified in a string. Parameters specify the time interval
            and the variable where the new <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            object is returned.
            </summary>
            <param name="timeSpan">
            A string that specifies a time interval.
            </param>
            <param name="result">
            When this method returns, it contains an object that represents the time interval
            specified by <paramref name="timeSpan"/>, or <see cref="F:NationalInstruments.PrecisionTimeSpan.Zero"/>
            if the conversion failed. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="timeSpan"/> was converted successfully;
            otherwise, <see langword="false"/>. This operation returns <see langword="false"/>
            if the <paramref name="timeSpan"/> parameter is <see langword="null"/>, has an invalid
            format, represents a time interval less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>, or has
            at least one days, hours, minutes, or seconds component outside its valid range.
            </returns>
            <remarks>
            	<para>
            The <see cref="M:NationalInstruments.PrecisionTimeSpan.TryParse(System.String,NationalInstruments.PrecisionTimeSpan@)"/> method is like the
            <see cref="M:NationalInstruments.PrecisionTimeSpan.Parse(System.String)"/> method, except the
            <see cref="M:NationalInstruments.PrecisionTimeSpan.TryParse(System.String,NationalInstruments.PrecisionTimeSpan@)"/> method does not throw an
            exception if the conversion fails.
            </para>
            	<para>
            The <paramref name="timeSpan"/> parameter contains a time interval specification of the form:
            </para>
            	<para>
            [ws][-]{ d | d.hh:mm[:ss[.ff]] | hh.mm[:ss[.ff]] }[ws]
            </para>
            	<para>
            Items in square brackets ([ and ]) are optional. One selection from the list of alternatives
            enclosed in braces ({ and }) and separated by vertical bars (|) is required.
            Colons and period (: and .) are literal characters and required. Other items are as follows.
            </para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Item</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            ws
            </term>
            				<description>
            optional white space
            </description>
            			</item>
            			<item>
            				<term>
            "-"
            </term>
            				<description>
            optional minus sign indicating a negative <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            				</description>
            			</item>
            			<item>
            				<term>
            d
            </term>
            				<description>
            days, ranging from 0 to 10675199
            </description>
            			</item>
            			<item>
            				<term>
            hh
            </term>
            				<description>
            hours, ranging from 0 to 23
            </description>
            			</item>
            			<item>
            				<term>
            mm
            </term>
            				<description>
            minutes, ranging from 0 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            optional seconds, ranging from 0 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ff
            </term>
            				<description>
            optional fractional seconds, consisting of 1 to 7 decimal digits
            </description>
            			</item>
            		</list>
            	</para>
            	<para>
            The components of <paramref name="timeSpan"/> must collectively specify a time interval
            greater than or equal to <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/>
            and less than or equal to <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </para>
            </remarks>
            <lastupdated>3/7/2007 8:22:05 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            	<para>
            A string that represents the value of this instance. The return value is of the
            form:
            </para>
            	<para>[0][d.]hh:mm:ss[.ff]
            </para>
            	<para>Items in square brackets ([ and ]) are optional,
            colons and periods (: and .) are literal characters; and the other items are
            as follows.
            </para>
            	<para>
            		<list type="table">
            			<listheader>
            				<term>Item</term>
            				<description>Description</description>
            			</listheader>
            			<item>
            				<term>
            "-"
            </term>
            				<description>
            optional minus sign indicating a negative time
            </description>
            			</item>
            			<item>
            				<term>
            d
            </term>
            				<description>
            optional days
            </description>
            			</item>
            			<item>
            				<term>
            hh
            </term>
            				<description>
            hours, ranging from 0 to 23
            </description>
            			</item>
            			<item>
            				<term>
            mm
            </term>
            				<description>
            minutes, ranging from 0 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ss
            </term>
            				<description>
            seconds, ranging from 9 to 59
            </description>
            			</item>
            			<item>
            				<term>
            ff
            </term>
            				<description>
            optional fractional seconds, from 1 to 7 decimal digits
            </description>
            			</item>
            		</list>
            	</para>
            </returns>
            <remarks>
            	<para>
            The return value of this method can be consumed by <see cref="M:NationalInstruments.PrecisionTimeSpan.Parse(System.String)"/>.
            </para>
            	<para>This method calls <see cref="M:System.TimeSpan.ToString"/> to obtain the string representation of this instance.  Some precision may be lost.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:21:52 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionTimeSpan.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:36 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.WholeSeconds">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            structure expressed in whole seconds. This property is read-only.
            </summary>
            <value>
            The total number of whole seconds represented by the <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </value>
            <remarks>
            This property returns only whole seconds. For example, if the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> represents 4.5 seconds (4 seconds 
            and 500 milliseconds), this property returns 4.
            </remarks>
            <lastupdated>10/4/2006 1:06:14 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks">
            <summary>
            Gets the number of fractional second ticks represented by the current 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance. This property is read-only.
            </summary>
            <value>
            The number of 2^(-64) seconds after the whole seconds represented by this instance.
            </value>
            <remarks>
            	<para>
            This property is always zero or positive. It returns the number of positive 2^(-64) seconds after
            the whole seconds of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>. 
            Each tick of this value represents 0.05421010862427522170... attoseconds. For example, 
            if the time represented by the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            is 4.8 seconds, this property returns 14757395258967641293 (0.8 represented by 2^(-64) seconds).
            </para>
            	<para>
            To convert this value to fractional seconds, multiply
            it by <see cref="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks"/>.
            Rounding errors may occur.
            </para>
            </remarks>
            <seealso cref="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks"/>
            <lastupdated>10/4/2006 1:01:33 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.FractionalSeconds">
            <summary>
            Gets the number of fractional seconds represented by the current 
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> instance. This property is read-only.
            </summary>
            <value>
            The number of seconds after the whole seconds represented by this instance.
            </value>
            <remarks>
            	<para>
            This property returns the number of fractional seconds after the whole seconds
            represented by the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>. 
            For example, if the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/> 
            represents 4.5 seconds, this property returns 0.5.
            </para>
            	<para>
            This property converts <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            to fractional seconds by multiplying 
            <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            by <see cref="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks"/>.
            Therefore, some rounding errors may occur when using this property instead of
            <see cref="P:NationalInstruments.PrecisionTimeSpan.FractionalSecondTicks"/>
            to obtain the fractional seconds represented by this instance.
            </para>
            </remarks>
            <seealso cref="F:NationalInstruments.PrecisionTimeSpan.SecondsPerFractionalTicks"/>
            <lastupdated>10/4/2006 1:00:50 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.Days">
            <summary>
            Gets the number of whole days represented by the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure. This property is read-only.
            </summary>
            <value>
            The day component of this instance. The return value can be positive or negative.
            </value>
            <remarks>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value can be represented as
            [-]<format type="italics">d hh:mm:ss.ff</format>, where the optional minus sign
            indicates a negative time interval, the <format type="italics">d</format>
            component is days, <format type="italics">hh</format> is hours as measured on a 24-hour
            clock, <format type="italics">mm</format> is minutes, <format type="italics">ss</format>
            is seconds, and <format type="italics">ff</format> is fractions of a second. The
            value of the <see cref="P:NationalInstruments.PrecisionTimeSpan.Days"/> property is
            the day component, <format type="italics">d</format>.
            </remarks>
            <lastupdated>10/4/2006 1:00:08 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.Hours">
            <summary>
            Gets the number of whole hours represented by the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure. This property
            is read-only.
            </summary>
            <value>
            The hour component of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure. The return value ranges from -23 through 23.
            </value>
            <remarks>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value can be represented as
            [-]<format type="italics">d hh:mm:ss.ff</format>, where the optional minus sign
            indicates a negative time interval, the <format type="italics">d</format>
            component is days, <format type="italics">hh</format> is hours as measured on a 24-hour
            clock, <format type="italics">mm</format> is minutes, <format type="italics">ss</format>
            is seconds, and <format type="italics">ff</format> is fractions of a second. The
            value of the <see cref="P:NationalInstruments.PrecisionTimeSpan.Hours"/> property is
            the hours component, <format type="italics">hh</format>.
            </remarks>
            <lastupdated>10/4/2006 1:02:09 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.Minutes">
            <summary>
            Gets the number of whole minutes represented by the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure.
            This property is read-only.
            </summary>
            <value>
            The minute component of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure. The return value ranges from -59 through 59.
            </value>
            <remarks>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value can be represented as
            [-]<format type="italics">d hh:mm:ss.ff</format>, where the optional minus sign
            indicates a negative time interval, the <format type="italics">d</format>
            component is days, <format type="italics">hh</format> is hours as measured on a 24-hour
            clock, <format type="italics">mm</format> is minutes, <format type="italics">ss</format>
            is seconds, and <format type="italics">ff</format> is fractions of a second. The
            value of the <see cref="P:NationalInstruments.PrecisionTimeSpan.Minutes"/> property is
            the minute component, <format type="italics">mm</format>.
            </remarks>
            <lastupdated>10/12/2006 12:20:37 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.Seconds">
            <summary>
            Gets the number of whole seconds represented by the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure.
            This property is read-only.
            </summary>
            <value>
            The second component of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure. The return value ranges from -59 through 59.
            </value>
            <remarks>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value can be represented as
            [-]<format type="italics">d hh:mm:ss.ff</format>, where the optional minus sign
            indicates a negative time interval, the <format type="italics">d</format>
            component is days, <format type="italics">hh</format> is hours as measured on a 24-hour
            clock, <format type="italics">mm</format> is minutes, <format type="italics">ss</format>
            is seconds, and <format type="italics">ff</format> is fractions of a second. The
            value of the <see cref="P:NationalInstruments.PrecisionTimeSpan.Seconds"/> property is
            the second component, <format type="italics">ss</format>.
            </remarks>
            <lastupdated>10/4/2006 1:04:04 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.Milliseconds">
            <summary>
            Gets the number of whole milliseconds represented by the current
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> structure.
            This property is read-only.
            </summary>
            <value>
            The millisecond component of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure. The return value ranges from -999 through 999.
            </value>
            <remarks>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value can be represented as
            [-]<format type="italics">d hh:mm:ss.ff</format>, where the optional minus sign
            indicates a negative time interval, the <format type="italics">d</format>
            component is days, <format type="italics">hh</format> is hours as measured on a 24-hour
            clock, <format type="italics">mm</format> is minutes, <format type="italics">ss</format>
            is seconds, and <format type="italics">ff</format> is fractions of a second. The
            value of the <see cref="P:NationalInstruments.PrecisionTimeSpan.Milliseconds"/> property is
            the fractional second component, <format type="italics">ff</format>.
            </remarks>
            <lastupdated>10/4/2006 1:02:31 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.TotalDays">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure expressed in whole and fractional days. This property is read-only.
            </summary>
            <value>
            The total number of days represented by this instance.
            </value>
            <remarks>
            This property converts the value of this instance from whole seconds and fractional
            second ticks (2^(-64) seconds) to days. This number might include whole
            and fractional days.
            </remarks>
            <lastupdated>10/4/2006 1:04:21 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.TotalHours">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure expressed in whole and fractional hours. This property is read-only.
            </summary>
            <value>
            The total number of hours represented by this instance.
            </value>
            <remarks>
            This property converts the value of this instance from whole seconds and fractional
            second ticks (2^(-64) seconds) to hours. This number might include whole
            and fractional hours.
            </remarks>
            <lastupdated>10/4/2006 1:04:53 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.TotalMinutes">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure expressed in whole and fractional minutes. This property is read-only.
            </summary>
            <value>
            The total number of minutes represented by this instance.
            </value>
            <remarks>
            This property converts the value of this instance from whole seconds and fractional
            second ticks (2^(-64) seconds) to minutes. This number might include whole
            and fractional minutes.
            </remarks>
            <lastupdated>10/4/2006 1:05:41 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.TotalSeconds">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure expressed in whole and fractional seconds. This property is read-only.
            </summary>
            <value>
            The total number of seconds represented by this instance.
            </value>
            <remarks>
            This property converts the value of this instance from whole seconds and fractional
            second ticks (2^(-64) seconds) to seconds. This number might include whole
            and fractional seconds.
            </remarks>
            <lastupdated>10/12/2006 12:20:52 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionTimeSpan.TotalMilliseconds">
            <summary>
            Gets the value of the current <see cref="T:NationalInstruments.PrecisionTimeSpan"/>
            structure expressed in whole and fractional milliseconds. This property is read-only.
            </summary>
            <value>
            The total number of milliseconds represented by this instance.
            </value>
            <remarks>
            This property converts the value of this instance from whole seconds and fractional
            second ticks (2^(-64) seconds) to milliseconds. This number might include whole
            and fractional milliseconds.
            </remarks>
            <lastupdated>10/4/2006 1:05:08 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.IComplexWaveformCollectionService`1">
            <exclude/>
            <lastupdated>12/5/2007 11:26:00 AM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformCollectionService`1.LoadData(`0[],System.Int32,System.Int32,System.Int32)">
            <exclude/>
            <lastupdated>12/5/2007 11:26:00 AM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformCollectionService`1.LoadData(`0[],System.Int32,System.Int32,System.Int32[],System.Int32[])">
            <exclude/>
            <lastupdated>12/5/2007 11:26:00 AM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.IComplexWaveformCollectionService`1.GetData">
            <exclude/>
            <lastupdated>12/5/2007 11:26:00 AM</lastupdated>
            <updatedby>Prajeesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.AnalogWaveformSampleCollection">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.AnalogWaveformSample"/> objects.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<filter name="VS2005|VS2008">
            		<para>
            This class is obsolete.  Use <see cref="T:NationalInstruments.AnalogWaveformSampleCollection`1"/> for increased performance.
            </para>
            	</filter>
            </remarks>
            <lastupdated>9/16/2008 4:50:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection.IndexOf(NationalInstruments.AnalogWaveformSample)">
            <summary>
            Searches for the <see cref="T:NationalInstruments.AnalogWaveformSample"/> and returns the zero-based index of the first
            occurrence.
            </summary>
            <param name="sample">
            The <see cref="T:NationalInstruments.AnalogWaveformSample"/> to locate.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="sample"/>.
            </returns>
            <lastupdated>3/1/2006 5:56:48 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection.CopyTo(NationalInstruments.AnalogWaveformSample[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>3/1/2006 5:56:34 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>
            A string representation of the object.
            </returns>
            <remarks>
            Overrides <see cref="M:System.Object.ToString"/>.
            </remarks>
            <lastupdated>3/1/2006 5:56:49 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>3/1/2006 5:56:53 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.AnalogWaveformSampleCollection.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>3/1/2006 5:56:40 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.AnalogWaveformSample"/> at the specified index. 
            </summary>
            <param name="sampleIndex">
            The zero-based index of the entry to locate in the collection.
            </param>
            <value>The <see cref="T:NationalInstruments.AnalogWaveformSample"/> at the specified index.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is greater than or equal to count.
            </para>
            </exception>
            <lastupdated>3/1/2006 5:56:21 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection.Count">
            <summary>
            Gets the number of samples in <see cref="T:NationalInstruments.AnalogWaveformSampleCollection"/>.
            </summary>
            <value>
            The number of samples in <see cref="T:NationalInstruments.AnalogWaveformSampleCollection"/>.
            </value>
            <lastupdated>3/1/2006 5:56:12 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection.System#Collections#ICollection#IsSynchronized">
            <exclude/>
            <lastupdated>3/1/2006 5:57:00 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.AnalogWaveformSampleCollection.System#Collections#ICollection#SyncRoot">
            <exclude/>
            <lastupdated>3/1/2006 5:57:03 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.DataConverter">
            <summary>
            Converts data from one data type to another data type.
            </summary>
            <threadsafety safety="safe"/>
            <remarks>
            	<para>
            		The <see cref="T:NationalInstruments.DataConverter"/> class is similar to the <see cref="T:System.Convert"/> class and
            supports converting the value of an object of one data type to another data type that has an equivalent value. 
            In addition to the functionality that <see cref="T:System.Convert"/> provides, the <see cref="T:NationalInstruments.DataConverter"/> class
            supports the following functionality:
            </para>
            	<list type="bullet">
            		<item>
            			<description>
            Convert scalar values to one-dimensional arrays.
            </description>
            		</item>
            		<item>
            			<description>
            Convert scalar values to two-dimensional arrays.
            </description>
            		</item>
            		<item>
            			<description>
            Convert one-dimensional arrays to one-dimensional arrays of another data type.
            </description>
            		</item>
            		<item>
            			<description>
            Convert one-dimensional arrays to two-dimensional arrays.
            </description>
            		</item>
            		<item>
            			<description>
            Convert two-dimensional arrays to two-dimensional arrays of another data type.
            </description>
            		</item>
            		<item>
            			<description>
            Verify if a data conversion is possible without attempting the data conversion and handling <see cref="T:System.InvalidCastException"/>.
            			</description>
            		</item>
            	</list>
            	<para>
            The <see cref="T:NationalInstruments.DataConverter"/> class supports the following types:
            </para>
            	<list type="bullet">
            		<item><description><see cref="T:System.Boolean"/></description></item>
            		<item><description><see cref="T:System.Byte"/></description></item>
            		<item><description><see cref="T:System.Char"/></description></item>
            		<item><description><see cref="T:System.Drawing.Color"/></description></item>
            		<item><description><see cref="T:System.DateTime"/></description></item>
            		<item><description><see cref="T:System.Decimal"/></description></item>
            		<item><description><see cref="T:System.Double"/></description></item>
            		<item><description><see cref="T:System.Int16"/></description></item>
            		<item><description><see cref="T:System.Int32"/></description></item>
            		<item><description><see cref="T:System.Int64"/></description></item>
            		<item><description><see cref="T:System.SByte"/></description></item>
            		<item><description><see cref="T:System.Single"/></description></item>
            		<item><description><see cref="T:System.String"/></description></item>
            		<item><description><see cref="T:System.UInt16"/></description></item>
            		<item><description><see cref="T:System.UInt32"/></description></item>
            		<item><description><see cref="T:System.UInt64"/></description></item>
            	</list>
            	<note type="note">
            Some conversions cause precision loss. One effect of precision loss is that if you convert from one type to another and then back to the original type,
             the final value might not be the same as the original value.
            </note>
            </remarks>
            <example>
            The following sample demonstrates a method that uses the <see cref="T:NationalInstruments.DataConverter"/> to convert an array of integers to an array of
            doubles.
            <code lang="VB.NET">
            Private Function ConvertData(ByVal values As Integer()) As Double()
                Dim convertedValues As Double() = Nothing
                If DataConverter.CanConvert(values, GetType(Double())) Then
                    convertedValues = CType(DataConverter.Convert(values, GetType(Double())), Double())
                End If
                Return convertedValues
            End Function
            </code>
            </example>
            <example>
            	<code lang="C#">
            private double[] ConvertData(int[] values)
            {
                double[] convertedValues = null;
                if (DataConverter.CanConvert(values, typeof(double[])))
                    convertedValues = (double[])DataConverter.Convert(values, typeof(double[]));
                return convertedValues;
            }
            </code>
            </example>
            <seealso cref="T:System.Convert"/>
            <lastupdated>9/6/2005 1:49:59 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DataConverter.CanConvert(System.Object,System.Type)">
            <summary>
            Returns if an object can be converted to a specified type.
            </summary>
            <param name="source">
            The object to check in order to verify if a conversion is possible.
            </param>
            <param name="targetType">
            The data type to check in order to verify if <paramref name="source"/> can be converted to it.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="source"/> can be converted to the type specified by <paramref name="targetType"/>.
            </returns>
            <example>
            The following example demonstrates a method that uses the <see cref="T:NationalInstruments.DataConverter"/> to convert an array of integers to an array of
            doubles.  <see cref="M:NationalInstruments.DataConverter.CanConvert(System.Object,System.Type)"/>
            is used to verify if the conversion is possible before actually performing the conversion.
            <code lang="VB.NET">
            Private Function ConvertData(ByVal values As Integer()) As Double()
                Dim convertedValues As Double() = Nothing
                If DataConverter.CanConvert(values, GetType(Double())) Then
                    convertedValues = CType(DataConverter.Convert(values, GetType(Double())), Double())
                End If
                Return convertedValues
            End Function
            </code>
            </example>
            <example>
            	<code lang="C#">
            private double[] ConvertData(int[] values)
            {
                double[] convertedValues = null;
                if (DataConverter.CanConvert(values, typeof(double[])))
                    convertedValues = (double[])DataConverter.Convert(values, typeof(double[]));
                return convertedValues;
            }
            </code>
            </example>
            <lastupdated>3/2/2006 2:23:52 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DataConverter.CanConvert``1(System.Object)">
            <summary>
            Returns if an object can be converted to the generic type TData.
            </summary>
            <typeparam name="TData">
            The type to check in order to verify if <paramref name="source"/> can be converted to it.
            </typeparam>
            <param name="source">
            The object to check in order to verify if a conversion is possible.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="source"/> can be converted to the generic type TData.
            </returns>
            <example>
            The following example demonstrates a method that uses the <see cref="T:NationalInstruments.DataConverter"/> to convert an array of integers to an array of
            doubles.  <see cref="M:NationalInstruments.DataConverter.CanConvert(System.Object,System.Type)"/>
            is used to verify if the conversion is possible before actually performing the conversion.
            <code lang="VB.NET">
            Private Function ConvertData(ByVal values As Integer()) As Double()
                Dim convertedValues As Double() = Nothing
                If DataConverter.CanConvert(Of Double())(values) Then
                    convertedValues = DataConverter.Convert(Of Double())(values)
                End If
                Return convertedValues
            End Function
            </code>
            </example>
            <example>
            	<code lang="C#">
            private double[] ConvertData(int[] values)
            {
                double[] convertedValues = null;
                if (DataConverter.CanConvert&lt;double[]&gt;(values))
                    convertedValues = DataConverter.Convert&lt;double[]&gt;(values);
                return convertedValues;
            }
            </code>
            </example>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <lastupdated>6/2/2006 11:27:26 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DataConverter.Convert(System.Object,System.Type)">
            <summary>
            Returns an object of a specified type that has a value that is equivalent to a specified object.
            </summary>
            <param name="source">
            The object to convert the value of.
            </param>
            <param name="targetType">
            The type to convert the value of <paramref name="source"/> to.
            </param>
            <returns>
            An object that is of the type specified by <paramref name="targetType"/> and has a value that is equivalent to the value of <paramref name="source"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="source"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="targetType"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            Converting <paramref name="source"/> to <paramref name="targetType"/> cannot produce a meaningful result.
            </exception>
            <example>
            The following example demonstrates a method that uses the <see cref="T:NationalInstruments.DataConverter"/> to convert an array of integers to an array of
            doubles.  <see cref="M:NationalInstruments.DataConverter.Convert(System.Object,System.Type)"/>
            is used to perform the conversion.
            <code lang="VB.NET">
            Private Function ConvertData(ByVal values As Integer()) As Double()
                Dim convertedValues As Double() = Nothing
                If DataConverter.CanConvert(values, GetType(Double())) Then
                    convertedValues = CType(DataConverter.Convert(values, GetType(Double())), Double())
                End If
                Return convertedValues
            End Function
            </code>
            </example>
            <example>
            	<code lang="C#">
            private double[] ConvertData(int[] values)
            {
                double[] convertedValues = null;
                if (DataConverter.CanConvert(values, typeof(double[])))
                    convertedValues = (double[])DataConverter.Convert(values, typeof(double[]));
                return convertedValues;
            }
            </code>
            </example>
            <lastupdated>3/2/2006 2:29:27 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DataConverter.Convert``1(System.Object)">
            <summary>
            Returns an object of the generic type TData that has a value that is equivalent to a specified object.
            </summary>
            <typeparam name="TData">
            The type to convert the value of <paramref name="source"/> to.
            </typeparam>
            <param name="source">
            The object to convert the value of.
            </param>
            <returns>
            An object that is of the generic type TData and has a value that is equivalent to the value of <paramref name="source"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<para>
            		<paramref name="source"/> is <see langword="null"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="targetType"/> is <see langword="null"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            Converting <paramref name="source"/> to <paramref name="targetType"/> cannot produce a meaningful result.
            </exception>
            <example>
            The following example demonstrates a method that uses the <see cref="T:NationalInstruments.DataConverter"/> to convert an array of integers to an array of
            doubles.  <see cref="M:NationalInstruments.DataConverter.CanConvert(System.Object,System.Type)"/>
            is used to verify if the conversion is possible before actually performing the conversion.
            <code lang="VB.NET">
            Private Function ConvertData(ByVal values As Integer()) As Double()
                Dim convertedValues As Double() = Nothing
                If DataConverter.CanConvert(Of Double())(values) Then
                    convertedValues = DataConverter.Convert(Of Double())(values)
                End If
                Return convertedValues
            End Function
            </code>
            </example>
            <example>
            	<code lang="C#">
            private double[] ConvertData(int[] values)
            {
                double[] convertedValues = null;
                if (DataConverter.CanConvert&lt;double[]&gt;(values))
                    convertedValues = DataConverter.Convert&lt;double[]&gt;(values);
                return convertedValues;
            }
            </code>
            </example>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <lastupdated>6/2/2006 11:27:57 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexWaveformScaleMode">
            <summary>
            Represents a class used to scale complex waveform data.
            </summary>
            <remarks>
            	<see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> scales waveform data. Use
            <see cref="M:NationalInstruments.ComplexWaveformScaleMode.CreateLinearMode(System.Double,System.Double)"/> to create a linear scale.
            <see cref="P:NationalInstruments.ComplexWaveformScaleMode.None"/> represents a scale mode that does
            not scale the data.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>11/21/2007 9:54:42 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> class.
            </summary>
            <lastupdated>11/21/2007 9:55:26 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0})">
            <summary>
            Returns the scaled complex waveform data.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.ComplexWaveformScaleMode.TransformData(NationalInstruments.ComplexDouble[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>11/21/2007 10:11:40 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0},System.Int32,System.Int32)">
            <summary>
            Returns the scaled complex waveform data using the specified sample index and count.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start index.
            </param>
            <param name="count">
            The amount of scaled data to return.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.ComplexWaveformScaleMode.TransformData(NationalInstruments.ComplexDouble[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>11/21/2007 10:11:45 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0},System.Int32,System.Int32,NationalInstruments.ComplexDouble[],System.Int32)">
            <summary>
            Returns the scaled complex waveform data using the specified sample index, count, and array index.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The amount of scaled data to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.ComplexWaveformScaleMode.GetScaledData``1(NationalInstruments.ComplexWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.ComplexWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.ComplexWaveformScaleMode.TransformData(NationalInstruments.ComplexDouble[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>11/21/2007 10:11:55 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.TransformData(NationalInstruments.ComplexDouble[])">
            <summary>
            Returns the transformed data.
            </summary>
            <param name="data">
            The raw, untransformed data.
            </param>
            <returns>
            The transformed data.
            </returns>
            <lastupdated>11/21/2007 10:12:08 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformScaleMode.CreateLinearMode(System.Double,System.Double)">
            <summary>
            Creates a <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> that scales the complex data linearly.
            </summary>
            <param name="gain">
            The gain of the linear scale.
            </param>
            <param name="offset">
            The offset of the linear scale.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> that scales data linearly.
            </returns>
            <remarks>
            The scaled values are calculated by multiplying both the real and imaginary parts of each waveform sample with 
            the <paramref name="gain"/> and then adding the <paramref name="offset"/> to both the real and imaginary parts.
            </remarks>
            <lastupdated>11/21/2007 9:55:32 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformScaleMode.None">
            <summary>
            Gets a <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> that does not scale data.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.ComplexWaveformScaleMode"/> that does not scale data.
            </value>
            <lastupdated>11/21/2007 9:55:17 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.WaveformScaleMode">
            <summary>
            Represents a class used to scale waveform data.
            </summary>
            <remarks>
            	<see cref="T:NationalInstruments.WaveformScaleMode"/> scales waveform data. Use
            <see cref="M:NationalInstruments.WaveformScaleMode.CreateLinearMode(System.Double,System.Double)"/> to create a linear scale.
            <see cref="P:NationalInstruments.WaveformScaleMode.None"/> represents a scale mode that does
            not scale the data.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>3/2/2006 2:30:28 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.WaveformScaleMode"/> class.
            </summary>
            <lastupdated>3/2/2006 2:30:57 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform)">
            <summary>
            Returns the scaled analog waveform data.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform)"/> calls <see cref="M:NationalInstruments.AnalogWaveform.GetRawData"/>
            to get the data to scale, and then calls <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            </remarks>
            <lastupdated>3/2/2006 2:32:14 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0})">
            <summary>
            Returns the scaled analog waveform data.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:32:13 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform,System.Int32,System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the specified sample index and count.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start index.
            </param>
            <param name="count">
            The amount of scaled data to return.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform)"/> calls <see cref="M:NationalInstruments.AnalogWaveform.GetRawData"/>
            to get the data to scale, and then calls <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            </remarks>
            <lastupdated>3/2/2006 2:32:45 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0},System.Int32,System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the specified sample index and count.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start index.
            </param>
            <param name="count">
            The amount of scaled data to return.
            </param>
            <returns>
            The scaled data.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            -or-
            <para>
            		<para>
            			<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.
            </para>
            	</para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:32:33 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform,System.Int32,System.Int32,System.Double[],System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the specified sample index, count, and array index.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The amount of scaled data to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData(NationalInstruments.AnalogWaveform)"/> calls <see cref="M:NationalInstruments.AnalogWaveform.GetRawData"/>
            to get the data to scale, and then calls <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            </remarks>
            <lastupdated>3/2/2006 2:33:25 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0},System.Int32,System.Int32,System.Double[],System.Int32)">
            <summary>
            Returns the scaled analog waveform data using the specified sample index, count, and array index.
            </summary>
            <param name="waveform">
            The waveform to get the scaled data from.
            </param>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The amount of scaled data to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the scaled data into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the scaled data into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="waveform"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the sample
            count.</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <remarks>
            	<see cref="M:NationalInstruments.WaveformScaleMode.GetScaledData``1(NationalInstruments.AnalogWaveform{``0})"/> calls
            <see cref="M:NationalInstruments.AnalogWaveform`1.GetRawData"/> to get the data to scale, and then calls
            <see cref="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])"/> to perform the transformation.
            <note type="note">
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </note>
            </remarks>
            <lastupdated>6/2/2006 11:32:47 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.TransformData(System.Double[])">
            <summary>
            Returns the transformed data.
            </summary>
            <param name="data">
            The raw, untransformed data.
            </param>
            <returns>
            The transformed data.
            </returns>
            <lastupdated>3/2/2006 2:37:27 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformScaleMode.CreateLinearMode(System.Double,System.Double)">
            <summary>
            Creates a <see cref="T:NationalInstruments.WaveformScaleMode"/> that scales data linearly.
            </summary>
            <param name="gain">
            The gain of the linear scale.
            </param>
            <param name="offset">
            The offset of the linear scale.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.WaveformScaleMode"/> that scales data linearly.
            </returns>
            <remarks>
            The scaled values are calculated by multiplying <paramref name="gain"/> by the value of the waveform sample and then adding the 
            <paramref name="offset"/>.
            </remarks>
            <lastupdated>3/2/2006 2:31:51 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformScaleMode.None">
            <summary>
            Gets a <see cref="T:NationalInstruments.WaveformScaleMode"/> that does not scale data.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.WaveformScaleMode"/> that does not scale data.
            </value>
            <lastupdated>3/2/2006 2:30:36 PM</lastupdated>
            <updatedby>Jennifer Smith</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.PrecisionDateTime">
            <summary>
            Represents an instance in time, typically expressed as a date and time of day.
            This type has higher precision than <see cref="T:System.DateTime"/>.
            </summary>
            <remarks>
            	<para>
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> value type represents
            dates and times with values starting at 12:00:00 midnight, January 1, 0001.
            The value of a <see cref="T:NationalInstruments.PrecisionDateTime"/> is the number of 
            whole seconds and fractional second ticks that represent the time since 12:00:00
            midnight, January 1, 0001.  <see cref="P:NationalInstruments.PrecisionDateTime.WholeSeconds"/>
            is a 64-bit number that represents the number of whole seconds 
            in the <see cref="T:NationalInstruments.PrecisionDateTime"/> without a fractional portion. 
            <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            is a 64-bit number that represents the number of 2^(-64) seconds 
            after the whole seconds. Each fractional second tick represents 0.05421010862427522170... 
            attoseconds. Use <see cref="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks"/>
            to convert <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/> to 
            its fractional seconds equivalent or use the <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSeconds"/>
            property. When using the <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSeconds"/>
            property or converting <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            to fractional seconds, some rounding errors may occur.
            	</para>
            	<para>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> object can be created from a
            <see cref="T:System.DateTime"/> object using <see cref="M:NationalInstruments.PrecisionDateTime.FromDateTime(System.DateTime)"/>
            and can be converted to a <see cref="T:System.DateTime"/> object using 
            <see cref="M:NationalInstruments.PrecisionDateTime.ToDateTime"/>. Some precision may be lost when converting a 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object to a <see cref="T:System.DateTime"/>
            object because a <see cref="T:System.DateTime"/> object is only accurate to the nearest
            100-nanosecond tick, while a <see cref="T:NationalInstruments.PrecisionDateTime"/> object is accurate
            to the nearest 2^(-64) second.
            </para>
            	<para>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> value can be expressed as a local time,
            a Coordinated Universal Time (UTC), or neither, specified by the 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property.  UTC time is the
            name for Greenwich Mean Time (GMT), which is measured at zero degrees longitude, the
            UTC origin point.  Local time is relative to a particular time zone.  A time zone is associated
            with a time zone offset, which is the displacement of the time zone measured in hours from
            the UTC origin point.  Local time is adjusted by daylight saving time if necessary, while UTC
            time is not.  For more information about UTC time and local time, see 
            <see cref="T:System.DateTime"/>.
            </para>
            	<para>
            The <see cref="T:NationalInstruments.PrecisionDateTime"/> and
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> value types differ in that a
            <see cref="T:NationalInstruments.PrecisionDateTime"/> represents an instance in time,
            whereas a <see cref="T:NationalInstruments.PrecisionTimeSpan"/> represents a time interval.
            This means, for example, that you can subtract one instance of 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> from another to obtain the time
            interval between them. Or you could add a positive
            <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to the current
            <see cref="T:NationalInstruments.PrecisionDateTime"/> to calculate a future date.
            </para>
            	<para>
            Use the <see cref="M:NationalInstruments.PrecisionDateTime.Parse(System.String)"/>, <see cref="M:NationalInstruments.PrecisionDateTime.TryParse(System.String,NationalInstruments.PrecisionDateTime@)"/>,
            and <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> methods for formatting time values.
            <see cref="T:NationalInstruments.PrecisionDateTime"/> calls these methods on a
            <see cref="T:System.DateTime"/> object, so some precision may be lost.
            </para>
            	<para>
            This type implements interfaces <see cref="T:System.Runtime.Serialization.ISerializable"/>,
            <see cref="T:System.IComparable"/>, <see cref="T:System.IComparable`1"/>,
            <see cref="T:System.IFormattable"/>, <see cref="T:System.IConvertible"/>, and
            <see cref="T:System.IEquatable`1"/>.
            </para>
            </remarks>
            <threadsafety safety="unsafe"/>
            <security condition="unmanagedcode"/>
            <lastupdated>10/4/2006 9:38:25 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks">
            <summary>
            Represents the number of seconds for each fractional second tick. This field is read-only.
            </summary>
            <remarks>
            	<para>
            The value of this constant is 2^(-64).
            Fractional seconds are stored as <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>.
            Use this field to convert between <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            and <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSeconds"/>.
            </para>
            </remarks>
            <lastupdated>10/4/2006 9:38:54 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Int64,System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            structure with the specified whole seconds and fractional second ticks.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 0001.
            This value cannot be less than zero.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed since midnight, January 1, 0001. This value cannot be
            less than zero.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="wholeSeconds"/> is less than zero.
            </para>
            </exception>
            <remarks>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            <see cref="F:System.DateTimeKind.Unspecified"/>.
            </para>
            </remarks>
            <lastupdated>10/4/2006 2:11:22 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Int64,System.UInt64,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            structure with the specified whole seconds and fractional second ticks, expressed as 
            either a local time, a UTC time, or neither.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 0001.
            This value cannot be less than zero.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed since midnight, January 1, 0001. This value cannot be
            less than zero.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="wholeSeconds"/> is less than zero.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <remarks>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            the value of the <paramref name="kind"/> parameter.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:56:58 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            structure with the specified whole seconds and fractional second ticks.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 0001.
            This value cannot be less than zero.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed since midnight, January 1, 0001. This value cannot be
            less than zero.
            </param>
            <remarks>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            <see cref="F:System.DateTimeKind.Unspecified"/>.
            </para>
            	<para>
            This constructor is provided for CLS compliance. However, the 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> constructor which
            takes the fractional second ticks as a <format type="bold">ulong</format>
            has higher precision.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="wholeSeconds"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            </exception>
            <lastupdated>10/4/2006 2:10:37 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Int64,System.Int64,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            structure with the specified whole seconds and fractional second ticks, expressed as 
            either a local time, a UTC time, or neither.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 0001.
            This value cannot be less than zero.
            </param>
            <param name="fractionalSecondTicks">
            The number of fractional second ticks (2^(-64) seconds) after the whole seconds
            that have elapsed since midnight, January 1, 0001. This value cannot be
            less than zero.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <remarks>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            the value of the <paramref name="kind"/> parameter.
            </para>
            	<para>
            This constructor is provided for CLS compliance. However, the 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> constructor which
            takes the fractional second ticks as a <format type="bold">ulong</format>
            has higher precision.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="wholeSeconds"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <lastupdated>10/4/2006 2:10:57 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            structure to the specified date and time represented by a
            <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="dateTime">
            A <see cref="T:System.DateTime"/> which represents the date and time information to
            initialize the <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <remarks>
            A <see cref="T:System.DateTime"/> stores timing information in 100-nanosecond ticks.
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> stores timing information
            in whole seconds and fractional second ticks (2^(-64) seconds).  The date and time
            represented by the <paramref name="dateTime"/> parameter is converted to whole 
            seconds and fractional second ticks in the new <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Therefore, some rounding errors may occur.
            </remarks>
            <lastupdated>10/4/2006 10:54:01 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            structure with the specified number of seconds.
            </summary>
            <param name="seconds">
            The number of seconds that have elapsed since midnight, January 1, 0001. This value 
            must be less than or equal to <see cref="F:System.Int64.MaxValue"/> and cannot be less
            than zero.
            </param>
            <remarks>
            	<para>
            The <paramref name="seconds"/> parameter represents whole and fractional seconds. Since
            <see cref="T:NationalInstruments.PrecisionDateTime"/> stores fractional seconds as
            fractional second ticks (2^(-64) seconds), some rounding may occur when initializing 
            the new <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            <see cref="F:System.DateTimeKind.Unspecified"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.PositiveInfinity"/> or
            <see cref="F:System.Double.NegativeInfinity"/>.
            </para>
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.NaN"/>.
            </para>
            	<para>
            		<paramref name="seconds"/> is greater than <see cref="F:System.Int64.MaxValue"/> or
            less than zero.
            </para>
            </exception>
            <lastupdated>10/4/2006 2:09:43 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.#ctor(System.Double,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            structure with the specified number of seconds expressed as either a local time,
            a UTC time, or neither.
            </summary>
            <param name="seconds">
            The number of seconds that have elapsed since midnight, January 1, 0001. This value 
            must be less than or equal to <see cref="F:System.Int64.MaxValue"/> and cannot be less
            than zero.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <remarks>
            	<para>
            The <paramref name="seconds"/> parameter represents whole and fractional seconds. Since
            <see cref="T:NationalInstruments.PrecisionDateTime"/> stores fractional seconds as
            fractional second ticks (2^(-64) seconds), some rounding may occur when initializing 
            the new <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </para>
            	<para>
            The <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is initialized to
            the value of the <paramref name="kind"/> parameter.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.PositiveInfinity"/> or
            <see cref="F:System.Double.NegativeInfinity"/>.
            </para>
            	<para>
            		<paramref name="seconds"/> is <see cref="F:System.Double.NaN"/>.
            </para>
            	<para>
            		<paramref name="seconds"/> is greater than <see cref="F:System.Int64.MaxValue"/> or
            less than zero.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <lastupdated>10/4/2006 2:08:23 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromLabViewTime(System.Int64,System.UInt64)">
            <summary>
            Converts the whole seconds and fractional second ticks of a LabVIEW time 
            to an equivalent local time.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds represented by the LabVIEW time.
            </param>
            <param name="fractionalSecondTicks">
            The number of 2^(-64) seconds after the whole seconds represented by the LabVIEW time.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that represents a local
            time that is equivalent to the date and time represented by the LabVIEW whole 
            seconds and fractional second ticks.
            </returns>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00 UTC. This
            method converts the <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            to a <see cref="T:NationalInstruments.PrecisionDateTime"/>, which represents the
            time that has elapsed since 01/01/0001 00:00:00.00 UTC.
            </para>
            	<para>
            The return value is a <see cref="T:NationalInstruments.PrecisionDateTime"/> whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property returns <see cref="F:System.DateTimeKind.Local"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:37:31 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromLabViewTime(System.Int64,System.UInt64,System.DateTimeKind)">
            <summary>
            Converts the whole seconds and fractional second ticks of a LabVIEW time 
            to an equivalent local time, UTC time, or neither.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <param name="fractionalSecondTicks">
            The number of 2^(-64) seconds after the whole seconds that have elapsed since midnight, January 1, 1904.
            This value cannot be less than zero.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that is
            equivalent to the date and time specified by <paramref name="wholeSeconds"/> and
            <paramref name="fractionalSecondTicks"/> and which is expressed as either a 
            local time, a UTC time, or neither.
            </returns>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00. This
            method converts the <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            to a <see cref="T:NationalInstruments.PrecisionDateTime"/>, which represents the
            time that has elapsed since 01/01/0001 00:00:00.00.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <lastupdated>10/4/2006 10:38:23 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromLabViewTime(System.Int64,System.Int64)">
            <summary>
            Converts the whole seconds and fractional second ticks of a LabVIEW time 
            to an equivalent local time.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <param name="fractionalSecondTicks">
            The number of 2^(-64) seconds after the whole seconds that have elapsed since midnight, January 1, 1904.
            This value cannot be less than zero.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that represents a local
            time that is equivalent to the date and time represented by the LabVIEW whole 
            seconds and fractional second ticks.
            </returns>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00. This
            method converts the <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            to a <see cref="T:NationalInstruments.PrecisionDateTime"/>, which represents the
            time that has elapsed since 01/01/0001 00:00:00.00.
            </para>
            	<para>
            The return value is a <see cref="T:NationalInstruments.PrecisionDateTime"/> whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property returns <see cref="F:System.DateTimeKind.Local"/>.
            </para>
            	<para>
            This method is provided for CLS compliance. The overload which takes a 
            <format type="bold">ulong</format>
            for the fractional second ticks provides more precision.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <lastupdated>10/4/2006 10:36:01 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromLabViewTime(System.Int64,System.Int64,System.DateTimeKind)">
            <summary>
            Converts the whole seconds and fractional second ticks of a LabVIEW time 
            to an equivalent local time, UTC time, or neither.
            </summary>
            <param name="wholeSeconds">
            The number of whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <param name="fractionalSecondTicks">
            The number of 2^(-64) seconds after the whole seconds that have elapsed since midnight, January 1, 1904.
            This value cannot be less than zero.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that is
            equivalent to the date and time specified by <paramref name="wholeSeconds"/> and
            <paramref name="fractionalSecondTicks"/> and which is expressed as either a 
            local time, a UTC time, or neither.
            </returns>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00. This
            method converts the <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            to a <see cref="T:NationalInstruments.PrecisionDateTime"/>, which represents the
            time that has elapsed since 01/01/0001 00:00:00.00.
            </para>
            	<para>
            This method is provided for CLS compliance. The overload which takes a 
            <format type="bold">ulong</format>
            for the fractional second ticks provides more precision.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="fractionalSecondTicks"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <lastupdated>10/4/2006 10:36:59 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromFileTime(System.Int64)">
            <summary>
            Converts the specified Windows file time to an equivalent local time.
            </summary>
            <param name="fileTime">
            A Windows file time expressed in ticks.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that represents a local
            time equivalent to the date and time represented by the <paramref name="fileTime"/>
            parameter.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="fileTime"/> represents a time less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater
            than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that
            have elapsed since 12:00 midnight, January 1, 1601 Coordinated Universal Time (UTC). 
            Windows uses a file time to record when an application creates, accesses, or writes to a file.
            </para>
            	<para>
            The <paramref name="fileTime"/> parameter specifies a file time expressed in 100-nanosecond
            ticks. This value is converted to whole seconds and fractional second ticks (2^(-64) seconds)
            in the resulting <see cref="T:NationalInstruments.PrecisionDateTime"/>;
            rounding errors may occur.
            </para>
            	<para>
            The return value is a <see cref="T:NationalInstruments.PrecisionDateTime"/> whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property returns <see cref="F:System.DateTimeKind.Local"/>.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:14:52 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromFileTime(System.Int64,System.DateTimeKind)">
            <summary>
            Converts the specified Windows file time to an equivalent local time, UTC time, 
            or neither.
            </summary>
            <param name="fileTime">
            A Windows file time expressed in ticks.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that is
            equivalent to the date and time specified by <paramref name="fileTime"/> and
            which is expressed as either a local time, a UTC time, or neither.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="fileTime"/> represents a time less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater
            than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <remarks>
            	<para>
            A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that
            have elapsed since 12:00 midnight, January 1, 1601, Coordinated Universal Time (UTC). 
            Windows uses a file time to record when an application creates, accesses, or writes to a file.
            </para>
            	<para>
            The <paramref name="fileTime"/> parameter specifies a file time expressed in 100-nanosecond
            ticks. This value is converted to whole seconds and fractional second ticks (2^(-64) seconds)
            in the resulting <see cref="T:NationalInstruments.PrecisionDateTime"/>;
            rounding errors may occur.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:35:23 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromCTime(System.Int64)">
            <summary>
            Converts the specified ANSI C time to an equivalent local time.
            </summary>
            <param name="seconds">
            The number of seconds that have elapsed since midnight, January 1, 1970.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that represents a local time specified
            by <paramref name="seconds"/>.
            </returns>
            <remarks>
            	<para>
            ANSI C library timing functions can return the time in terms of seconds since midnight, January 1, 1970.
            Use <see cref="M:NationalInstruments.PrecisionDateTime.FromCTime(System.Int64)"/> to convert this value
            to a <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </para>
            	<para>
            The return value is a <see cref="T:NationalInstruments.PrecisionDateTime"/> whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property returns <see cref="F:System.DateTimeKind.Local"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="seconds"/> represents a time less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:12:39 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromCTime(System.Int64,System.DateTimeKind)">
            <summary>
            Converts the specified ANSI C time to the equivalent local time,
            UTC time, or neither.
            </summary>
            <param name="seconds">
            The number of seconds that have elapsed since midnight, January 1, 1970.
            </param>
            <param name="kind">
            A <see cref="T:System.DateTimeKind"/> value which specifies whether the time is expressed
            as a local time, a UTC time, or neither.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that is
            equivalent to the date and time specified by <paramref name="seconds"/> and
            which is expressed as either a local time, a UTC time, or neither.
            </returns>
            <remarks>
            	<para>
            ANSI C library timing functions can return the time in terms of seconds since midnight, 
            January 1, 1970. Use <see cref="M:NationalInstruments.PrecisionDateTime.FromCTime(System.Int64)"/> 
            to convert this value to a <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="seconds"/> represents a time less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            	<paramref name="kind"/> is not a valid <see cref="T:System.DateTimeKind"/> value.
            </exception>
            <lastupdated>10/4/2006 10:13:24 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.FromDateTime(System.DateTime)">
            <summary>
            Returns a new <see cref="T:NationalInstruments.PrecisionDateTime"/> instance that
            represents the date and time specified by a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="dateTime">
            A <see cref="T:System.DateTime"/> which represents the date and time information to
            initialize the new <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that represents the
            date and time specified by <paramref name="dateTime"/>.
            </returns>
            <remarks>
            A <see cref="T:System.DateTime"/> stores timing information in 100-nanosecond ticks.
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> stores timing information
            in whole seconds and fractional second ticks (2^(-64) seconds).  The date and time
            represented by the <paramref name="dateTime"/> parameter is converted to whole 
            seconds and fractional second ticks in the new <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Therefore, some rounding errors may occur.
            </remarks>
            <lastupdated>10/4/2006 10:14:02 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToLabViewTime(System.Int64@,System.Int64@)">
            <summary>
            Converts the whole seconds and fractional second ticks of the <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            to an equivalent LabVIEW time.
            </summary>
            <param name="wholeSeconds">
            Upon return, contains the number of whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <param name="fractionalSecondTicks">
            Upon return, contains the number of 2^(-64) seconds after the whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00. This
            method converts the <see cref="T:NationalInstruments.PrecisionDateTime"/> which represents
            the time that has elapsed since 01/01/0001 00:00:00.00 to the
            <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            which represent a LabVIEW time.
            </para>
            	<para>
            This method is provided for CLS compliance. The overload which takes a 
            <format type="bold">ulong</format>
            for the fractional second ticks provides more precision.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            The resulting <paramref name="wholeSeconds"/> value is less than
            <see cref="F:System.Int64.MinValue"/> or greater than
            <see cref="F:System.Int64.MaxValue"/>.
            </para>
            </exception>
            <lastupdated>2/13/2008 4:19:06 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToLabViewTime(System.Int64@,System.UInt64@)">
            <summary>
            Converts the whole seconds and fractional second ticks of the <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            to an equivalent LabVIEW time.
            </summary>
            <param name="wholeSeconds">
            Upon return, contains the number of whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <param name="fractionalSecondTicks">
            Upon return, contains the number of 2^(-64) seconds after the whole seconds that have elapsed since midnight, January 1, 1904.
            </param>
            <remarks>
            	<para>
            A LabVIEW time represents the elapsed time since 01/01/1904 00:00:00.00. This
            method converts the <see cref="T:NationalInstruments.PrecisionDateTime"/> which represents
            the time that has elapsed since 01/01/0001 00:00:00.00 to the
            <paramref name="wholeSeconds"/> and <paramref name="fractionalSecondTicks"/>
            which represent a LabVIEW time.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            The resulting <paramref name="wholeSeconds"/> value is less than
            <see cref="F:System.Int64.MinValue"/> or greater than
            <see cref="F:System.Int64.MaxValue"/>.
            </para>
            </exception>
            <lastupdated>2/13/2008 4:19:15 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToFileTime">
            <summary>
            Converts the <see cref="T:NationalInstruments.PrecisionDateTime"/> to an equivalent local Windows file time.
            </summary>
            <returns>
            An <see cref="T:System.Int64"/> that represents a Windows file time expressed in ticks.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	The resulting number of ticks is less than
            <see cref="F:System.Int64.MinValue"/> or greater than
            <see cref="F:System.Int64.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that
            have elapsed since 12:00 midnight, January 1, 1601. 
            Windows uses a file time to record when an application creates, accesses, or writes to a file.
            </para>
            The return value represents a Windows file time expressed in 100-nanosecond
            ticks.
            <note type="note">
            Using <see cref="M:NationalInstruments.PrecisionDateTime.ToFileTime"/> can
            result in a loss of precision.
            </note>
            </remarks>
            <lastupdated>2/13/2008 4:18:57 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToCTime">
            <summary>
            Converts the <see cref="T:NationalInstruments.PrecisionDateTime"/> to an equivalent ANSI C time.
            </summary>
            <returns>
            An <see cref="T:System.Int64"/> that represents the number of seconds that have elapsed since midnight,
            January 1, 1970.
            </returns>
            <remarks>
            ANSI C library timing functions return the time in terms of seconds since midnight, January 1, 1970.
            Use <see cref="M:NationalInstruments.PrecisionDateTime.ToCTime"/> to convert this 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> to an equivalent ANSI C time.  
            <note type="note">
            Using 
            <see cref="M:NationalInstruments.PrecisionDateTime.ToCTime"/> can result in a loss of precision.
            </note>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	The resulting number of seconds is less than
            <see cref="F:System.Int64.MinValue"/> or greater than
            <see cref="F:System.Int64.MaxValue"/>.
            </exception>
            <lastupdated>2/13/2008 4:18:49 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToDateTime">
            <summary>
            Converts the current <see cref="T:NationalInstruments.PrecisionDateTime"/> to a
            <see cref="T:System.DateTime"/> object.
            </summary>
            <returns>
            A <see cref="T:System.DateTime"/> object which represents the date and time of 
            the current <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </returns>
            <remarks>
            	<para>
            Since the <see cref="T:NationalInstruments.PrecisionDateTime"/> structure has a higher
            precision than <see cref="T:System.DateTime"/>, some precision may be lost
            when performing this conversion.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:57:42 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToLocalTime">
            <summary>
            Converts the value of the current <see cref="T:NationalInstruments.PrecisionDateTime"/>
            object to local time.
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> object whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is
            <see cref="F:System.DateTimeKind.Local"/> and whose value is the local
            time equivalent to the value of the current
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object, or
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/> if the
            converted value is too large to be represented by a
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object, or
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> if the
            converted value is too small to be represented as a
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object.
            </returns>
            <remarks>
            	<para>
            The local time is equal to the UTC time plus the UTC offset. For more information
            about the UTC offset, see <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)"/>. The
            conversion also takes into account the daylight saving time rule that applies
            to the time represented by the current <see cref="T:NationalInstruments.PrecisionDateTime"/>
            object.
            </para>
            	<para>
            The value returned by the <see cref="M:NationalInstruments.PrecisionDateTime.ToLocalTime"/>
            method is determined by the <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/>
            property of the current <see cref="T:NationalInstruments.PrecisionDateTime"/> object.
            The following table describes the possible results.
            </para>
            	<list type="table">
            		<listheader>
            			<term>Kind</term>
            			<description>Results</description>
            		</listheader>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Utc"/>
            			</term>
            			<description>
            The current <see cref="T:NationalInstruments.PrecisionDateTime"/> object is
            converted to local time.
            </description>
            		</item>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Local"/>
            			</term>
            			<description>
            No conversion is performed.
            </description>
            		</item>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Unspecified"/>
            			</term>
            			<description>
            The current <see cref="T:NationalInstruments.PrecisionDateTime"/> object is assumed
            to be a UTC time, and the conversion is performed as if
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> were
            <see cref="F:System.DateTimeKind.Utc"/>.
            </description>
            		</item>
            	</list>
            	<para>
            The value returned by the conversion is a <see cref="T:NationalInstruments.PrecisionDateTime"/>
            whose <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property returns
            <see cref="F:System.DateTimeKind.Local"/>. Consequently, a valid result is returned
            even if <see cref="M:NationalInstruments.PrecisionDateTime.ToUniversalTime"/> is applied
            repeatedly to the same <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </para>
            	<para>
            This method always uses the local time zone when making calculations.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:19:08 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToUniversalTime">
            <summary>
            Converts the value of the current <see cref="T:NationalInstruments.PrecisionDateTime"/>
            object to Coordinated Universal Time (UTC).
            </summary>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> object whose 
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property is
            <see cref="F:System.DateTimeKind.Utc"/> and whose value is the UTC
            equivalent to the value of the current
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object, or
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/> if the
            converted value is too large to be represented by a
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object, or
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> if the
            converted value is too small to be represented as a
            <see cref="T:NationalInstruments.PrecisionDateTime"/> object.
            </returns>
            <remarks>
            	<para>
            The UTC time is equal to the local time minus the UTC offset. For more information
            about the UTC offset, see <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)"/>. The
            conversion also takes into account the daylight saving time rule that applies
            to the time represented by the current <see cref="T:NationalInstruments.PrecisionDateTime"/>
            object.
            </para>
            	<para>
            The value returned by the <see cref="M:NationalInstruments.PrecisionDateTime.ToLocalTime"/>
            method is determined by the <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/>
            property of the current <see cref="T:NationalInstruments.PrecisionDateTime"/> object.
            The following table describes the possible results.
            </para>
            	<list type="table">
            		<listheader>
            			<term>Kind</term>
            			<description>Results</description>
            		</listheader>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Utc"/>
            			</term>
            			<description>
            No conversion is performed.
            </description>
            		</item>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Local"/>
            			</term>
            			<description>
            The current <see cref="T:NationalInstruments.PrecisionDateTime"/> object is
            converted to UTC.
            </description>
            		</item>
            		<item>
            			<term>
            				<see cref="F:System.DateTimeKind.Unspecified"/>
            			</term>
            			<description>
            The current <see cref="T:NationalInstruments.PrecisionDateTime"/> object is assumed
            to be a local time, and the conversion is performed as if
            <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> were
            <see cref="F:System.DateTimeKind.Local"/>.
            </description>
            		</item>
            	</list>
            	<para>
            The value returned by the conversion is a <see cref="T:NationalInstruments.PrecisionDateTime"/>
            whose <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/> property always returns
            <see cref="F:System.DateTimeKind.Utc"/>. Consequently, a valid result is returned
            even if <see cref="M:NationalInstruments.PrecisionDateTime.ToLocalTime"/> is applied
            repeatedly to the same <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </para>
            	<para>
            This method always uses the local time zone when making calculations.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:19:31 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionDateTime.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:NationalInstruments.PrecisionDateTime"/>. This field is read-only.
            </summary>
            <lastupdated>10/4/2006 9:38:32 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.PrecisionDateTime.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:NationalInstruments.PrecisionDateTime"/>. This field is read-only.
            </summary>
            <lastupdated>10/4/2006 9:38:39 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Returns the number of days in the specified month and year.
            </summary>
            <param name="year">
            The year.
            </param>
            <param name="month">
            The month (a number ranging from 1 to 12).
            </param>
            <returns>
            The number of days in <paramref name="month"/> for the specified <paramref name="year"/>. For example, if
            <paramref name="month"/> equals 2 for February, the return value is 28 or 29 depending upon whether
            <paramref name="year"/> is a leap year.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para><paramref name="month"/> is less than 1 or greater than 12.</para>
            	<para>-or-</para>
            	<para><paramref name="year"/> is less than 1 or greater than 9999.</para>
            </exception>
            <lastupdated>10/4/2006 10:11:10 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddYears(System.Int32)">
            <summary>
            Adds the specified number of years  to the value of this instance.
            </summary>
            <param name="value">
            A number of years. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this instance and 
            the number of years represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:08:33 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddMonths(System.Int32)">
            <summary>
            Adds the specified number of months to the value of this instance.
            </summary>
            <param name="value">
            A number of months. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this instance and <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </para>
            	<para>-or-</para>
            	<para><paramref name="value"/> is less than -120,000 or greater than 120,000.</para>
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            </remarks>
            <lastupdated>10/4/2006 10:07:20 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddDays(System.Double)">
            <summary>
            Adds the specified number of days to the value of this instance.
            </summary>
            <param name="value">
            A number of whole and fractional days.  The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this
            instance and the number of days represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            	<para>
            The fractional part of <paramref name="value"/> is the fractional part of a day.
            For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds,
            and 0 milliseconds.
            </para>
            	<para>
            The <paramref name="value"/> parameter is rounded to the nearest fractional second tick.
            </para>
            </remarks>
            <lastupdated>10/4/2006 9:47:48 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddHours(System.Double)">
            <summary>
            Adds the specified number of hours to the value of this instance.
            </summary>
            <param name="value">
            A number of whole and fractional hours. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            	<para>
            The fractional part of <paramref name="value"/> is the fractional part of an hour.
            For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds,
            and 0 milliseconds.
            </para>
            	<para>
            The <paramref name="value"/> parameter is rounded to the nearest fractional second tick.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:13:24 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddMinutes(System.Double)">
            <summary>
            Adds the specified number of minutes to the value of this instance.
            </summary>
            <param name="value">
            A number of whole and fractional minutes. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            	<para>
            The fractional part of <paramref name="value"/> is the fractional part of a minute.
            For example, 4.5 is equivalent to 4 minutes, 30 seconds,
            and 0 milliseconds.
            </para>
            	<para>
            The <paramref name="value"/> parameter is rounded to the nearest fractional second tick.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:14:58 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddSeconds(System.Double)">
            <summary>
            Adds the specified number of seconds  to the value of this instance.
            </summary>
            <param name="value">
            A number of whole and fractional seconds. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by this instance 
            and the number of seconds represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            	<para>
            The fractional part of <paramref name="value"/> is the fractional part of a second.
            For example, 4.5 is equivalent to 4 seconds
            and 500 milliseconds.
            </para>
            	<para>
            The <paramref name="value"/> parameter is rounded to the nearest fractional second tick.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:18:42 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.AddMilliseconds(System.Double)">
            <summary>
            Adds the specified number of milliseconds to the value of this instance.
            </summary>
            <param name="value">
            A number of whole and fractional milliseconds. The <paramref name="value"/> parameter can be negative or positive.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time represented by
            this instance and the number of milliseconds represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            	<para>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </para>
            	<para>
            The fractional part of <paramref name="value"/> is the fractional part of a millisecond.
            For example, 4.5 is equivalent to 4 milliseconds and 500 microseconds.
            </para>
            	<para>
            The <paramref name="value"/> parameter is rounded to the nearest fractional second tick.
            </para>
            </remarks>
            <lastupdated>10/12/2006 12:14:33 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">
            An object to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="T:NationalInstruments.PrecisionDateTime"/>
            and equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:11:26 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Equals(NationalInstruments.PrecisionDateTime)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified <see cref="T:NationalInstruments.PrecisionDateTime"/>
            instance.
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the <paramref name="other"/> parameter equals the value of this instance; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            This method implements the <see cref="T:System.IEquatable`1"/> interface, and performs slightly better than the
            <see cref="M:NationalInstruments.PrecisionDateTime.Equals(System.Object)"/> overload which takes an object as a parameter because
            the <paramref name="other"/> parameter does not have to be converted to an object.
            </remarks>
            <lastupdated>10/4/2006 10:11:48 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Equals(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Returns a value indicating whether two instances of <see cref="T:NationalInstruments.PrecisionDateTime"/> are equal.
            </summary>
            <param name="t1">
            the first <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </param>
            <param name="t2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </param>
            <returns>
            	<see langword="true"/> if the two <see cref="T:NationalInstruments.PrecisionDateTime"/> values are equal; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:12:06 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.PrecisionDateTime"/> objects might have the same hash 
            code even though they represent different values.
            </remarks>
            <lastupdated>2/13/2008 4:19:24 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"/> for value type <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </summary>
            <returns>
            The enumerated constant, <see cref="F:System.TypeCode.DateTime"/>.
            </returns>
            <lastupdated>10/4/2006 10:42:01 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Add(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Adds the value of the specified <see cref="T:NationalInstruments.PrecisionTimeSpan"/> to the value of this instance.
            </summary>
            <param name="value">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that contains the interval to add.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the sum of the date and time 
            represented by this instance and the time interval represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than 
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            or greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <remarks>
            This method does not change the value of this <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            Instead, a new <see cref="T:NationalInstruments.PrecisionDateTime"/> is returned whose
            value is the result of this operation.
            </remarks>
            <lastupdated>10/4/2006 9:47:13 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Subtract(NationalInstruments.PrecisionDateTime)">
            <summary>
            Subtracts the specified date and time from this instance.
            </summary>
            <param name="value">
            An instance of <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> interval equal to the date and time
            represented by this instance minus the date and time represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The result is less than <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or
            greater than <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:57:08 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Subtract(NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Subtracts the specified duration from this instance.
            </summary>
            <param name="value">
            An instance of <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equal to the date and time
            represented by this instance minus the time interval represented by <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The result is less than <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or
            greater than <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:57:25 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_Addition(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Adds a specified time interval to a specified date and time, yielding a new date and time.
            </summary>
            <param name="precisionDateTime">
            A <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionTimeSpan">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> that is the sum of the values
            <paramref name="precisionDateTime"/> and <paramref name="precisionTimeSpan"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:43:31 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_Subtraction(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Subtracts a specified date and time from another specified date and time, yielding a time interval.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that is the time interval between
            <paramref name="precisionDateTime1"/> and <paramref name="precisionDateTime2"/>; that is, 
            <paramref name="precisionDateTime1"/> minus <paramref name="precisionDateTime2"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionTimeSpan"/> is less than 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MinValue"/> or greater than 
            <see cref="F:NationalInstruments.PrecisionTimeSpan.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:42:39 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_Subtraction(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionTimeSpan)">
            <summary>
            Subtracts a specified time interval from a specified date and time, yielding a new date and time.
            </summary>
            <param name="precisionDateTime">
            A <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionTimeSpan">
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the value of 
            <paramref name="precisionDateTime"/> minus the value of <paramref name="precisionTimeSpan"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The resulting <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/> or greater than
            <see cref="F:NationalInstruments.PrecisionDateTime.MaxValue"/>.
            </exception>
            <lastupdated>10/4/2006 10:43:13 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_Equality(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether two specified instances of <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            are equal.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> and <paramref name="precisionDateTime2"/>
            represent the same date and time; otherwise <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:44:08 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_GreaterThan(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether one specified <see cref="T:NationalInstruments.PrecisionDateTime"/> is greater than
            another specified <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> is greater than <paramref name="precisionDateTime2"/>;
            otherwise <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:44:17 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_GreaterThanOrEqual(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether one specified <see cref="T:NationalInstruments.PrecisionDateTime"/> is greater than
            or equal to another specified <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> is greater than or equal to <paramref name="precisionDateTime2"/>;
            otherwise <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:44:28 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_Inequality(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether two specified instances of <see cref="T:NationalInstruments.PrecisionDateTime"/> are not equal.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> and <paramref name="precisionDateTime2"/> do not represent the same
            date and time; otherwise, <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:42:25 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_LessThan(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether one specified <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            another specified <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> is less than 
            <paramref name="precisionDateTime2"/>; otherwise <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:43:43 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.op_LessThanOrEqual(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Determines whether one specified <see cref="T:NationalInstruments.PrecisionDateTime"/> is less than
            or equal to another specified <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="precisionDateTime1"/> is less than or equal to <paramref name="precisionDateTime2"/>;
            otherwise <see langword="false"/>.
            </returns>
            <lastupdated>10/4/2006 10:43:58 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Compare(NationalInstruments.PrecisionDateTime,NationalInstruments.PrecisionDateTime)">
            <summary>
            Compares two instances of <see cref="T:NationalInstruments.PrecisionDateTime"/> and returns
            an indication of their relative values.
            </summary>
            <param name="precisionDateTime1">
            The first <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <param name="precisionDateTime2">
            The second <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </param>
            <returns>
            A signed number indicating the relative values of <paramref name="precisionDateTime1"/> and <paramref name="precisionDateTime2"/>.
            <list type="table">
            		<listheader>
            			<term>Value Type</term>
            			<description>Condition</description>
            		</listheader>
            		<item>
            			<term>
            Less than zero
            </term>
            			<description>
            				<paramref name="precisionDateTime1"/> is less than <paramref name="precisionDateTime2"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Zero
            </term>
            			<description>
            				<paramref name="precisionDateTime1"/> equals <paramref name="precisionDateTime2"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Greater than zero
            </term>
            			<description>
            				<paramref name="precisionDateTime1"/> is greater than <paramref name="precisionDateTime2"/>.
            </description>
            		</item>
            	</list>
            </returns>
            <lastupdated>10/4/2006 10:09:26 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an indication of their relative values.
            </summary>
            <param name="obj">
            A boxed <see cref="T:NationalInstruments.PrecisionDateTime"/> object to compare, or <see langword="null"/>.
            </param>
            <returns>
            A signed number indicating the relative values of this instance and <paramref name="obj"/>.
            <list type="table">
            		<listheader>
            			<term>Value</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>
            Less than zero
            </term>
            			<description>
            This instance is less than <paramref name="obj"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Zero
            </term>
            			<description>
            This instance is equal to <paramref name="obj"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Greater than zero
            </term>
            			<description>
            This instance is greater than <paramref name="obj"/>, or <paramref name="obj"/> is <see langword="null"/>.
            </description>
            		</item>
            	</list>
            </returns>
            <remarks>
            Any instance of <see cref="T:NationalInstruments.PrecisionDateTime"/>, regardless of its value, is considered
            greater than <see langword="null"/>.
            </remarks>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj"/> is not a <see cref="T:NationalInstruments.PrecisionDateTime"/>.
            </exception>
            <lastupdated>10/4/2006 10:10:17 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.CompareTo(NationalInstruments.PrecisionDateTime)">
            <summary>
            Compares this instance to a specified <see cref="T:NationalInstruments.PrecisionDateTime"/> object and
            returns an indication of their relative values.
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> object to compare.
            </param>
            <returns>
            A signed number indicating the relative values of this instance and the <paramref name="other"/> parameter.
            <list type="table">
            		<listheader>
            			<term>Value</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>
            Less than zero
            </term>
            			<description>
            This instance is less than <paramref name="other"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Zero
            </term>
            			<description>
            This instance is equal to <paramref name="other"/>.
            </description>
            		</item>
            		<item>
            			<term>
            Greater than zero
            </term>
            			<description>
            This instance is greater than <paramref name="other"/>.
            </description>
            		</item>
            	</list>
            </returns>
            <remarks>
            This method implements the <see cref="T:System.IComparable"/> interface and performs slightly better than the 
            <see cref="M:NationalInstruments.PrecisionDateTime.CompareTo(System.Object)"/> overload which takes an object
            as a parameter because it does not have to convert the <paramref name="other"/> parameter to an object.
            </remarks>
            <lastupdated>10/4/2006 10:10:45 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetDateTimeFormats">
            <summary>
            Converts the value of this instance to all the string representations supported by the standard
            <see cref="T:System.DateTime"/> format specifiers.
            </summary>
            <returns>
            A string array where each element is the representation of the value of this instance formatted with one of the standard 
            <see cref="T:System.DateTime"/> formatting specifiers.
            </returns>
            <remarks>
            	<para>This method calls <see cref="M:System.DateTime.GetDateTimeFormats"/> to format the return value.</para>
            	<para>
            Each element of the return value is formatted using information from the current culture. For more information about culture-specific
            formatting information for the current culture, see <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            	<para>For more information about the standard formatting specifiers, see <see cref="T:System.Globalization.DateTimeFormatInfo"/>.</para>
            </remarks>
            <lastupdated>10/4/2006 10:39:04 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetDateTimeFormats(System.Char)">
            <summary>
            Converts the value of this instance to all the string representations supported by the specified
            standard <see cref="T:System.DateTime"/> format specifier.
            </summary>
            <param name="format">
            A unicode character containing a format specifier.
            </param>
            <returns>
            A string array where each element is the representation of the value of this instance formatted with the 
            <paramref name="format"/> standard <see cref="T:System.DateTime"/> formatting specifier.
            </returns>
            <remarks>
            	<para>This method calls <see cref="M:System.DateTime.GetDateTimeFormats"/> to format the return value.</para>
            	<para>
            Each element of the return value is formatted using information from the current culture. For more information about culture-specific
            formatting information for the current culture, see <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            	<para>For more information about the standard formatting specifiers, see <see cref="T:System.Globalization.DateTimeFormatInfo"/>.</para>
            </remarks>
            <lastupdated>10/4/2006 10:39:49 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetDateTimeFormats(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to all the string representations supported by the standard 
            <see cref="T:System.DateTime"/> format specifier and the specified culture-specific formatting
            information. 
            </summary>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.
            </param>
            <returns>
            A string array where each element is the representation of the value of this instance formatted with one of the
            standard <see cref="T:System.DateTime"/> formatting specifiers.
            </returns>
            <remarks>
            	<para>This method calls <see cref="M:System.DateTime.GetDateTimeFormats"/> to format the return value.</para>
            	<para>
            Each element of the return value is formatted using culture-specific information supplied by <paramref name="provider"/>.
            </para>
            	<para>For more information about the standard formatting specifiers, see <see cref="T:System.Globalization.DateTimeFormatInfo"/>.</para>
            </remarks>
            <lastupdated>10/4/2006 10:41:42 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to all the string representations supported by the standard 
            <see cref="T:System.DateTime"/> format specifier and culture-specific formatting
            information. 
            </summary>
            <param name="format">
            A Unicode character containing a format specifier.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.
            </param>
            <returns>
            A string array where each element is the representation of the value of this instance formatted with one of the
            standard <see cref="T:System.DateTime"/> formatting specifiers.
            </returns>
            <remarks>
            	<para>This method calls <see cref="M:System.DateTime.GetDateTimeFormats"/> to format the return value.</para>
            	<para>
            Each element of the return value is formatted using culture-specific information supplied by <paramref name="provider"/>.
            </para>
            	<para>For more information about the standard formatting specifiers, see <see cref="T:System.Globalization.DateTimeFormatInfo"/>.</para>
            </remarks>
            <lastupdated>10/4/2006 10:40:29 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Parse(System.String)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:NationalInstruments.PrecisionDateTime"/>
            equivalent.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time contained in 
            <paramref name="dateTime"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="dateTime"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.Parse(System.String)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The string <paramref name="dateTime"/> is parsed using the formatting information in a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object initialized for the
            current culture.
            </para>
            	<para>
            This method attempts to ignore unrecognized data and parse <paramref name="dateTime"/>
            completely. It ignores unrecognized data if possible and fills in missing
            month, day, and year information with the current time. If <paramref name="dateTime"/>
            contains only a date and no time, this method assumes the time is 12:00 midnight.
            Any leading, inner, or trailing white space character in <paramref name="dateTime"/>
            is ignored. The date and time can be bracketed with a pair of leading and trailing
            NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more
            NULL characters (U+0000).
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter must contain the representation of a date and time
            in one of the formats described in the <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            class.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.Parse(System.String)"/>
            <lastupdated>10/4/2006 10:45:26 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date and time to its 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using the specified
            culture-specific format information.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific format information about <paramref name="dateTime"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time contained in
            <paramref name="dateTime"/> as specified by <paramref name="provider"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="dateTime"/> does not contain a valid string representation of a date and time.
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.Parse(System.String)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The string <paramref name="dateTime"/> is parsed using the formatting information in a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object supplied by the
            <paramref name="provider"/> parameter.
            </para>
            	<para>
            This method attempts to ignore unrecognized data and parse <paramref name="dateTime"/>
            completely. It ignores unrecognized data if possible and fills in missing
            month, day, and year information with the current time. If <paramref name="dateTime"/>
            contains only a date and no time, this method assumes the time is 12:00 midnight.
            Any leading, inner, or trailing white space character in <paramref name="dateTime"/>
            is ignored. The date and time can be bracketed with a pair of leading and trailing
            NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more
            NULL characters (U+0000).
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter must contain the representation of a date and
            time in one of the formats described in the <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            topic.
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time
            formatting information. For example, it might supply the names of the days of the
            week in a particular language, or the preferred order of presentation for the month,
            day, and year. If <paramref name="provider"/> is <see langword="null"/>, the
            current culture is used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.Parse(System.String)"/>
            <lastupdated>10/4/2006 10:47:03 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using the specified
            culture-specific format information and formatting style.
            </summary>
            <param name="dateTime">
            A string containing and date and time to convert.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information
            about <paramref name="dateTime"/>.
            </param>
            <param name="styles">
            A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles"/> values that indicates the
            permitted format of <paramref name="dateTime"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time contained in 
            <paramref name="dateTime"/> as specified by <paramref name="provider"/> and <paramref name="styles"/>.
            </returns>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.Parse(System.String)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The string <paramref name="dateTime"/> is parsed using the formatting information in a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object supplied by the
            <paramref name="provider"/> parameter.
            </para>
            	<para>
            This method attempts to ignore unrecognized data and parse <paramref name="dateTime"/>
            completely. It ignores unrecognized data if possible and fills in missing
            month, day, and year information with the current time. If <paramref name="dateTime"/>
            contains only a date and no time, this method assumes the time is 12:00 midnight.
            Any leading, inner, or trailing white space character in <paramref name="dateTime"/>
            is ignored. The date and time can be bracketed with a pair of leading and trailing
            NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more
            NULL characters (U+0000).
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter must contain the representation of a date and
            time in one of the formats described in the <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            topic.
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time
            formatting information. For example, it might supply the names of the days of the
            week in a particular language, or the preferred order of presentation for the month,
            day, and year. If <paramref name="provider"/> is <see langword="null"/>, the
            current culture is used.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<paramref name="dateTime"/> does not contain a valid string representation of a date and time.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="styles"/> contains an invalid combination of
            <see cref="T:System.Globalization.DateTimeStyles"/> values. For example, both
            <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/> and
            <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>.
            </exception>
            <seealso cref="M:System.DateTime.Parse(System.String)"/>
            <lastupdated>10/4/2006 10:48:35 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using the specified format
            and culture-specific format information. The format of the string representation must
            match the specified format exactly.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="format">
            The expected format of <paramref name="dateTime"/>.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific format
            information about <paramref name="dateTime"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time
            contained in <paramref name="dateTime"/> as specified by <paramref name="format"/> and
            <paramref name="provider"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> or <paramref name="format"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<para><paramref name="dateTime"/> or <paramref name="format"/> is an empty string.</para>
            	<para>-or</para>
            	<para><paramref name="dateTime"/> does not contain a date and time that corresponds to the
            pattern specified in <paramref name="format"/>.</para>
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter contains the date and time to parse. If the
            <paramref name="dateTime"/> parameter contains only a time and no date, the current date is used.
            If the <paramref name="dateTime"/> parameter contains only a date and no time, midnight
            (00:00:00) is used. The <paramref name="dateTime"/> parameter cannot contain leading, inner, or 
            trailing white space characters.
            </para>
            	<para>
            The <paramref name="format"/> parameter contains a pattern that corresponds to the expected
            format of the <paramref name="dateTime"/> parameter. The pattern in the <paramref name="format"/>
            parameter consists of one or more custom format specifiers from the
            <see keyword="98b374e3-0cc2-4c78-ab44-efb671d7198" keywordType="msdn">Custom DateTime Format Strings</see>
            table, or a single standard format specifier, which identifies a predefined pattern, 
            from the <see keyword="bb79761a-ca08-44ee-b142-b06b3e2fc22b" keywordType="msdn">Standard DateTime Format Strings</see>
            table.
            </para>
            	<para>
            If you do not use date or time separators in a custom format pattern, use the invariant
            culture for the <paramref name="provider"/> parameter and the widest form or each
            custom format specifier. For example, if you want to specify hours in the pattern, specify
            the wider form, "HH", instead of the narrower form, "H".
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time formatting
            information, such as the names of the days of the week in a particular language, or
            the preferred presentation order of the month, day, and year. The <paramref name="format"/>
            parameter is typically a culture represented by a <see cref="T:System.Globalization.CultureInfo"/>
            object. If <paramref name="provider"/> is <see langword="null"/>, the current culture is
            used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/>
            <lastupdated>10/4/2006 2:07:45 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:NationalInstruments.PrecisionDateTime"/>
            equivalent using the specified format, culture-specific format information, and style. The format
            of the string representation must match the specified format exactly.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="format">
            The expected format of <paramref name="dateTime"/>.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="dateTime"/>.
            </param>
            <param name="style">
            A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles"/> values that indicates the permitted
            format of <paramref name="dateTime"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time contained in
            <paramref name="dateTime"/> as specified by <paramref name="format"/>, <paramref name="provider"/>,
            and <paramref name="style"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> or <paramref name="format"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<para><paramref name="dateTime"/> or <paramref name="format"/> is an empty string.</para>
            	<para>-or</para>
            	<para><paramref name="dateTime"/> does not contain a date and time that corresponds to the pattern
            specified in <paramref name="format"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="style"/> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles"/>
            values. For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/> and
            <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>.
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter contains the date and time to parse. If the
            <paramref name="dateTime"/> parameter contains only a time and no date, the current date is used.
            If the <paramref name="dateTime"/> parameter contains only a date and no time, midnight
            (00:00:00) is used. The <paramref name="dateTime"/> parameter cannot contain leading, inner, or 
            trailing white space characters.
            </para>
            	<para>
            The <paramref name="format"/> parameter contains a pattern that corresponds to the expected
            format of the <paramref name="dateTime"/> parameter. The pattern in the <paramref name="format"/>
            parameter consists of one or more custom format specifiers from the
            <see keyword="98b374e3-0cc2-4c78-ab44-efb671d7198" keywordType="msdn">Custom DateTime Format Strings</see>
            table, or a single standard format specifier, which identifies a predefined pattern, 
            from the <see keyword="bb79761a-ca08-44ee-b142-b06b3e2fc22b" keywordType="msdn">Standard DateTime Format Strings</see>
            table.
            </para>
            	<para>
            If you do not use date or time separators in a custom format pattern, use the invariant
            culture for the <paramref name="provider"/> parameter and the widest form or each
            custom format specifier. For example, if you want to specify hours in the pattern, specify
            the wider form, "HH", instead of the narrower form, "H".
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time formatting
            information, such as the names of the days of the week in a particular language, or
            the preferred presentation order of the month, day, and year. The <paramref name="format"/>
            parameter is typically a culture represented by a <see cref="T:System.Globalization.CultureInfo"/>
            object. If <paramref name="provider"/> is <see langword="null"/>, the current culture is
            used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/>
            <lastupdated>10/4/2006 10:52:54 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date and time to its <see cref="T:NationalInstruments.PrecisionDateTime"/>
            equivalent using the specified array of formats, culture-specific format information, and style. The format
            of the string representation must match at least one of the specified formats exactly.
            </summary>
            <param name="dateTime">
            A string containing one or more dates and times to convert.
            </param>
            <param name="formats">
            An array of expected formats of <paramref name="dateTime"/>.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="dateTime"/>.
            </param>
            <param name="style">
            A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles"/> values that indicates the permitted
            format of <paramref name="dateTime"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None"/>.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent to the date and time contained in
            <paramref name="dateTime"/> as specified by <paramref name="formats"/>, <paramref name="provider"/>,
            and <paramref name="style"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="dateTime"/> or <paramref name="formats"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
            	<para><paramref name="dateTime"/> is an empty string.</para>
            	<para>-or</para>
            	<para>an element of <paramref name="formats"/> is an empty string.</para>
            	<para>-or</para>
            	<para><paramref name="dateTime"/> does not contain a date and time that corresponds to any element of
            specified in <paramref name="formats"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="style"/> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles"/>
            values. For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/> and
            <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>.
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter contains the date and time to parse. If the
            <paramref name="dateTime"/> parameter contains only a time and no date, the current date is used.
            If the <paramref name="dateTime"/> parameter contains only a date and no time, midnight
            (00:00:00) is used. The <paramref name="dateTime"/> parameter cannot contain leading, inner, or 
            trailing white space characters.
            </para>
            	<para>
            The <paramref name="formats"/> parameter contains an array of patterns that correspond to the expected
            format of the <paramref name="dateTime"/> parameter. The patterns in the <paramref name="formats"/>
            parameter consist of one or more custom format specifiers from the
            <see keyword="98b374e3-0cc2-4c78-ab44-efb671d7198" keywordType="msdn">Custom DateTime Format Strings</see>
            table, or a single standard format specifier, which identifies a predefined pattern, 
            from the <see keyword="bb79761a-ca08-44ee-b142-b06b3e2fc22b" keywordType="msdn">Standard DateTime Format Strings</see>
            table.
            </para>
            	<para>
            If you do not use date or time separators in a custom format pattern, use the invariant
            culture for the <paramref name="provider"/> parameter and the widest form or each
            custom format specifier. For example, if you want to specify hours in the pattern, specify
            the wider form, "HH", instead of the narrower form, "H".
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time formatting
            information, such as the names of the days of the week in a particular language, or
            the preferred presentation order of the month, day, and year. The <paramref name="formats"/>
            parameter is typically a culture represented by a <see cref="T:System.Globalization.CultureInfo"/>
            object. If <paramref name="provider"/> is <see langword="null"/>, the current culture is
            used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/>
            <lastupdated>10/4/2006 10:53:40 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.TryParse(System.String,NationalInstruments.PrecisionDateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="result">
            When this method returns, contains the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            value equivalent to the date and time contained in <paramref name="dateTime"/>, if the
            conversion succeeded, or <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            if the conversion failed. The conversion fails if the <paramref name="dateTime"/> parameter
            is <see langword="null"/>, or does not contain a valid string representation of a
            date and time. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <paramref name="dateTime"/> parameter was converted
            successfully; otherwise <see langword="false"/>.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/> to format the value. Some
            precision may be lost.
            	</para>
            	<para>
            The <see cref="M:NationalInstruments.PrecisionDateTime.TryParse(System.String,NationalInstruments.PrecisionDateTime@)"/> method is similar to
            the <see cref="M:NationalInstruments.PrecisionDateTime.Parse(System.String)"/> method, except that this
            method does not throw an exception if the conversion fails.
            </para>
            	<para>
            The string <paramref name="dateTime"/> is parsed using the formatting information in a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object initialized for the
            current culture.
            </para>
            	<para>
            This method attempts to ignore unrecognized data and parse <paramref name="dateTime"/>
            completely. It ignores unrecognized data if possible and fills in missing
            month, day, and year information with the current time. If <paramref name="dateTime"/>
            contains only a date and no time, this method assumes the time is 12:00 midnight.
            Any leading, inner, or trailing white space character in <paramref name="dateTime"/>
            is ignored. The date and time can be bracketed with a pair of leading and trailing
            NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more
            NULL characters (U+0000).
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter must contain the representation of a date and time
            in one of the formats described in the <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            class.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/>
            <lastupdated>10/4/2006 11:23:42 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,NationalInstruments.PrecisionDateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using
            the specified culture-specific format information and formatting style.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> object that supplies culture-specific formatting
            information about <paramref name="dateTime"/>.
            </param>
            <param name="styles">
            A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles"/> values that
            indicates the permitted format of <paramref name="dateTime"/>. A typical value to specify is
            <see cref="F:System.Globalization.DateTimeStyles.None"/>.
            </param>
            <param name="result">
            When this method returns, it contains the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            value equivalent to the date and time contained in <paramref name="dateTime"/>, if the
            conversion succeeded, or <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            if the conversion failed. The conversion fails if the <paramref name="dateTime"/> parameter
            is <see langword="null"/>, or does not contain a valid string representation of a
            date and time. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if the <paramref name="dateTime"/> parameter was converted
            successfully; otherwise <see langword="false"/>.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/> to format the value. Some
            precision may be lost.
            	</para>
            	<para>
            The <see cref="M:NationalInstruments.PrecisionDateTime.TryParse(System.String,NationalInstruments.PrecisionDateTime@)"/> method is similar to
            the <see cref="M:NationalInstruments.PrecisionDateTime.Parse(System.String)"/> method, except that this
            method does not throw an exception if the conversion fails.
            </para>
            	<para>
            The string <paramref name="dateTime"/> is parsed using the formatting information in a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object supplied by the
            <paramref name="provider"/> parameter.
            </para>
            	<para>
            This method attempts to ignore unrecognized data and parse <paramref name="dateTime"/>
            completely. It ignores unrecognized data if possible and fills in missing
            month, day, and year information with the current time. If <paramref name="dateTime"/>
            contains only a date and no time, this method assumes the time is 12:00 midnight.
            Any leading, inner, or trailing white space character in <paramref name="dateTime"/>
            is ignored. The date and time can be bracketed with a pair of leading and trailing
            NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more
            NULL characters (U+0000).
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time
            formatting information. For example, it might supply the names of the days of the
            week in a particular language, or the preferred order of presentation for the month,
            day, and year. If <paramref name="provider"/> is <see langword="null"/>, the
            current culture is used.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="styles"/> is not a valid <see cref="T:System.Globalization.DateTimeStyles"/>
            value.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="styles"/> contains an invalid combination of 
            <see cref="T:System.Globalization.DateTimeStyles"/> values (for example, both
            <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/> and
            <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>.
            </para>
            </exception>
            <seealso cref="M:System.DateTime.TryParse(System.String,System.DateTime@)"/>
            <lastupdated>10/4/2006 11:21:34 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,NationalInstruments.PrecisionDateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using the
            specified format, culture-specific format information, and style. The
            format of the string representation must match the specified format exactly.
            </summary>
            <param name="dateTime">
            A string containing a date and time to convert.
            </param>
            <param name="format">
            The expected format of <paramref name="dateTime"/>.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> object that supplies culture-specific 
            formatting information about <paramref name="dateTime"/>.
            </param>
            <param name="styles">
            A bitwise combination of one or more <see cref="T:System.Globalization.DateTimeStyles"/>
            values that indicate the permitted format of <paramref name="dateTime"/>.
            </param>
            <param name="result">
            When this method returns, contains the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            value equivalent to the date and time contained in <paramref name="dateTime"/>, if the
            conversion succeeded, or <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            if the conversion failed. The conversion fails if either the <paramref name="dateTime"/> or
            <paramref name="format"/> parameter is <see langword="null"/>, is an empty string,
            or does not contain a date and time that correspond to the pattern specified in
            <paramref name="format"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="dateTime"/> was converted successfully;
            otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="styles"/> is not a valid <see cref="T:System.Globalization.DateTimeStyles"/>
            value.
            	</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="styles"/> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles"/>
            values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/>
            and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>).
            </para>
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The <see cref="M:NationalInstruments.PrecisionDateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,NationalInstruments.PrecisionDateTime@)"/> method is like
            the <see cref="M:NationalInstruments.PrecisionDateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/> method, except this
            method does not throw an exception if the conversion fails.
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter contains the date and time to parse. If the
            <paramref name="dateTime"/> parameter contains only a time and no date, the <paramref name="styles"/>
            parameter determines whether the current date or a default date is used. If the 
            <paramref name="dateTime"/> parameter contains only a date and no time, midnight
            (00:00:00) is used. The <paramref name="styles"/> parameter also determines whether the
            <paramref name="dateTime"/> parameter can contain leading, inner, or 
            trailing white space characters.
            </para>
            	<para>
            The <paramref name="format"/> parameter contains a pattern that corresponds to the expected
            format of the <paramref name="dateTime"/> parameter. The pattern in the <paramref name="format"/>
            parameter consists of one or more custom format specifiers from the
            <see keyword="98b374e3-0cc2-4c78-ab44-efb671d7198" keywordType="msdn">Custom DateTime Format Strings</see>
            table, or a single standard format specifier, which identifies a predefined pattern, 
            from the <see keyword="bb79761a-ca08-44ee-b142-b06b3e2fc22b" keywordType="msdn">Standard DateTime Format Strings</see>
            table.
            </para>
            	<para>
            If you do not use date or time separators in a custom format pattern, use the invariant
            culture for the <paramref name="provider"/> parameter and the widest form or each
            custom format specifier. For example, if you want to specify hours in the pattern, specify
            the wider form, "HH", instead of the narrower form, "H".
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time formatting
            information, such as the names of the days of the week in a particular language, or
            the preferred presentation order of the month, day, and year. The <paramref name="format"/>
            parameter is typically a culture represented by a <see cref="T:System.Globalization.CultureInfo"/>
            object. If <paramref name="provider"/> is <see langword="null"/>, the current culture is
            used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)"/>
            <lastupdated>10/4/2006 11:27:21 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,NationalInstruments.PrecisionDateTime@)">
            <summary>
            Converts the specified string representation of a date and time to its
            <see cref="T:NationalInstruments.PrecisionDateTime"/> equivalent using the
            specified array of formats, culture-specific format information, and style. The
            format of the string representation must match at least one of the specified 
            formats exactly.
            </summary>
            <param name="dateTime">
            A string containing one or more dates and times to convert.
            </param>
            <param name="formats">
            An array of expected formats of <paramref name="dateTime"/>.
            </param>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> object that supplies culture-specific 
            formatting information about <paramref name="dateTime"/>.
            </param>
            <param name="styles">
            A bitwise combination of one or more <see cref="T:System.Globalization.DateTimeStyles"/>
            values that indicates the permitted format of <paramref name="dateTime"/>.
            </param>
            <param name="result">
            When this method returns, contains the <see cref="T:NationalInstruments.PrecisionDateTime"/>
            value equivalent to the date and time contained in <paramref name="dateTime"/>, if the
            conversion succeeded, or <see cref="F:NationalInstruments.PrecisionDateTime.MinValue"/>
            if the conversion failed. The conversion fails if <paramref name="dateTime"/> or
            <paramref name="formats"/> is <see langword="null"/>, <paramref name="dateTime"/> or
            an element of <paramref name="formats"/> is an empty string, or the format of
            <paramref name="dateTime"/> is not exactly as specified by at least one of the format
            patterns in <paramref name="formats"/>. This parameter is passed uninitialized.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="dateTime"/> was converted successfully;
            otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="styles"/> is not a valid <see cref="T:System.Globalization.DateTimeStyles"/>
            value.
            	</para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="styles"/> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles"/>
            values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal"/>
            and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal"/>).
            </para>
            </exception>
            <remarks>
            	<para>
            		This method calls <see cref="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)"/> to parse
            <paramref name="dateTime"/> and obtain the resulting date and time. Some precision may be lost.
            </para>
            	<para>
            The <see cref="M:NationalInstruments.PrecisionDateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,NationalInstruments.PrecisionDateTime@)"/> method is like
            the <see cref="M:NationalInstruments.PrecisionDateTime.ParseExact(System.String,System.String,System.IFormatProvider)"/> method, except this
            method does not throw an exception if the conversion fails.
            </para>
            	<para>
            The <paramref name="dateTime"/> parameter contains the date and time to parse. If the
            <paramref name="dateTime"/> parameter contains only a time and no date, the <paramref name="styles"/>
            parameter determines whether the current date or a default date is used. If the 
            <paramref name="dateTime"/> parameter contains only a date and no time, midnight
            (00:00:00) is used. The <paramref name="styles"/> parameter also determines whether the
            <paramref name="dateTime"/> parameter can contain leading, inner, or 
            trailing white space characters.
            </para>
            	<para>
            The <paramref name="formats"/> parameter contains an array of patterns that correspond to the expected
            format of the <paramref name="dateTime"/> parameter. The patterns in the <paramref name="formats"/>
            parameter consist of one or more custom format specifiers from the
            <see keyword="98b374e3-0cc2-4c78-ab44-efb671d7198" keywordType="msdn">Custom DateTime Format Strings</see>
            table, or a single standard format specifier, which identifies a predefined pattern, 
            from the <see keyword="bb79761a-ca08-44ee-b142-b06b3e2fc22b" keywordType="msdn">Standard DateTime Format Strings</see>
            table.
            </para>
            	<para>
            If you do not use date or time separators in a custom format pattern, use the invariant
            culture for the <paramref name="provider"/> parameter and the widest form or each
            custom format specifier. For example, if you want to specify hours in the pattern, specify
            the wider form, "HH", instead of the narrower form, "H".
            </para>
            	<para>
            The <paramref name="provider"/> parameter supplies culture-specific date and time formatting
            information, such as the names of the days of the week in a particular language, or
            the preferred presentation order of the month, day, and year. The <paramref name="format"/>
            parameter is typically a culture represented by a <see cref="T:System.Globalization.CultureInfo"/>
            object. If <paramref name="provider"/> is <see langword="null"/>, the current culture is
            used.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)"/>
            <lastupdated>10/4/2006 12:56:08 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToLongDateString">
            <summary>
            Converts the value of this instance to its equivalent long date string representation.
            </summary>
            <returns>
            A string containing the name of the day of the week, the name of the month, the numeric
            day of the month, and the year equivalent to the date value of this instance.
            </returns>
            <remarks>
            	<para>
            		This method calls 
            <see cref="M:System.DateTime.ToLongDateString"/> to format the return value. Some precision
            may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the long date format character, 'D'. The return value 
            is identical to the value returned by <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("D", null).
            </para>
            	<para>
            For more information about format characters, format patterns, and the output they produce, see the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            For more information about changing the format pattern associated with a format character see the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> class.
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information about the 
            current culture, see the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> class. You can use 
            the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"/> property to obtain the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> for the current culture.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToLongDateString"/>
            <lastupdated>10/4/2006 10:59:26 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToLongTimeString">
            <summary>
            Converts the value of this instance to its equivalent long time  string representation.
            </summary>
            <returns>
            A string containing the hours, minutes, and seconds equivalent to the time value
            of this instance.
            </returns>
            <remarks>
            	<para>
            		This method calls 
            <see cref="M:System.DateTime.ToLongTimeString"/> to format the return value. Some precision
            may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the long time format character, 'T'. The return value 
            is identical to the value returned by <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("T", null).
            </para>
            	<para>
            For more information about format characters, format patterns, and the output they produce, see the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            For more information about changing the format pattern associated with a format character see the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> class.
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information about the 
            current culture, see the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> class. You can use 
            the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"/> property to obtain the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> for the current culture.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToLongTimeString"/>
            <lastupdated>10/4/2006 11:00:10 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToShortDateString">
            <summary>
            Converts the value of this instance to its equivalent short date string representation.
            </summary>
            <returns>
            A string containing the numeric month, the numeric day of the month, and the year
            equivalent to the date value of this instance.
            </returns>
            <remarks>
            	<para>
            		This method calls 
            <see cref="M:System.DateTime.ToShortDateString"/> to format the return value. Some precision
            may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the short date format character, 'd'. The return value 
            is identical to the value returned by <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("d", null).
            </para>
            	<para>
            For more information about format characters, format patterns, and the output they produce, see the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            For more information about changing the format pattern associated with a format character see the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> class.
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information about the 
            current culture, see the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> class. You can use 
            the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"/> property to obtain the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> for the current culture.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToShortDateString"/>
            <lastupdated>10/4/2006 11:00:56 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToShortTimeString">
            <summary>
            Converts the value of this instance to its equivalent short time  string representation.
            </summary>
            <returns>
            A string containing the hours, minutes, and seconds equivalent to the time value
            of this instance.
            </returns>
            <remarks>
            	<para>
            		This method calls 
            <see cref="M:System.DateTime.ToShortTimeString"/> to format the return value. Some precision
            may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the long time format character, 't'. The return value 
            is identical to the value returned by <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("t", null).
            </para>
            	<para>
            For more information about format characters, format patterns, and the output they produce, see the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            For more information about changing the format pattern associated with a format character see the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> class.
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information about the 
            current culture, see the <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> class. You can use 
            the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"/> property to obtain the 
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> for the current culture.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToShortTimeString"/>
            <lastupdated>10/4/2006 11:01:33 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>
            A string representation of the value of this instance.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.ToString"/> to format the return value. Some precision may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the general format specifier, 'G', as described in the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            The return value is identical to the value returned by 
            <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("G", null).
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information, see
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToString"/>
            <lastupdated>10/4/2006 11:02:03 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="provider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            A string representation of the value of this instance as specified by <paramref name="provider"/>.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.ToString"/> to format the return value. Some precision may be lost.
            </para>
            	<para>
            The value of this instance is formatted using the general format specifier, 'G', as described in the 
            <see keyword="0D1364DA-5B30-4D42-8E6B-03378343343F" keywordType="msdn">Formatting Overview</see> topic.
            The return value is identical to the value returned by 
            <see cref="M:NationalInstruments.PrecisionDateTime.ToString"/> ("G", null).
            </para>
            	<para>
            The <paramref name="provider"/> parameter is typically a <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            object or an instance of <see cref="T:System.Globalization.CultureInfo"/>, which contains a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object. If <paramref name="provider"/>
            is <see langword="null"/>, the <see cref="T:System.Globalization.DateTimeFormatInfo"/> associated
            with the current culture is used. For more information, see
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            </remarks>
            <seealso cref="M:System.DateTime.ToString"/>
            <lastupdated>10/4/2006 11:17:21 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToString(System.String)">
            <summary>
            Converts the value of this instance to its equivalent string representation
            using the specified format.
            </summary>
            <param name="format">
            A format string.
            </param>
            <returns>
            A string representation of the value of this instance as specified by <paramref name="format"/>.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.ToString"/> to format the return value. Some precision may be lost.
            </para>
            	<para>
            The <paramref name="format"/> parameter should contain either a format specifier character or
            a custom format pattern. For more information, see the summary page for
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>.
            </para>
            	<para>
            If <paramref name="format"/> is <see langword="null"/> or an empty string, the general format
            specifier, 'G' is used.
            </para>
            	<para>
            This method uses formatting information derived from the current culture. For more information, see
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            </remarks>
            <exception cref="T:System.FormatException">
            	<para>
            The length of <paramref name="format"/> is 1, and it is not one of the format specifier characters
            defined for <see cref="T:System.Globalization.DateTimeFormatInfo"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="format"/> does not contain a valid custom format pattern.
            </para>
            </exception>
            <seealso cref="M:System.DateTime.ToString"/>
            <lastupdated>10/4/2006 11:18:00 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to its equivalent string representation
            using the specified format and culture-specific format information.
            </summary>
            <param name="format">
            A format string.
            </param>
            <param name="formatProvider">
            An <see cref="T:System.IFormatProvider"/> that supplies culture-specific formatting information.
            </param>
            <returns>
            A string representation of the value of this instance as specified by <paramref name="format"/>
            and <paramref name="formatProvider"/>.
            </returns>
            <remarks>
            	<para>
            This method calls <see cref="M:System.DateTime.ToString"/> to format the return value. Some precision may be lost.
            </para>
            	<para>
            The <paramref name="format"/> parameter should contain either a format specifier character or
            a custom format pattern. For more information, see the summary page for
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>.
            </para>
            	<para>
            If <paramref name="format"/> is <see langword="null"/> or an empty string, the general format
            specifier, 'G' is used.
            </para>
            	<para>
            The <paramref name="formatProvider"/> parameter is typically a <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            object or an instance of <see cref="T:System.Globalization.CultureInfo"/>, which contains a
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> object. If <paramref name="formatProvider"/>
            is <see langword="null"/>, the <see cref="T:System.Globalization.DateTimeFormatInfo"/> associated
            with the current culture is used. For more information, see
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </para>
            </remarks>
            <exception cref="T:System.FormatException">
            	<para>
            The length of <paramref name="format"/> is 1, and it is not one of the format specifier characters
            defined for <see cref="T:System.Globalization.DateTimeFormatInfo"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="format"/> does not contain a valid custom format pattern.
            </para>
            </exception>
            <seealso cref="M:System.DateTime.ToString"/>
            <lastupdated>10/4/2006 11:18:52 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:22 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToByte(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:48 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToChar(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:49 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:51 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToDouble(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToInt16(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:17 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToInt32(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:18 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToInt64(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:18 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToSByte(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:19 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToSingle(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:19 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:20 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:21 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:21 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <summary>
            Converts the current <see cref="T:NationalInstruments.PrecisionDateTime"/> to a <see cref="T:System.DateTime"/>
            instance.
            </summary>
            <param name="provider">
            An object that implements the <see cref="T:System.IFormatProvider"/> interface. (This parameter is
            not used; specify <see langword="null"/>.)
            </param>
            <returns>
            The current <see cref="T:NationalInstruments.PrecisionDateTime"/> converted to a <see cref="T:System.DateTime"/>
            object.
            </returns>
            <lastupdated>1/26/2009 12:10:13 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:20 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.PrecisionDateTime.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:21:22 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.WholeSeconds">
            <summary>
            Gets the date and time of this instance expressed as the total number of whole seconds.
            This property is read-only.
            </summary>
            <value>
            The total number of whole seconds represented by the <see cref="T:NationalInstruments.PrecisionDateTime"/> instance.
            </value>
            <remarks>
            This property returns only whole seconds. For example, if the current
            <see cref="T:NationalInstruments.PrecisionDateTime"/> represents 4.5 seconds (4 seconds 
            and 500 milliseconds), this property returns 4.
            </remarks>
            <lastupdated>10/4/2006 9:46:35 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.FractionalSeconds">
            <summary>
            Gets the number of fractional seconds represented by the current 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> instance. This property is read-only.
            </summary>
            <value>
            The number of seconds after the whole seconds represented by this instance.
            </value>
            <remarks>
            	<para>
            This property returns the number of fractional seconds after the whole seconds
            represented by the current <see cref="T:NationalInstruments.PrecisionDateTime"/>. 
            For example, if the current <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            represented 4.5 seconds, this property returns 0.5.
            </para>
            	<para>
            This property converts <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            to fractional seconds by multiplying 
            <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            by <see cref="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks"/>.
            Therefore, some rounding errors may occur when using this property instead of
            <see cref="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks"/>
            to obtain the fractional seconds represented by this instance.
            </para>
            </remarks>
            <seealso cref="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks"/>
            <lastupdated>10/4/2006 9:41:03 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.FractionalSecondTicks">
            <summary>
            Gets the number of fractional second ticks represented by the current 
            <see cref="T:NationalInstruments.PrecisionDateTime"/> instance. This property is read-only.
            </summary>
            <value>
            The number of 2^(-64) seconds after the whole seconds represented by this instance.
            </value>
            <remarks>
            	<para>
            This property is always zero or positive. It returns the number of positive 2^(-64) seconds after
            the whole seconds of the current <see cref="T:NationalInstruments.PrecisionDateTime"/>. 
            Each tick of this value represents 0.05421010862427522170... attoseconds. For example, 
            if the time represented by the current <see cref="T:NationalInstruments.PrecisionDateTime"/> 
            is 4.8 seconds, this property returns 14757395258967641293 (0.8 represented by 2^(-64) seconds).
            </para>
            	<para>
            To convert this value to fractional seconds, multiply
            it by <see cref="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks"/>.
            Rounding errors may occur.
            </para>
            </remarks>
            <seealso cref="F:NationalInstruments.PrecisionDateTime.SecondsPerFractionalTicks"/>
            <lastupdated>10/4/2006 9:41:36 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Millisecond">
            <summary>
            Gets the millisecond component of the date represented by this instance. This property is read-only.
            </summary>
            <value>
            The milliseconds component, expressed as a value between 0 and 999.
            </value>
            <lastupdated>10/4/2006 9:44:03 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Second">
            <summary>
            Gets the seconds component of the date represented by this instance. This property is read-only.
            </summary>
            <value>
            The seconds component, expressed as a value between 0 and 59.
            </value>
            <lastupdated>10/4/2006 9:45:25 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Minute">
            <summary>
            Gets the minute component of the date represented by this instance. This property is read-only.
            </summary>
            <value>
            The minute component, expressed as a value between 0 and 59.
            </value>
            <lastupdated>10/4/2006 9:44:11 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Hour">
            <summary>
            Gets the hour component of the day represented by this instance. This property is read-only.
            </summary>
            <value>
            The hour component, expressed as a value between 0 and 23.
            </value>
            <lastupdated>10/4/2006 9:41:47 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Day">
            <summary>
            Gets the day of the month represented by this instance. This property is read-only.
            </summary>
            <value>
            The day component, expressed as a value between 1 and 31.
            </value>
            <lastupdated>10/4/2006 9:39:26 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Month">
            <summary>
            Gets the month component of the date represented by this instance. This property is read-only.
            </summary>
            <value>
            The month component, expressed as a value between 1 and 12.
            </value>
            <lastupdated>10/4/2006 9:44:23 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Year">
            <summary>
            Gets the year component of the date represented by this instance. This property is read-only.
            </summary>
            <value>
            The year, between 1 and 9999.
            </value>
            <lastupdated>10/4/2006 9:46:45 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Kind">
            <summary>
            Gets a value that indicates whether the time represented by this instance is based on local time,
            Coordinated Universal Time (UTC), or neither.
            </summary>
            <value>
            One of the <see cref="T:System.DateTimeKind"/> values. The default is 
            <see cref="F:System.DateTimeKind.Unspecified"/>.
            </value>
            <lastupdated>10/4/2006 9:43:50 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Date">
            <summary>
            Gets the date component of this instance. This property is read-only.
            </summary>
            <value>
            A new <see cref="T:NationalInstruments.PrecisionDateTime"/> with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).
            </value>
            <lastupdated>10/4/2006 9:39:16 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.TimeOfDay">
            <summary>
            Gets the time of day for this instance. This property is read-only.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionTimeSpan"/> that represents the fraction of the day that has elapsed since midnight.
            </value>
            <lastupdated>10/4/2006 9:45:36 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.DayOfWeek">
            <summary>
            Gets the day of the week represented by this instance. This property is read-only.
            </summary>
            <value>
            A <see cref="T:System.DayOfWeek"/> enumerated constant that indicates the day of the week. This property value ranges from zero, indicating Sunday, to six, indicating Saturday.
            </value>
            <lastupdated>10/4/2006 9:39:42 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.DayOfYear">
            <summary>
            Gets the day of the year represented by this instance. This property is read-only.
            </summary>
            <value>
            The day of the year, expressed as a value between 1 and 366.
            </value>
            <lastupdated>10/4/2006 2:07:07 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Now">
            <summary>
            Gets a <see cref="T:NationalInstruments.PrecisionDateTime"/> object that is set to the current 
            date and time on this computer, expressed as the local time. This property is read-only.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose 
            value is the current local date and time. This property uses 
            <see cref="P:System.DateTime.Now"/> to get the current date and time.
            </value>
            <remarks>
            The resolution of this property depends on the system timer.
            <list type="table">
            		<listheader>
            			<term>System</term>
            			<description>Approximate Resolution</description>
            		</listheader>
            		<item>
            			<term>
            Windows NT 3.5 and later
            </term>
            			<description>
            10 milliseconds
            </description>
            		</item>
            		<item>
            			<term>
            Windows 98
            </term>
            			<description>
            55 milliseconds
            </description>
            		</item>
            	</list>
            </remarks>
            <lastupdated>10/13/2006 11:16:14 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.UtcNow">
            <summary>
            Gets a <see cref="T:NationalInstruments.PrecisionDateTime"/> object that is set to
            the current date and time on this computer, expressed as the Coordinated
            Universal Time (UTC).
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> whose value is the current
            UTC date and time and whose <see cref="P:NationalInstruments.PrecisionDateTime.Kind"/>
            property returns <see cref="F:System.DateTimeKind.Utc"/>. This property uses <see cref="P:System.DateTime.UtcNow"/> to get the current UTC date and time.
            </value>
            <remarks>
            The resolution of this property depends on the system timer.
            <list type="table">
            		<listheader>
            			<term>System</term>
            			<description>Approximate Resolution</description>
            		</listheader>
            		<item>
            			<term>
            Windows NT 3.5 and later
            </term>
            			<description>
            10 milliseconds
            </description>
            		</item>
            		<item>
            			<term>
            Windows 98
            </term>
            			<description>
            55 milliseconds
            </description>
            		</item>
            	</list>
            </remarks>
            <lastupdated>10/13/2006 11:16:50 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.PrecisionDateTime.Today">
            <summary>
            Gets the current date. This property is read-only.
            </summary>
            <value>
            A <see cref="T:NationalInstruments.PrecisionDateTime"/> set to today's date, with the time component set to 00:00:00.
            </value>
            <lastupdated>10/4/2006 9:45:46 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ComplexWaveformCollection`1">
            <summary>
            Represents a strongly typed collection of <see cref="T:NationalInstruments.ComplexWaveform`1"/> objects.
            </summary>
            <typeparam name="TData">
            The underlying type of the waveforms. <typeparamref name="TData"/> supports the <see cref="T:NationalInstruments.ComplexDouble"/> data type. 
            			</typeparam>
            <threadsafety safety="unsafe"/>
            <remarks>
            Refer to <see keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</see> for more information about generics.
            </remarks>
            <seealso keyword="2994d786-c5c7-4666-ab23-4c83129fe39c" keywordType="msdn">Generics in the .NET Framework</seealso>
            <lastupdated>12/11/2007 1:21:43 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </summary>
            <remarks>
            Upon construction, <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>
            is set to an empty collection of <see cref="T:NationalInstruments.ComplexWaveform`1"/> objects.
            </remarks>
            <lastupdated>12/7/2007 10:57:46 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:02:04 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.Clone">
            <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
            <returns>
            A new object that is a deep copy of this instance.
            </returns>
            <remarks>
            	<see cref="M:NationalInstruments.ComplexWaveformCollection`1.Clone"/> creates a new object that is a deep copy
            of <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            <para>
            A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the 
            original object. If the field is a value type, a bit-by-bit copy of the field is performed. If the field is a reference type, the 
            reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the 
            clone point to the same object. In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by 
            the fields in the object.
            </para>
            </remarks>
            <lastupdated>12/7/2007 10:57:41 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.System#ICloneable#Clone">
            <exclude/>
            <lastupdated>1/23/2009 4:02:00 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.CopyTo(NationalInstruments.ComplexWaveform{`0}[],System.Int32)">
            <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
            <param name="array">
            Destination array for the collection.
            </param>
            <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<para>
            		<paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The number of elements in the collection is greater than the available space between
            <paramref name="index"/> and the end of <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than the lower bound of <paramref name="array"/>.
            </exception>
            <lastupdated>12/7/2007 10:57:58 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <exclude/>
            <lastupdated>1/23/2009 4:02:03 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
            <returns>
            The enumerator for the collection.
            </returns>
            <remarks>
            For a detailed explanation of this method, refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> in the Microsoft
            .NET Framework documentation.
            </remarks>
            <lastupdated>12/7/2007 10:58:06 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ComplexWaveformCollection`1.System#IServiceProvider#GetService(System.Type)">
            <exclude/>
            <lastupdated>1/23/2009 4:02:06 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.Channels">
            <summary>
            Gets the number of channels in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </summary>
            <value>
            The number of channels in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </value>
            <lastupdated>12/7/2007 10:54:09 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.Count">
            <summary>
            Gets the number of complex waveforms in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </summary>
            <value>
            The number of complex waveforms in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </value>
            <lastupdated>12/7/2007 10:54:14 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.Records">
            <summary>
            Gets the number of records in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </summary>
            <value>
            The number of records in <see cref="T:NationalInstruments.ComplexWaveformCollection`1"/>.
            </value>
            <lastupdated>12/7/2007 10:54:49 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.ComplexWaveform`1"/> at the specified index. 
            </summary>
            <param name="index">
            The zero-based index of the <see cref="T:NationalInstruments.ComplexWaveform`1"/> to locate in the collection.
            </param>
            <value>
            The <see cref="T:NationalInstruments.ComplexWaveform`1"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="index"/> is greater than or equal to <see cref="P:NationalInstruments.ComplexWaveformCollection`1.Count"/>.
            </para>
            </exception>
            <lastupdated>12/11/2007 1:21:51 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:NationalInstruments.ComplexWaveform`1"/> at the specified indexes. 
            </summary>
            <param name="recordIndex">
            The zero-based record index of the <see cref="T:NationalInstruments.ComplexWaveform`1"/> to locate in the collection.
            </param>
            <param name="channelIndex">
            The zero-based channel index of the <see cref="T:NationalInstruments.ComplexWaveform`1"/> to locate in the collection.
            </param>
            <value>
            The <see cref="T:NationalInstruments.ComplexWaveform`1"/> at the specified indexes.
            </value>
            <exception cref="T:System.IndexOutOfRangeException">
            	<paramref name="recordIndex"/> or <paramref name="channelIndex"/> is less than zero.
            <para>
            -or-
            </para>
            	<para>
            		<paramref name="recordIndex"/> or <paramref name="channelIndex"/> is greater than or equal to <see cref="P:NationalInstruments.ComplexWaveformCollection`1.Count"/>.
            </para>
            </exception>
            <lastupdated>12/11/2007 1:21:47 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.IsSynchronized">
            <exclude/>
            <lastupdated>12/7/2007 10:54:18 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ComplexWaveformCollection`1.SyncRoot">
            <exclude/>
            <lastupdated>12/7/2007 10:54:53 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.ExceptionBuilderBase">
            <exclude/>
            <lastupdated>7/23/2002 12:44:56 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.ExceptionBuilderBase.StackFramesToSkip">
            <exclude/>
            <lastupdated>7/23/2002 12:44:56 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Trace(System.Exception)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:53 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.LicenseException(System.Type,System.Object,System.String)">
            <exclude/>
            <lastupdated>4/11/2005 10:53:07 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentNull(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:00 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentNull(System.String,System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:00 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentOutOfRange(System.String,System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:08 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentOutOfRange(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:02 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentOutOfRangeNaNOrInfinity(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:08 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentOutOfRangeInfinity(System.String)">
            <exclude/>
            <lastupdated>1/23/2004 12:41:08 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ArgumentOutOfRangeNaN(System.String)">
            <exclude/>
            <lastupdated>5/10/2004 12:41:08 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.EmptyString(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:02 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:21 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidArgument(System.String,System.String,System.Exception)">
            <exclude/>
            <lastupdated>10/7/2002 10:50:56 AM</lastupdated>
            <updatedby>Matthew Jennings</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidArgument(System.String,System.String)">
            <exclude/>
            <lastupdated>9/24/2002 10:58:18 AM</lastupdated>
            <updatedby>Christopher Wood</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidArgument(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:21 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.IndexOutOfRange(System.String)">
            <exclude/>
            <lastupdated>4/11/2005 10:53:33 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.NotFiniteNumber(System.String,System.Double)">
            <exclude/>
            <lastupdated>5/20/2004 3:50:21 AM</lastupdated>
            <updatedby>Nauman Husain</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ObjectDisposed(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:40 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.ObjectDisposed(System.Object)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:37 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.NotSupported(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:34 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.NotSupported">
            <exclude/>
            <lastupdated>7/23/2002 12:41:31 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidOperation(System.String,System.Exception)">
            <exclude/>
            <lastupdated>10/7/2002 10:51:07 AM</lastupdated>
            <updatedby>Matthew Jennings</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidOperation(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:28 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidOperation">
            <exclude/>
            <lastupdated>7/23/2002 12:41:24 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.TypedCollectionDoesNotSupportType(System.Type,System.Object)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:57 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Format">
            <exclude/>
            <lastupdated>7/23/2002 12:41:11 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Format(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:15 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Format(System.String,System.Exception)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:18 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Serialization">
            <exclude/>
            <lastupdated>7/23/2002 12:41:43 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.Serialization(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:47 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.NotImplemented">
            <exclude/>
            <lastupdated>7/23/2002 12:41:47 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.NotImplemented(System.String)">
            <exclude/>
            <lastupdated>7/23/2002 12:41:47 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.DllNotFound(System.String)">
            <exclude/>
            <lastupdated>9/24/2002 10:50:13 AM</lastupdated>
            <updatedby>Christopher Wood</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.EntryPointNotFound(System.String)">
            <exclude/>
            <lastupdated>9/24/2002 10:50:18 AM</lastupdated>
            <updatedby>Christopher Wood</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ExceptionBuilderBase.InvalidCast(System.String,System.Type,System.Type)">
            <exclude/>
            <lastupdated>9/24/2002 10:50:18 AM</lastupdated>
            <updatedby>Christopher Wood</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.CallbackManager">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.#ctor">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.#ctor(System.ComponentModel.EventHandlerList)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.Dispose">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.Dispose(System.Boolean)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.AddEventHandler(System.Object,System.Delegate)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RemoveEventHandler(System.Object,System.Delegate)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.GetHandlerCount(System.Object)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.InvokeAsyncCallback(System.ComponentModel.AsyncOperation,System.AsyncCallback,System.IAsyncResult)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.InvokeAsyncCallbackAsync(System.ComponentModel.AsyncOperation,System.AsyncCallback,System.IAsyncResult)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseGenericEvent``1(System.ComponentModel.AsyncOperation,NationalInstruments.EventSynchronizationCallback{``0},``0)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseGenericEventAsync``1(System.ComponentModel.AsyncOperation,NationalInstruments.EventSynchronizationCallback{``0},``0)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseEventDirect(System.Object,System.Object,System.EventArgs)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseGenericEventDirect``1(System.Object,System.Object,``0)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseEvent(System.Object,System.Object,System.EventArgs)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseEventAsync(System.Object,System.Object,System.EventArgs)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseGenericEvent``1(System.Object,System.Object,``0)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.CallbackManager.RaiseGenericEventAsync``1(System.Object,System.Object,``0)">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.CallbackManager.IsDiposed">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.CallbackManager.SynchronizeCallbacks">
            <exclude/>
            <lastupdated>1/18/2006 11:36:08 AM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.WaveformTiming">
            <summary>
            Provides a class that encapsulates waveform timing information.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            	<para>
            		<see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> indicates whether the <see cref="T:NationalInstruments.WaveformTiming"/> has
            a <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>. <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/> is the time offset from the
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> to the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>. <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/>
            indicates whether the <see cref="T:NationalInstruments.WaveformTiming"/> has a <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/> and whether
            the <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> or
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            </para>
            	<para>
            Create a <see cref="T:NationalInstruments.WaveformTiming"/> class by calling one of the following factory methods:
            <see cref="M:NationalInstruments.WaveformTiming.CreateWithNoInterval(System.DateTime)"/>,
            <see cref="M:NationalInstruments.WaveformTiming.CreateWithRegularInterval(System.TimeSpan)"/>, or
            <see cref="M:NationalInstruments.WaveformTiming.CreateWithIrregularInterval(System.DateTime[])"/>. Use <see cref="F:NationalInstruments.WaveformTiming.Empty"/> to specify no timing information. 
            </para>
            </remarks>
            <lastupdated>9/19/2005 9:38:35 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>1/23/2009 4:20:37 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="F:NationalInstruments.WaveformTiming.Empty">
            <summary>
            Represents a <see cref="T:NationalInstruments.WaveformTiming"/> that has no time stamp, time offset, or sample interval.
            </summary>
            <lastupdated>9/19/2005 9:34:45 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithNoInterval(System.DateTime)">
            <summary>
            Creates a <see cref="T:NationalInstruments.WaveformTiming"/> without an interval with the specified time stamp.
            </summary>
            <param name="timeStamp">
            The <see cref="T:System.DateTime"/> representing the start of an acquisition.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.WaveformTiming"/> instance with no interval.
            </returns>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition.  When using
            this method to create a <see cref="T:NationalInstruments.WaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/> is set to zero,
            indicating that there is no time difference between the start of the acquisition and the
            time of the first sample.
            </remarks>
            <lastupdated>3/6/2007 5:14:25 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithNoInterval(System.TimeSpan)">
            <summary>
            Creates a <see cref="T:NationalInstruments.WaveformTiming"/> without an interval and with the specified time offset.
            </summary>
            <param name="timeOffset">
            The <see cref="T:System.TimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.WaveformTiming"/> instance with no interval.
            </returns>
            <remarks>
            If you use this method to create a <see cref="T:NationalInstruments.WaveformTiming"/>
            object, the value of <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> is not set,
            and <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> returns false.
            </remarks>
            <lastupdated>3/6/2007 5:14:53 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithNoInterval(System.DateTime,System.TimeSpan)">
            <summary>
            Creates a <see cref="T:NationalInstruments.WaveformTiming"/> without an interval with the specified time stamp and
            time offset.
            </summary>
            <param name="timeStamp">
            The <see cref="T:System.DateTime"/> representing the start of an acquisition.
            </param>
            <param name="timeOffset">
            The <see cref="T:System.TimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A <see cref="T:NationalInstruments.WaveformTiming"/> instance with no interval.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is less than <see cref="F:System.DateTime.MinValue"/>.
            </para>
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition and the
            <paramref name="timeOffset"/> represents the time difference between the start of
            the acquisition and the first sample.  If you use this method to create a 
            <see cref="T:NationalInstruments.WaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> is set to 
            <paramref name="timeStamp"/> and the value of <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>
            is set to <paramref name="timeOffset"/>.  The value of <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>
            is equal to the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>.
            </remarks>
            <lastupdated>3/6/2007 5:14:40 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithRegularInterval(System.TimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.WaveformTiming"/> with the specified sample interval.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:System.TimeSpan"/> between samples.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.WaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <lastupdated>3/6/2007 5:15:03 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithRegularInterval(System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.WaveformTiming"/> with the specified sample interval and
            time offset.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:System.TimeSpan"/> between samples.
            </param>
            <param name="timeOffset">
            The <see cref="T:System.TimeSpan"/> representing the time between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.WaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <remarks>
            If you use this method to create a <see cref="T:NationalInstruments.WaveformTiming"/>
            object, the value of <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> is not set,
            and <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> returns false.
            </remarks>
            <lastupdated>3/6/2007 5:15:49 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithRegularInterval(System.TimeSpan,System.DateTime)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.WaveformTiming"/> with the specified sample interval and
            time stamp.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:System.TimeSpan"/> between samples.
            </param>
            <param name="timeStamp">
            The <see cref="T:System.DateTime"/> representing the start of an acquisition.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.WaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="sampleInterval"/> is negative.
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition.  When using
            this method to create a <see cref="T:NationalInstruments.WaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/> is set to zero,
            indicating that there is no time difference between the start of the acquisition and the
            time of the first sample.
            </remarks>
            <lastupdated>3/6/2007 5:15:22 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithRegularInterval(System.TimeSpan,System.DateTime,System.TimeSpan)">
            <summary>
            Creates a regular interval <see cref="T:NationalInstruments.WaveformTiming"/> with the specified sample interval, 
            time stamp, and time offset.
            </summary>
            <param name="sampleInterval">
            The <see cref="T:System.TimeSpan"/> between samples.
            </param>
            <param name="timeStamp">
            The <see cref="T:System.DateTime"/> representing the start of an acquisition.
            </param>
            <param name="timeOffset">
            The <see cref="T:System.TimeSpan"/> representing the time difference between the
            start of an acquisition and the first sample.
            </param>
            <returns>
            A regular interval <see cref="T:NationalInstruments.WaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="sampleInterval"/> is negative.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <paramref name="timeStamp"/> plus <paramref name="timeOffset"/> is less than <see cref="F:System.DateTime.MinValue"/>.
            </para>
            </exception>
            <remarks>
            The <paramref name="timeStamp"/> represents the time of the start of an acquisition and the
            <paramref name="timeOffset"/> represents the time difference between the start of
            the acquisition and the first sample.  If you use this method to create a 
            <see cref="T:NationalInstruments.WaveformTiming"/> object, the value
            of <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> is set to 
            <paramref name="timeStamp"/> and the value of <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>
            is set to <paramref name="timeOffset"/>.  The value of <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>
            is equal to the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>.
            </remarks>
            <lastupdated>3/6/2007 5:15:37 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.CreateWithIrregularInterval(System.DateTime[])">
            <summary>
            Creates a <see cref="T:NationalInstruments.WaveformTiming"/> with an irregular interval.
            </summary>
            <param name="timeStamps">
            An array of <see cref="T:System.DateTime"/> time stamp values
            that represents the irregular interval. The array needs to contain a time stamp for each point in the waveform that specifies the time that the point was acquired.
            </param>
            <returns>
            An irregular interval <see cref="T:NationalInstruments.WaveformTiming"/> instance.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="timeStamps"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="timeStamps"/> are not in ascending order.
            </exception>
            <lastupdated>3/6/2007 5:14:15 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.GetTimeStamps(System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="count"/> is greater than the number of irregular time stamps.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="count"/> is less than zero.
            </exception>
            <lastupdated>9/19/2005 2:16:23 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.GetTimeStamps(System.Int32,System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The number of time stamps to return.
            </param>
            <returns>
            A <see cref="T:System.DateTime"/> array of time stamps.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the number of irregular time stamps.
            </para>
            </exception>
            <lastupdated>9/19/2005 2:16:35 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.GetTimeStamps(System.Int32,System.Int32,System.DateTime[],System.Int32)">
            <summary>
            Retrieves the time stamps of the waveform samples.
            </summary>
            <param name="sampleIndex">
            The start sample.
            </param>
            <param name="count">
            The number of time stamps to copy into <paramref name="buffer"/>.
            </param>
            <param name="buffer">
            The buffer to copy the time stamps into.
            </param>
            <param name="arrayIndex">
            The beginning index of <paramref name="buffer"/> to copy the time stamps into.
            </param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>, and
            <see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            	</para>
            	<para>
            - or -
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>,
            and the generated time stamp values are greater than <see cref="F:System.DateTime.MaxValue"/>.
            </para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<para>
            		<paramref name="count"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="sampleIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> is less than zero.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>,
            and <paramref name="sampleIndex"/> plus <paramref name="count"/> is greater than the number of irregular time stamps.
            </para>
            	<para>
            -or-
            </para>
            	<para>
            		<paramref name="arrayIndex"/> plus <paramref name="count"/> is greater than the <paramref name="buffer"/> length.
            </para>
            </exception>
            <lastupdated>9/19/2005 2:16:47 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.Equals(System.Object)">
            <summary>
            Returns a value that indicates if this object is equal to the specified object.
            </summary>
            <param name="obj">
            An object to compare with this object.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a
            <see cref="T:NationalInstruments.WaveformTiming"/> that represents the same value as this object.
            </returns>
            <lastupdated>2/13/2008 4:18:28 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.WaveformTiming.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.WaveformTiming"/> objects might have the same hash 
            code even though they represent different values.
            </remarks>
            <lastupdated>2/13/2008 4:18:36 PM</lastupdated>
            <updatedby>Measurement Studio</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.HasTimeStamp">
            <summary>
            Gets a value indicating whether the <see cref="T:NationalInstruments.WaveformTiming"/> has a time stamp.
            </summary>
            <value>
            	<see langword="true"/> if the <see cref="T:NationalInstruments.WaveformTiming"/> has a <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>.
            </value>
            <lastupdated>9/19/2005 9:35:31 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.TimeStamp">
            <summary>
            Gets the time stamp of the waveform.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> that specifies an occurrence in the system that is related to the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>. 
            </value>
            <remarks>The 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  plus the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/> is equal to the 
            <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>. For example, if you configure an acquisition 
            with an NI-SCOPE device to use a reference trigger, the device sets the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  to the time at which the trigger 
            occurs, the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  to the time of the first 
            sample, and the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>  to the difference between 
            the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  and 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, 
            it sets the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <seealso cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/>
            <lastupdated>3/7/2007 8:15:40 AM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.StartTime">
            <summary>
            Gets the time that the first sample in the waveform was acquired.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value representing the time of the first waveform sample. 
            </value>
            <exception cref="T:System.InvalidOperationException">
            	<see cref="P:NationalInstruments.WaveformTiming.HasTimeStamp"/> is <see langword="false"/>.
            </exception>
            <remarks>
            The <see cref="P:NationalInstruments.WaveformTiming.StartTime"/> is equal to 
            the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> plus
            the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>. 
            For example, if you configure an 
            acquisition with an NI-SCOPE device to use a reference trigger, the device sets the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  to the time at which the trigger occurs, the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  to the time of the first 
            sample, and the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>  to the difference between the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  and <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, it sets the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <seealso cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>
            <seealso cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>
            <lastupdated>3/6/2007 5:13:16 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.TimeOffset">
            <summary>
            Gets the difference between the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/> and the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  of the waveform.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan"/> that represents the time between the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/> and <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>.
            </value>
            <remarks>The 
            <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  is equal to the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  plus the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>. For example, if you configure an acquisition 
            with an NI-SCOPE device to use a reference trigger, the device sets the 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>  to the time at which the trigger 
            occurs, the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  to the time of the first 
            sample, and the <see cref="P:NationalInstruments.WaveformTiming.TimeOffset"/>  to the difference between 
            the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>  and 
            <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/>.
            <note type="note">NI-DAQmx does not record the time at which a reference trigger occurs.  As a result, 
            it sets the <see cref="P:NationalInstruments.WaveformTiming.TimeStamp"/> to the same value as the <see cref="P:NationalInstruments.WaveformTiming.StartTime"/>.
            </note>
            </remarks>
            <lastupdated>3/6/2007 5:13:35 PM</lastupdated>
            <updatedby>Staci McCormick</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.SampleIntervalMode">
            <summary>
            Gets the sample interval mode that determines how the waveform is sampled.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.WaveformSampleIntervalMode"/> that determines how the waveform is sampled.
            </value>
            <remarks>
            A <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> of <see cref="F:NationalInstruments.WaveformSampleIntervalMode.None"/>
            indicates the <see cref="T:NationalInstruments.WaveformTiming"/> does not have a valid
            <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/>. A value of
            <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> indicates the <see cref="T:NationalInstruments.WaveformTiming"/> has
            a <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/> that is constant.
            <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/>  returns the sample interval value if
            <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/>  is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>.
            <see cref="M:NationalInstruments.DigitalWaveform.GetTimeStamps"/> generates time stamps if 
            <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/> or <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>.
            An <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Irregular"/>
            value indicates the <see cref="P:NationalInstruments.WaveformTiming.SampleInterval"/> is not constant.
            </remarks>
            <lastupdated>9/19/2005 2:13:16 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.WaveformTiming.SampleInterval">
            <summary>
            Gets the time interval between samples.
            </summary>
            <value>
            The <see cref="T:System.TimeSpan"/> value specifying the time interval between samples.
            </value>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="P:NationalInstruments.WaveformTiming.SampleIntervalMode"/> is not <see cref="F:NationalInstruments.WaveformSampleIntervalMode.Regular"/>.
            </exception>
            <lastupdated>9/15/2005 5:33:03 PM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.TypeConversionMap">
            <exclude/>
            <lastupdated>7/23/2002 12:42:51 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.TypeConversionMap.#ctor">
            <exclude/>
            <lastupdated>7/23/2002 12:43:20 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.TypeConversionMap.AddEntry(System.Type,System.Type,NationalInstruments.Restricted.TypeConversionMap.ConversionHandler)">
            <exclude/>
            <lastupdated>7/23/2002 12:42:54 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.TypeConversionMap.RemoveEntry(System.Type,System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:43:07 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.TypeConversionMap.HasEntry(System.Type,System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:43:04 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.TypeConversionMap.DefaultHandler">
            <exclude/>
            <lastupdated>7/23/2002 12:43:01 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.TypeConversionMap.Item(System.Type,System.Type)">
            <exclude/>
            <lastupdated>7/23/2002 12:43:15 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.TypeConversionMap.ConversionHandler">
            <exclude/>
            <lastupdated>7/23/2002 12:42:57 AM</lastupdated>
            <updatedby>Abhishek Ghuwalewala</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.LicenserHelper">
            <exclude/>
            <lastupdated>6/5/2003 5:52:51 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenserHelper.GetPathFromRegistry(System.String)">
            <exclude/>
            <lastupdated>6/5/2003 5:53:01 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenserHelper.FileExists(System.String)">
            <exclude/>
            <lastupdated>6/5/2003 5:52:55 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenserHelper.DecryptBase64(System.String)">
            <exclude/>
            <lastupdated>6/5/2003 5:52:55 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.LicenserHelper.Encrypt(System.String)">
            <exclude/>
            <lastupdated>6/5/2003 5:52:58 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.PrecisionDateTimeEpoch">
            <exclude/>
            <lastupdated>7/25/2006 5:13:51 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.PrecisionDateTimeEpoch.DotNetEpoch">
            <exclude/>
            <lastupdated>7/25/2006 5:13:58 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.PrecisionDateTimeEpoch.CTimeEpoch">
            <exclude/>
            <lastupdated>7/25/2006 5:13:56 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.PrecisionDateTimeEpoch.LabViewEpoch">
            <exclude/>
            <lastupdated>7/25/2006 5:14:04 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="F:NationalInstruments.Restricted.PrecisionDateTimeEpoch.FileTimeEpoch">
            <exclude/>
            <lastupdated>7/25/2006 5:14:01 PM</lastupdated>
            <updatedby>Lisa Shipley</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.ImplicitRefreshItem">
            <exclude/>
            <lastupdated>7/7/2005 9:26:25 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ImplicitRefreshItem.#ctor">
            <exclude/>
            <lastupdated>7/7/2005 9:26:31 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.ImplicitRefreshItem.Refresh">
            <exclude/>
            <lastupdated>7/7/2005 9:26:34 AM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.BetaLicense">
            <exclude/>
            <lastupdated>2/11/2003 2:44:30 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.BetaLicense.#ctor(System.String[],System.String,System.String,System.DateTime,System.DateTime)">
            <exclude/>
            <lastupdated>7/8/2005 3:28:26 PM</lastupdated>
            <updatedby>Brock</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.BetaLicense.CheckForCorrectFileLicense(NationalInstruments.Internal.FileLicense)">
            <exclude/>
            <lastupdated>2/11/2003 2:44:39 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.BetaLicense.ComponentRunTimeCheck(System.Type,System.Object,System.String)">
            <exclude/>
            <lastupdated>2/11/2003 2:44:42 PM</lastupdated>
            <updatedby>Elton Wells</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.BetaLicense.LicenseType">
            <exclude/>
            <lastupdated>2/20/2003 2:40:51 PM</lastupdated>
            <updatedby>Brock Reeve</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.DigitalWaveformSignal">
            <summary>
            Represents a signal of a digital waveform.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            A <see cref="T:NationalInstruments.DigitalWaveformSignal"/> represents a signal of a digital waveform. A
            <see cref="T:NationalInstruments.DigitalWaveformSignal"/> is a signal taken over many samples. Use
            <see cref="P:NationalInstruments.DigitalWaveformSignal.States"/> to iterate over
            the digital states of the samples contained in the <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </remarks>
            <lastupdated>9/19/2005 9:32:21 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignal.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified
            <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </summary>
            <param name="obj">
            The <see cref="T:NationalInstruments.DigitalWaveformSignal"/> to compare with this
            instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a <see cref="T:NationalInstruments.DigitalWaveformSignal"/> that is equal 
            to this instance.
            </returns>
            <lastupdated>9/16/2005 10:25:02 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignal.Equals(NationalInstruments.DigitalWaveformSignal)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified
            <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </summary>
            <param name="signal">
            The <see cref="T:NationalInstruments.DigitalWaveformSignal"/> to compare with this
            instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="signal"/> is a <see cref="T:NationalInstruments.DigitalWaveformSignal"/> that is equal 
            to this instance.
            </returns>
            <lastupdated>9/16/2005 10:24:49 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.DigitalWaveformSignal.GetHashCode">
            <summary>
            Returns a hash code for the object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <remarks>
            Two <see cref="T:NationalInstruments.DigitalWaveformSignal"/> objects might have the same hash code even though they 
            represent different values.
            </remarks>
            <seealso cref="M:System.Object.GetHashCode"/>
            <lastupdated>9/16/2005 10:25:14 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignal.Owner">
            <summary>
            Gets the <see cref="T:NationalInstruments.DigitalWaveform"/> of the sample.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.DigitalWaveform"/> of the <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </value>
            <lastupdated>9/16/2005 10:23:56 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignal.States">
            <summary>
            Gets the collection of digital states that are part of the digital waveform signal.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.DigitalStateCollection"/> of digital states that are part of the
            <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </value>
            <lastupdated>9/19/2005 9:32:44 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.DigitalWaveformSignal.Name">
            <summary>
            Gets and sets the name of the digital waveform signal.
            </summary>
            <value>
            The name of the <see cref="T:NationalInstruments.DigitalWaveformSignal"/>.
            </value>
            <remarks>
            	<see cref="P:NationalInstruments.DigitalWaveformSignal.Name"/> reads and writes to
            <see cref="P:NationalInstruments.DigitalWaveform.ExtendedProperties"/> using the reserved key
            <format type="monospace">NI_LineNames</format>.
            </remarks>
            <lastupdated>9/16/2005 10:23:43 AM</lastupdated>
            <updatedby>Whitney Bates</updatedby>
            <approved>True</approved>
        </member>
    </members>
</doc>
